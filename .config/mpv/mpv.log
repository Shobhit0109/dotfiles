[   0.007][v][cplayer] mpv 0.34.1 Copyright Â© 2000-2021 mpv/MPlayer/mplayer2 projects
[   0.008][v][cplayer]  built on UNKNOWN
[   0.008][v][cplayer] FFmpeg library versions:
[   0.008][v][cplayer]    libavutil       56.70.100
[   0.008][v][cplayer]    libavcodec      58.134.100
[   0.008][v][cplayer]    libavformat     58.76.100
[   0.008][v][cplayer]    libswscale      5.9.100
[   0.008][v][cplayer]    libavfilter     7.110.100
[   0.008][v][cplayer]    libswresample   3.9.100
[   0.008][v][cplayer] FFmpeg version: 4.4.2-0ubuntu0.22.04.1+esm3
[   0.008][v][cplayer] 
[   0.008][v][cplayer] Configuration: ./waf configure --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu --confdir=/etc/mpv --zshdir=/usr/share/zsh/vendor-completions --enable-cdda --enable-dvdnav --enable-libmpv-shared --enable-sdl2 --disable-build-date --enable-dvbin
[   0.008][v][cplayer] List of enabled features: alsa asm caca cdda cplayer cplugins cuda-hwaccel cuda-interop debug-build drm dvbin dvdnav egl egl-drm egl-helpers egl-x11 ffmpeg ffmpeg-aviocontext-bytes-read ffnvcodec gbm gbm.h gl gl-wayland glibc-thread-name glob glob-posix gpl iconv jack javascript jpeg lcms2 libarchive libass libavdevice libbluray libdl libm libmpv-shared libplacebo librt linux-fstatfs linux-input-event-codes lua lua52 memfd_create optimize plain-gl posix posix-or-mingw pthreads pulse rubberband sdl2 sdl2-audio sdl2-gamepad sdl2-video sixel spirv-cross spirv-cross-shared stdatomic uchardet vaapi vaapi-drm vaapi-egl vaapi-vulkan vaapi-wayland vaapi-x-egl vaapi-x11 vdpau vector vt.h vulkan wayland wayland-protocols x11 xv zimg zlib
[   0.008][d][osc] Loading lua script @osc.lua...
[   0.008][d][ytdl_hook] Loading lua script @ytdl_hook.lua...
[   0.008][d][stats] Loading lua script @stats.lua...
[   0.008][d][console] Loading lua script @console.lua...
[   0.008][d][ytdl_hook] loading mp.defaults
[   0.008][d][auto_profiles] Loading lua script @auto_profiles.lua...
[   0.008][d][stats] loading mp.defaults
[   0.008][d][osc] loading mp.defaults
[   0.008][d][global] config path: 'scripts' -/-> '/home/shobhit/.config/mpv/scripts'
[   0.008][d][global] config path: 'scripts' -/-> '/home/shobhit/.mpv/scripts'
[   0.008][d][global] config path: 'scripts' -/-> '/etc/mpv/scripts'
[   0.008][v][cplayer] Waiting for scripts...
[   0.008][d][console] loading mp.defaults
[   0.008][d][auto_profiles] loading mp.defaults
[   0.009][d][osc] loading @osc.lua
[   0.009][d][ytdl_hook] loading @ytdl_hook.lua
[   0.009][d][stats] loading @stats.lua
[   0.009][d][console] loading @console.lua
[   0.009][d][auto_profiles] loading @auto_profiles.lua
[   0.010][d][auto_profiles] Exiting...
[   0.010][d][ytdl_hook] reading options for ytdl_hook 
[   0.010][d][global] config path: 'script-opts/ytdl_hook.conf' -/-> '/home/shobhit/.config/mpv/script-opts/ytdl_hook.conf'
[   0.010][d][global] config path: 'script-opts/ytdl_hook.conf' -/-> '/home/shobhit/.mpv/script-opts/ytdl_hook.conf'
[   0.010][d][global] config path: 'script-opts/ytdl_hook.conf' -/-> '/etc/mpv/script-opts/ytdl_hook.conf'
[   0.010][d][ytdl_hook] script-opts/ytdl_hook.conf not found. 
[   0.010][d][global] config path: 'lua-settings/ytdl_hook.conf' -/-> '/home/shobhit/.config/mpv/lua-settings/ytdl_hook.conf'
[   0.010][d][global] config path: 'lua-settings/ytdl_hook.conf' -/-> '/home/shobhit/.mpv/lua-settings/ytdl_hook.conf'
[   0.010][d][global] config path: 'lua-settings/ytdl_hook.conf' -/-> '/etc/mpv/lua-settings/ytdl_hook.conf'
[   0.010][d][ytdl_hook] lua-settings/ytdl_hook.conf not found. 
[   0.011][d][console] reading options for console 
[   0.011][d][global] config path: 'script-opts/console.conf' -/-> '/home/shobhit/.config/mpv/script-opts/console.conf'
[   0.011][d][global] config path: 'script-opts/console.conf' -/-> '/home/shobhit/.mpv/script-opts/console.conf'
[   0.011][d][global] config path: 'script-opts/console.conf' -/-> '/etc/mpv/script-opts/console.conf'
[   0.011][d][console] script-opts/console.conf not found. 
[   0.011][d][global] config path: 'lua-settings/console.conf' -/-> '/home/shobhit/.config/mpv/lua-settings/console.conf'
[   0.011][d][global] config path: 'lua-settings/console.conf' -/-> '/home/shobhit/.mpv/lua-settings/console.conf'
[   0.011][d][global] config path: 'lua-settings/console.conf' -/-> '/etc/mpv/lua-settings/console.conf'
[   0.011][d][console] lua-settings/console.conf not found. 
[   0.011][d][stats] reading options for stats 
[   0.011][d][global] config path: 'script-opts/stats.conf' -/-> '/home/shobhit/.config/mpv/script-opts/stats.conf'
[   0.011][d][global] config path: 'script-opts/stats.conf' -/-> '/home/shobhit/.mpv/script-opts/stats.conf'
[   0.011][d][global] config path: 'script-opts/stats.conf' -/-> '/etc/mpv/script-opts/stats.conf'
[   0.011][d][stats] script-opts/stats.conf not found. 
[   0.011][d][global] config path: 'lua-settings/stats.conf' -/-> '/home/shobhit/.config/mpv/lua-settings/stats.conf'
[   0.011][d][global] config path: 'lua-settings/stats.conf' -/-> '/home/shobhit/.mpv/lua-settings/stats.conf'
[   0.011][d][global] config path: 'lua-settings/stats.conf' -/-> '/etc/mpv/lua-settings/stats.conf'
[   0.011][d][stats] lua-settings/stats.conf not found. 
[   0.011][d][global] config path: 'fonts' -/-> '/home/shobhit/.config/mpv/fonts'
[   0.011][d][global] config path: 'fonts' -/-> '/home/shobhit/.mpv/fonts'
[   0.011][d][global] config path: 'fonts' -/-> '/etc/mpv/fonts'
[   0.011][d][osd/libass] ASS library version: 0x1502000 (runtime 0x1502000)
[   0.011][v][osd/libass] libass API version: 0x1502000
[   0.011][v][osd/libass] libass source: tarball: 0.15.2
[   0.011][v][osd/libass] Shaper: FriBidi 1.0.8 (SIMPLE) HarfBuzz-ng 2.7.4 (COMPLEX)
[   0.011][d][global] config path: 'subfont.ttf' -/-> '/home/shobhit/.config/mpv/subfont.ttf'
[   0.011][d][global] config path: 'subfont.ttf' -/-> '/home/shobhit/.mpv/subfont.ttf'
[   0.011][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.011][d][global] config path: 'fonts.conf' -/-> '/home/shobhit/.config/mpv/fonts.conf'
[   0.011][d][global] config path: 'fonts.conf' -/-> '/home/shobhit/.mpv/fonts.conf'
[   0.011][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.011][v][osd/libass] Setting up fonts...
[   0.013][d][osc] reading options for osc 
[   0.013][d][global] config path: 'script-opts/osc.conf' -/-> '/home/shobhit/.config/mpv/script-opts/osc.conf'
[   0.013][d][global] config path: 'script-opts/osc.conf' -/-> '/home/shobhit/.mpv/script-opts/osc.conf'
[   0.013][d][global] config path: 'script-opts/osc.conf' -/-> '/etc/mpv/script-opts/osc.conf'
[   0.013][d][osc] script-opts/osc.conf not found. 
[   0.013][d][global] config path: 'lua-settings/osc.conf' -/-> '/home/shobhit/.config/mpv/lua-settings/osc.conf'
[   0.013][d][global] config path: 'lua-settings/osc.conf' -/-> '/home/shobhit/.mpv/lua-settings/osc.conf'
[   0.013][d][global] config path: 'lua-settings/osc.conf' -/-> '/etc/mpv/lua-settings/osc.conf'
[   0.013][d][osc] lua-settings/osc.conf not found. 
[   0.031][v][osd/libass] Using font provider fontconfig
[   0.031][v][osd/libass] Done.
[   0.032][d][cplayer] Run command: define-section, flags=64, args=[name="input_console", contents="", flags="default"]
[   0.032][d][cplayer] Run command: enable-section, flags=64, args=[name="input_console", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.032][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_console", contents="", flags="force"]
[   0.032][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_console", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.033][d][cplayer] Run command: define-section, flags=64, args=[name="input_stats", contents="", flags="default"]
[   0.033][d][cplayer] Run command: define-section, flags=64, args=[name="showhide", contents="mouse_move script-binding osc/__keybinding1\nmouse_leave script-binding osc/__keybinding2\n", flags="force"]
[   0.033][d][cplayer] Run command: enable-section, flags=64, args=[name="input_stats", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.033][d][cplayer] Run command: define-section, flags=64, args=[name="showhide_wc", contents="mouse_move script-binding osc/__keybinding3\nmouse_leave script-binding osc/__keybinding4\n", flags="force"]
[   0.033][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_stats", contents="", flags="force"]
[   0.033][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_stats", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.033][d][cplayer] Run command: enable-section, flags=64, args=[name="showhide", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.033][d][cplayer] Run command: enable-section, flags=64, args=[name="showhide_wc", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.033][d][cplayer] Run command: define-section, flags=64, args=[name="input", contents="mbtn_left script-binding osc/__keybinding5\nshift+mbtn_left script-binding osc/__keybinding6\nmbtn_right script-binding osc/__keybinding7\nmbtn_mid script-binding osc/__keybinding8\nwheel_up script-binding osc/__keybinding9\nwheel_down script-binding osc/__keybinding10\nmbtn_left_dbl ignore\nshift+mbtn_left_dbl ignore\nmbtn_right_dbl ignore\n", flags="force"]
[   0.033][d][cplayer] Run command: enable-section, flags=64, args=[name="input", flags=""]
[   0.033][d][cplayer] Run command: define-section, flags=64, args=[name="window-controls", contents="mbtn_left script-binding osc/__keybinding11\n", flags="force"]
[   0.033][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   0.033][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-visibility=auto"]
[   0.033][v][cplayer] Set property: shared-script-properties -> 1
[   0.033][d][cplayer] Run command: disable-section, flags=64, args=[name="input"]
[   0.033][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   0.033][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   0.033][v][cplayer] Set property: shared-script-properties -> 1
[   0.033][v][cplayer] Done loading scripts.
[   0.033][d][global] config path: 'watch_later' -> '/home/shobhit/.config/mpv/watch_later'
[   0.033][i][cplayer] Resuming playback. This behavior can be disabled with --no-resume-playback.
[   0.033][v][cplayer] Loading config '/home/shobhit/.config/mpv/watch_later/CED7FF2C9B07222EBCB49BE13B0708B7'
[   0.033][v][cplayer] Reading config file /home/shobhit/.config/mpv/watch_later/CED7FF2C9B07222EBCB49BE13B0708B7
[   0.033][v][cplayer] Applying profile 'default'...
[   0.033][v][cplayer] Running hook: ytdl_hook/on_load
[   0.033][d][osc] osc_init 
[   0.033][v][ytdl_hook] ytdl:// hook 
[   0.033][v][ytdl_hook] not a ytdl:// url 
[   0.034][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   0.034][v][ffmpeg] Opening https://www.youtube.com/playlist?list=PLr9T5BJVg8j2Jab4D-1Mo2kz2h131hEGq
[   0.034][v][cplayer] Set property: shared-script-properties -> 1
[   0.034][d][global] user path: '/home/shobhit/Downloads/youtube.com_cookies.txt' -> '/home/shobhit/Downloads/youtube.com_cookies.txt'
[   0.034][v][ffmpeg] Loading cookie file: /home/shobhit/Downloads/youtube.com_cookies.txt
[   0.034][d][global] config path: 'fonts' -/-> '/home/shobhit/.config/mpv/fonts'
[   0.034][d][global] config path: 'fonts' -/-> '/home/shobhit/.mpv/fonts'
[   0.034][d][global] config path: 'fonts' -/-> '/etc/mpv/fonts'
[   0.034][d][osd/libass] ASS library version: 0x1502000 (runtime 0x1502000)
[   0.034][v][osd/libass] libass API version: 0x1502000
[   0.034][v][osd/libass] libass source: tarball: 0.15.2
[   0.034][v][osd/libass] Shaper: FriBidi 1.0.8 (SIMPLE) HarfBuzz-ng 2.7.4 (COMPLEX)
[   0.034][d][global] config path: 'subfont.ttf' -/-> '/home/shobhit/.config/mpv/subfont.ttf'
[   0.034][d][global] config path: 'subfont.ttf' -/-> '/home/shobhit/.mpv/subfont.ttf'
[   0.034][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.034][d][global] config path: 'fonts.conf' -/-> '/home/shobhit/.config/mpv/fonts.conf'
[   0.034][d][global] config path: 'fonts.conf' -/-> '/home/shobhit/.mpv/fonts.conf'
[   0.034][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.034][v][osd/libass] Setting up fonts...
[   0.037][d][ffmpeg] tcp: Starting connection attempt to 2404:6800:4002:826::200e port 443
[   0.045][d][ffmpeg] tcp: Successfully connected to 2404:6800:4002:826::200e port 443
[   0.053][v][osd/libass] Using font provider fontconfig
[   0.053][v][osd/libass] Done.
[   0.053][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   0.053][v][cplayer] Set property: shared-script-properties -> 1
[   0.053][d][osc] osc_init 
[   0.054][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   0.054][v][cplayer] Set property: shared-script-properties -> 1
[   0.054][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   0.054][d][cplayer] Run command: define-section, flags=64, args=[name="input_osc", contents="", flags="default"]
[   0.054][d][cplayer] Run command: enable-section, flags=64, args=[name="input_osc", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.054][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_osc", contents="", flags="force"]
[   0.054][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_osc", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.255][d][ffmpeg] resize stream to 131072 bytes, drop 0 bytes
[   0.255][v][ffmpeg] Mime-type: 'text/html; charset=utf-8'
[   0.255][d][ffmpeg] Stream opened successfully.
[   0.255][v][demux] Trying demuxers for level=normal.
[   0.255][d][demux] Trying demuxer: disc (force-level: normal)
[   0.255][d][demux] Trying demuxer: edl (force-level: normal)
[   0.255][d][demux] Trying demuxer: cue (force-level: normal)
[   0.255][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   0.255][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   0.255][d][demux] Trying demuxer: mkv (force-level: normal)
[   0.255][d][demux] Trying demuxer: libarchive (force-level: normal)
[   0.256][d][demux] Trying demuxer: lavf (force-level: normal)
[   0.372][d][ffmpeg] resize stream to 262144 bytes, drop 0 bytes
[   0.407][d][ffmpeg] resize stream to 524288 bytes, drop 0 bytes
[   0.622][d][ffmpeg] resize stream to 1048576 bytes, drop 0 bytes
[   0.667][d][ffmpeg] resize stream to 2097152 bytes, drop 0 bytes
[   0.694][v][lavf] No format found, try lowering probescore or forcing the format.
[   0.694][d][demux] Trying demuxer: mf (force-level: normal)
[   0.694][d][demux] Trying demuxer: playlist (force-level: normal)
[   0.694][d][demux] Trying demuxer: null (force-level: normal)
[   0.694][v][demux] Trying demuxers for level=unsafe.
[   0.694][d][demux] Trying demuxer: disc (force-level: unsafe)
[   0.694][d][demux] Trying demuxer: edl (force-level: unsafe)
[   0.694][d][demux] Trying demuxer: cue (force-level: unsafe)
[   0.694][d][demux] Trying demuxer: rawaudio (force-level: unsafe)
[   0.694][d][demux] Trying demuxer: rawvideo (force-level: unsafe)
[   0.694][d][demux] Trying demuxer: mkv (force-level: unsafe)
[   0.694][d][demux] Trying demuxer: libarchive (force-level: unsafe)
[   0.695][d][demux] Trying demuxer: lavf (force-level: unsafe)
[   0.733][d][ffmpeg] resize stream to 1048576 bytes, drop 0 bytes
[   0.760][d][ffmpeg] resize stream to 2097152 bytes, drop 0 bytes
[   0.787][v][lavf] No format found, try lowering probescore or forcing the format.
[   0.787][d][demux] Trying demuxer: mf (force-level: unsafe)
[   0.787][d][demux] Trying demuxer: playlist (force-level: unsafe)
[   0.787][d][demux] Trying demuxer: null (force-level: unsafe)
[   0.787][d][ffmpeg] AVIOContext: Statistics: 830676 bytes read, 0 seeks
[   0.787][v][cplayer] Opening failed or was aborted: https://www.youtube.com/playlist?list=PLr9T5BJVg8j2Jab4D-1Mo2kz2h131hEGq
[   0.787][v][cplayer] Running hook: ytdl_hook/on_load_fail
[   0.787][v][ytdl_hook] full hook 
[   0.787][d][global] config path: 'yt-dlp' -/-> '/home/shobhit/.config/mpv/yt-dlp'
[   0.787][d][global] config path: 'yt-dlp' -/-> '/home/shobhit/.mpv/yt-dlp'
[   0.787][d][global] config path: 'yt-dlp' -/-> '/etc/mpv/yt-dlp'
[   0.787][v][ytdl_hook] No youtube-dl found with path yt-dlp in config directories 
[   0.787][d][ytdl_hook] Running: yt-dlp --no-warnings -J --flat-playlist --sub-format ass/srt/best --format bestvideo[height<=?1080]+bestaudio/best --cookies /home/shobhit/Downloads/youtube.com_cookies.txt --all-subs --no-playlist -- https://www.youtube.com/playlist?list=PLr9T5BJVg8j2Jab4D-1Mo2kz2h131hEGq 
[   0.787][d][cplayer] Run command: subprocess, flags=64, args=[args="yt-dlp,--no-warnings,-J,--flat-playlist,--sub-format,ass/srt/best,--format,bestvideo[height<=?1080]+bestaudio/best,--cookies,/home/shobhit/Downloads/youtube.com_cookies.txt,--all-subs,--no-playlist,--,https://www.youtube.com/playlist?list=PLr9T5BJVg8j2Jab4D-1Mo2kz2h131hEGq", playback_only="yes", capture_size="67108864", capture_stdout="yes", capture_stderr="yes", detach="no", env="", stdin_data="", passthrough_stdin="no"]
[   3.404][v][ytdl_hook] Found youtube-dl with path yt-dlp in PATH 
[   3.406][v][ytdl_hook] youtube-dl succeeded! 
[   3.406][d][ytdl_hook] ytdl parsing took 0.005658 seconds 
[   3.406][v][cplayer] Set property: stream-open-filename="memory://#EXTM3U\n#EXTINF:0,Taylor Swift Jerk Off Challenge March 2023\nhttps://www.youtube.com/watch?v=H_qAuJgkbLg\n#EXTINF:0,Taylor Swift Jerk Off Challenge\nhttps://www.youtube.com/watch?v=SOwAaaXpRJ4\n#EXTINF:0,Taylor Swift Sexy Jerk Off Challenge\nhttps://www.youtube.com/watch?v=CcBoT0Y2wo4\n#EXTINF:0,Taylor Swift Jerk Off Challenge\nhttps://www.youtube.com/watch?v=rMbpE2s1cFw\n#EXTINF:0,Taylor Swift Jerk Off Challenge\nhttps://www.youtube.com/watch?v=iXJUAWZsA5Y\n#EXTINF:0,Taylor Swift â­ Hottest Tribute Ever - Best Moments\nhttps://www.youtube.com/watch?v=Wpo7702n1VI\n#EXTINF:0,Taylor Swift Jerk Off Challenge\nhttps://www.youtube.com/watch?v=EWcBNHC5dEg\n#EXTINF:0,Taylor Swift Mega Mashup (2020)\nhttps://www.youtube.com/watch?v=B1ZWr5IfN4s\n#EXTINF:0,Taylor Swift | Live Concert Compilation Mashup | Hot Tribute | Thouga\nhttps://www.youtube.com/watch?v=vfIRvjxxHms\n#EXTINF:0,Taylor Swift's FEET\nhttps://www.youtube.com/watch?v=cJfs8j4zoxE\n#EXTINF:0,Taylor Swift moving her sexy ass #reptour #reputationStadiumtour #Sexytaylorswift\nhttps://www.youtube.com/watch?v=gRDqEAcGw4w\n#EXTINF:0,Taylor Swift Megamix (2020)\nhttps://www.youtube.com/watch?v=ItaEYiRMOBs\n#EXTINF:0,Taylor Swift - Dance Again\nhttps://www.youtube.com/watch?v=WVbjilbPkvc\n#EXTINF:0,Taylor Swift Arrives in Gorgeous Cut-Out Gown | 2020 Golden Globes\nhttps://www.youtube.com/watch?v=BKB_HMbSlBk\n#EXTINF:0,Taylor Swift Social 8\nhttps://www.youtube.com/watch?v=5bgZniocMZ8\n#EXTINF:0,Taylor Swift Red Carpet Cam Cats Premiere\nhttps://www.youtube.com/watch?v=o5ln_CAqo8c\n#EXTINF:0,Taylor Swift arrives at 2019 Billboard Women In Music\nhttps://www.youtube.com/watch?v=oKQSEiYFPcM\n#EXTINF:0,Taylor Swift Compilation 1\nhttps://www.youtube.com/watch?v=DlERfexyvB8\n#EXTINF:0,Taylor Swift - Hot pics & Live at 2019 AMAs\nhttps://www.youtube.com/watch?v=brnv0oqrg2s\n#EXTINF:0,Taylor Swift arrives at 2019 American Music Awards Red carpet\nhttps://www.youtube.com/watch?v=Z2zydRTRbLU\n#EXTINF:0,Taylor Swift attends the American Music Awards 2019\nhttps://www.youtube.com/watch?v=vySX1Ohdyvs\n#EXTINF:0,Taylor Swift Thicc in fishnets\nhttps://www.youtube.com/watch?v=lomUkxtWBoU\n#EXTINF:0,Taylor Swift arrives at 2019 MTV Video Music Awards Red Carpet\nhttps://www.youtube.com/watch?v=1mtqE5T4WeE\n#EXTINF:0,Taylor Swift - Shake It off\nhttps://www.youtube.com/watch?v=mI84DiWhQkQ\n#EXTINF:0,Taylor Swift - You need to Calm down\nhttps://www.youtube.com/watch?v=MlsSIZYGGVw\n#EXTINF:0,Lover Album Photoshoot: Behind The Scenes\nhttps://www.youtube.com/watch?v=hKcEdTPOGGw\n#EXTINF:0,Taylor Swift Sexiest Video Clip Compilation 2019 NEW\nhttps://www.youtube.com/watch?v=8vdlgdyKs0Q\n#EXTINF:0,Taylor Swift arrives at FOX's 2019 Teen Choice Awards\nhttps://www.youtube.com/watch?v=Tbzr7gd43mc\n#EXTINF:0,TAYLOR SWIFT - LOVE STORY #PrimeDay #PrimeDayConcert\nhttps://www.youtube.com/watch?v=7UHVUYLXTZU\n#EXTINF:0,Taylor Swift Beauty part 12\nhttps://www.youtube.com/watch?v=b-E569eA5tQ\n#EXTINF:0,Taylor Swift Beauty part 11\nhttps://www.youtube.com/watch?v=55t775rJkMs\n#EXTINF:0,Taylor Swift Beauty part 10\nhttps://www.youtube.com/watch?v=PtJfCc4wuHE\n#EXTINF:0,Taylor Swift arrives at 2019 Billboard Music Awards Red carpet\nhttps://www.youtube.com/watch?v=TmZeoSVvG2w\n#EXTINF:0,Taylor Swift Beauty part 9\nhttps://www.youtube.com/watch?v=m7OKHQcSSYw\n#EXTINF:0,Taylor Swift Beauty part 8\nhttps://www.youtube.com/watch?v=co63xUcmpmE\n#EXTINF:0,Taylor Swift Beauty part 6\nhttps://www.youtube.com/watch?v=_HpUobnjnvY\n#EXTINF:0,Taylor Swift Beauty part 5\nhttps://www.youtube.com/watch?v=t_ulde0aepw\n#EXTINF:0,Sparkling in sequins! Taylor Swift shines on iHeart red carpet\nhttps://www.youtube.com/watch?v=15ssxn-x5ck\n#EXTINF:0,Taylor Swift arrives at 2019 iHeartRadio Music Awards Red carpet\nhttps://www.youtube.com/watch?v=fCych9yMHzY\n#EXTINF:0,Beautiful Taylor Swift in skirts\nhttps://www.youtube.com/watch?v=vZT-eCeB3Ho\n#EXTINF:0,Taylor Swift beauty part 6\nhttps://www.youtube.com/watch?v=tmEuQuG97Lo\n#EXTINF:0,Taylor Swift beauty part 5\nhttps://www.youtube.com/watch?v=uGrqrR7To48\n#EXTINF:0,Taylor Swift HOTTEST moments\nhttps://www.youtube.com/watch?v=2XejdnD3C_8\n#EXTINF:0,Taylor Swift beauty part 4\nhttps://www.youtube.com/watch?v=R0RCuQrwGsU\n#EXTINF:0,Taylor Swift -Sexy Compilation\nhttps://www.youtube.com/watch?v=Id8tpXNQ_20\n#EXTINF:0,Taylor Swift beauty part 3\nhttps://www.youtube.com/watch?v=RMhs3Dojjb4\n#EXTINF:0,Taylor Swift beauty part 2\nhttps://www.youtube.com/watch?v=s-S8O7yrjj8\n#EXTINF:0,Taylor Swift beauty part 1\nhttps://www.youtube.com/watch?v=n_1AVXHD7Ds\n#EXTINF:0,Taylor Swift beauty part 1\nhttps://www.youtube.com/watch?v=n_1AVXHD7Ds\n#EXTINF:0,Taylor Swift commands attention on the 2018 AMAs red carpet\nhttps://www.youtube.com/watch?v=twXRs9Y2rnU\n#EXTINF:0,Taylor swift reputation tour gorgeous\nhttps://www.youtube.com/watch?v=8nqTfJCdx8s\n#EXTINF:0,Style - Taylor Swift - Reputation Stadium Tour\nhttps://www.youtube.com/watch?v=hGHvlNvIgi4\n#EXTINF:0,Taylor Swift âI Did Something Badâ\nhttps://www.youtube.com/watch?v=flDWojQK2o8\n#EXTINF:0,Taylor swift sexy queen - For Top Fans\nhttps://www.youtube.com/watch?v=pRVOCLYrFbE\n#EXTINF:0,Taylor swift sexy legs ( Concert )\nhttps://www.youtube.com/watch?v=_P6mtwOCQR8\n#EXTINF:0,Taylor swift hot ( concert )\nhttps://www.youtube.com/watch?v=-qHJtaoZVEk\n#EXTINF:0,Taylor swift hot scenes ( Concert )\nhttps://www.youtube.com/watch?v=-e59z0rFtqk\n#EXTINF:0,Taylor swift closeup in Concert (hot)\nhttps://www.youtube.com/watch?v=14dHrPGQh-c\n#EXTINF:0,Taylor swift closeup in Concert (hot)\nhttps://www.youtube.com/watch?v=14dHrPGQh-c\n#EXTINF:0,Taylor Swift Concert (hot dress)\nhttps://www.youtube.com/watch?v=GlrrbGz9LUQ\n#EXTINF:0,Sexy Taylor Swift!\nhttps://www.youtube.com/watch?v=UJ0dHUmgMU4\n#EXTINF:0,Taylor Swift I Did Something Bad (Reputation Tour)\nhttps://www.youtube.com/watch?v=jaIkYFda9qQ\n#EXTINF:0,Taylor Swift - Gorgeous (live) - Wembley Stadium (Reputation Stadium tour)\nhttps://www.youtube.com/watch?v=jZUGRdtIXmU\n#EXTINF:0,Taylor Swift - Bad Blood (live) - Wembley Stadium (Reputation Stadium tour)\nhttps://www.youtube.com/watch?v=ppct9qWV6sE\n#EXTINF:0,Taylor Swift - Gorgeous at Reputation Stadium Tour in London\nhttps://www.youtube.com/watch?v=Xd9vcp2tG38\n#EXTINF:0,Taylor Swift - Reputation Stadium Tour funny moments HD\nhttps://www.youtube.com/watch?v=19-tgN-LNqI\n#EXTINF:0,Taylor Swift - Dress LIVE - Reputation Live Stadium Tour\nhttps://www.youtube.com/watch?v=5AtOhVmxG-k\n#EXTINF:0,Taylor Swift- Dress (REPUTATION STADIUM TOUR)\nhttps://www.youtube.com/watch?v=gHChoxWtWYI\n#EXTINF:0,Taylor Swift - Blank Space - up close & SEXY! Reputation Tour 2018 Live\nhttps://www.youtube.com/watch?v=8wCJRI5vLXs\n#EXTINF:0,Gorgeous - Taylor Swift live at The O2 London Capital Jingle Bell Ball 2017 HQ\nhttps://www.youtube.com/watch?v=JZm2PJrieL4\n#EXTINF:0,Ready for it - Taylor Swift live at The O2 London Capital Jingle Bell Ball 2017 HQ\nhttps://www.youtube.com/watch?v=CizTVdH_-Mw\n#EXTINF:0,TAYLOR SWIFT 1989 DUBLIN\nhttps://www.youtube.com/watch?v=zn5nU3R_2-o\n#EXTINF:0,Taylor Swift Super Saturday Night (Best Moments)\nhttps://www.youtube.com/watch?v=hq1dCCNEE40\n#EXTINF:0,Taylor Swift You Belong With Me (DVD The RED Tour Live)\nhttps://www.youtube.com/watch?v=xnuBnfEfTSE\n#EXTINF:0,Taylor Swift 1989 tour Sydney - Style Live\nhttps://www.youtube.com/watch?v=crgMNi1Lnq4\n#EXTINF:0,Taylor Swift - I Knew You Were Trouble Live - 8/14/15 - Levi's Stadium - [HD]\nhttps://www.youtube.com/watch?v=F5VSA6-Hv20\n#EXTINF:0,Taylor Swift - Style Excerpt (The 1989 World Tour Toronto)\nhttps://www.youtube.com/watch?v=SJUUSuCO8x4\n#EXTINF:0,Taylor Swift Houston, Tx- Style\nhttps://www.youtube.com/watch?v=FFdmpsulQ8E\n#EXTINF:0,Taylor Swift - Shake It Off - 1989 Tour - Gillette Stadium 7/25\nhttps://www.youtube.com/watch?v=cpmy1m8-zvk\n#EXTINF:0,Taylor Swift-I Knew You Were Trouble-1989 Tour NJ\nhttps://www.youtube.com/watch?v=NKqn8F6I6iM\n#EXTINF:0,Taylor Swift Tribute #1 - Beautiful\nhttps://www.youtube.com/watch?v=61W1x5mqENg\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=ZWI3jWshnHU\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=o4-dz6VEOQQ\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=e3fWBgR-4U8\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=8GL8BgRKwXk\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=9MDLt6csHos\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=m-RENKDzMbs\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=7gLfot9q53s\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=hI8CNxrBD_0\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=LJ15Fb39y0w\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=fum2-hnggqg\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=uMV2qYK5nwM\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=RWfqBhPVyao\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=B0zZKkdtuE0\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=j4HNv3Sfi6I\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=hjEfdB2dYOU\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=r-uwzi85Ttg\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=RBKC8W7atuc\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=bMbwd49Z73o\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=pVmyg65U7v4\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=eqX56LdaPnw\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=qB_MVOk-EFY\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=ZZLCzkE_ICg\n#EXTINF:0,[Private video]\nhttps://www.youtube.com/watch?v=TJXgrV4M7pc\n#EXTINF:0,[Private video]\nhttps://www.youtube.com/watch?v=Hf1OwqiUY4c\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=jK4lyq-syHQ\n#EXTINF:0,[Deleted video]\nhttps://www.youtube.com/watch?v=ep36EiuG9SA" -> 1
[   3.406][d][ytdl_hook] script running time: 0.006229 seconds 
[   3.407][v][memory] Opening memory://#EXTM3U
[   3.407][v][memory] #EXTINF:0,Taylor Swift Jerk Off Challenge March 2023
[   3.407][v][memory] https://www.youtube.com/watch?v=H_qAuJgkbLg
[   3.407][v][memory] #EXTINF:0,Taylor Swift Jerk Off Challenge
[   3.407][v][memory] https://www.youtube.com/watch?v=SOwAaaXpRJ4
[   3.407][v][memory] #EXTINF:0,Taylor Swift Sexy Jerk Off Challenge
[   3.407][v][memory] https://www.youtube.com/watch?v=CcBoT0Y2wo4
[   3.407][v][memory] #EXTINF:0,Taylor Swift Jerk Off Challenge
[   3.407][v][memory] https://www.youtube.com/watch?v=rMbpE2s1cFw
[   3.407][v][memory] #EXTINF:0,Taylor Swift Jerk Off Challenge
[   3.407][v][memory] https://www.youtube.com/watch?v=iXJUAWZsA5Y
[   3.407][v][memory] #EXTINF:0,Taylor Swift â­ Hottest Tribute Ever - Best Moments
[   3.407][v][memory] https://www.youtube.com/watch?v=Wpo7702n1VI
[   3.407][v][memory] #EXTINF:0,Taylor Swift Jerk Off Challenge
[   3.407][v][memory] https://www.youtube.com/watch?v=EWcBNHC5dEg
[   3.407][v][memory] #EXTINF:0,Taylor Swift Mega Mashup (2020)
[   3.407][v][memory] https://www.youtube.com/watch?v=B1ZWr5IfN4s
[   3.407][v][memory] #EXTINF:0,Taylor Swift | Live Concert Compilation Mashup | Hot Tribute | Thouga
[   3.407][v][memory] https://www.youtube.com/watch?v=vfIRvjxxHms
[   3.407][v][memory] #EXTINF:0,Taylor Swift's FEET
[   3.407][v][memory] https://www.youtube.com/watch?v=cJfs8j4zoxE
[   3.407][v][memory] #EXTINF:0,Taylor Swift moving her sexy ass #reptour #reputationStadiumtour #Sexytaylorswift
[   3.407][v][memory] https://www.youtube.com/watch?v=gRDqEAcGw4w
[   3.407][v][memory] #EXTINF:0,Taylor Swift Megamix (2020)
[   3.407][v][memory] https://www.youtube.com/watch?v=ItaEYiRMOBs
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Dance Again
[   3.407][v][memory] https://www.youtube.com/watch?v=WVbjilbPkvc
[   3.407][v][memory] #EXTINF:0,Taylor Swift Arrives in Gorgeous Cut-Out Gown | 2020 Golden Globes
[   3.407][v][memory] https://www.youtube.com/watch?v=BKB_HMbSlBk
[   3.407][v][memory] #EXTINF:0,Taylor Swift Social 8
[   3.407][v][memory] https://www.youtube.com/watch?v=5bgZniocMZ8
[   3.407][v][memory] #EXTINF:0,Taylor Swift Red Carpet Cam Cats Premiere
[   3.407][v][memory] https://www.youtube.com/watch?v=o5ln_CAqo8c
[   3.407][v][memory] #EXTINF:0,Taylor Swift arrives at 2019 Billboard Women In Music
[   3.407][v][memory] https://www.youtube.com/watch?v=oKQSEiYFPcM
[   3.407][v][memory] #EXTINF:0,Taylor Swift Compilation 1
[   3.407][v][memory] https://www.youtube.com/watch?v=DlERfexyvB8
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Hot pics & Live at 2019 AMAs
[   3.407][v][memory] https://www.youtube.com/watch?v=brnv0oqrg2s
[   3.407][v][memory] #EXTINF:0,Taylor Swift arrives at 2019 American Music Awards Red carpet
[   3.407][v][memory] https://www.youtube.com/watch?v=Z2zydRTRbLU
[   3.407][v][memory] #EXTINF:0,Taylor Swift attends the American Music Awards 2019
[   3.407][v][memory] https://www.youtube.com/watch?v=vySX1Ohdyvs
[   3.407][v][memory] #EXTINF:0,Taylor Swift Thicc in fishnets
[   3.407][v][memory] https://www.youtube.com/watch?v=lomUkxtWBoU
[   3.407][v][memory] #EXTINF:0,Taylor Swift arrives at 2019 MTV Video Music Awards Red Carpet
[   3.407][v][memory] https://www.youtube.com/watch?v=1mtqE5T4WeE
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Shake It off
[   3.407][v][memory] https://www.youtube.com/watch?v=mI84DiWhQkQ
[   3.407][v][memory] #EXTINF:0,Taylor Swift - You need to Calm down
[   3.407][v][memory] https://www.youtube.com/watch?v=MlsSIZYGGVw
[   3.407][v][memory] #EXTINF:0,Lover Album Photoshoot: Behind The Scenes
[   3.407][v][memory] https://www.youtube.com/watch?v=hKcEdTPOGGw
[   3.407][v][memory] #EXTINF:0,Taylor Swift Sexiest Video Clip Compilation 2019 NEW
[   3.407][v][memory] https://www.youtube.com/watch?v=8vdlgdyKs0Q
[   3.407][v][memory] #EXTINF:0,Taylor Swift arrives at FOX's 2019 Teen Choice Awards
[   3.407][v][memory] https://www.youtube.com/watch?v=Tbzr7gd43mc
[   3.407][v][memory] #EXTINF:0,TAYLOR SWIFT - LOVE STORY #PrimeDay #PrimeDayConcert
[   3.407][v][memory] https://www.youtube.com/watch?v=7UHVUYLXTZU
[   3.407][v][memory] #EXTINF:0,Taylor Swift Beauty part 12
[   3.407][v][memory] https://www.youtube.com/watch?v=b-E569eA5tQ
[   3.407][v][memory] #EXTINF:0,Taylor Swift Beauty part 11
[   3.407][v][memory] https://www.youtube.com/watch?v=55t775rJkMs
[   3.407][v][memory] #EXTINF:0,Taylor Swift Beauty part 10
[   3.407][v][memory] https://www.youtube.com/watch?v=PtJfCc4wuHE
[   3.407][v][memory] #EXTINF:0,Taylor Swift arrives at 2019 Billboard Music Awards Red carpet
[   3.407][v][memory] https://www.youtube.com/watch?v=TmZeoSVvG2w
[   3.407][v][memory] #EXTINF:0,Taylor Swift Beauty part 9
[   3.407][v][memory] https://www.youtube.com/watch?v=m7OKHQcSSYw
[   3.407][v][memory] #EXTINF:0,Taylor Swift Beauty part 8
[   3.407][v][memory] https://www.youtube.com/watch?v=co63xUcmpmE
[   3.407][v][memory] #EXTINF:0,Taylor Swift Beauty part 6
[   3.407][v][memory] https://www.youtube.com/watch?v=_HpUobnjnvY
[   3.407][v][memory] #EXTINF:0,Taylor Swift Beauty part 5
[   3.407][v][memory] https://www.youtube.com/watch?v=t_ulde0aepw
[   3.407][v][memory] #EXTINF:0,Sparkling in sequins! Taylor Swift shines on iHeart red carpet
[   3.407][v][memory] https://www.youtube.com/watch?v=15ssxn-x5ck
[   3.407][v][memory] #EXTINF:0,Taylor Swift arrives at 2019 iHeartRadio Music Awards Red carpet
[   3.407][v][memory] https://www.youtube.com/watch?v=fCych9yMHzY
[   3.407][v][memory] #EXTINF:0,Beautiful Taylor Swift in skirts
[   3.407][v][memory] https://www.youtube.com/watch?v=vZT-eCeB3Ho
[   3.407][v][memory] #EXTINF:0,Taylor Swift beauty part 6
[   3.407][v][memory] https://www.youtube.com/watch?v=tmEuQuG97Lo
[   3.407][v][memory] #EXTINF:0,Taylor Swift beauty part 5
[   3.407][v][memory] https://www.youtube.com/watch?v=uGrqrR7To48
[   3.407][v][memory] #EXTINF:0,Taylor Swift HOTTEST moments
[   3.407][v][memory] https://www.youtube.com/watch?v=2XejdnD3C_8
[   3.407][v][memory] #EXTINF:0,Taylor Swift beauty part 4
[   3.407][v][memory] https://www.youtube.com/watch?v=R0RCuQrwGsU
[   3.407][v][memory] #EXTINF:0,Taylor Swift -Sexy Compilation
[   3.407][v][memory] https://www.youtube.com/watch?v=Id8tpXNQ_20
[   3.407][v][memory] #EXTINF:0,Taylor Swift beauty part 3
[   3.407][v][memory] https://www.youtube.com/watch?v=RMhs3Dojjb4
[   3.407][v][memory] #EXTINF:0,Taylor Swift beauty part 2
[   3.407][v][memory] https://www.youtube.com/watch?v=s-S8O7yrjj8
[   3.407][v][memory] #EXTINF:0,Taylor Swift beauty part 1
[   3.407][v][memory] https://www.youtube.com/watch?v=n_1AVXHD7Ds
[   3.407][v][memory] #EXTINF:0,Taylor Swift beauty part 1
[   3.407][v][memory] https://www.youtube.com/watch?v=n_1AVXHD7Ds
[   3.407][v][memory] #EXTINF:0,Taylor Swift commands attention on the 2018 AMAs red carpet
[   3.407][v][memory] https://www.youtube.com/watch?v=twXRs9Y2rnU
[   3.407][v][memory] #EXTINF:0,Taylor swift reputation tour gorgeous
[   3.407][v][memory] https://www.youtube.com/watch?v=8nqTfJCdx8s
[   3.407][v][memory] #EXTINF:0,Style - Taylor Swift - Reputation Stadium Tour
[   3.407][v][memory] https://www.youtube.com/watch?v=hGHvlNvIgi4
[   3.407][v][memory] #EXTINF:0,Taylor Swift âI Did Something Badâ
[   3.407][v][memory] https://www.youtube.com/watch?v=flDWojQK2o8
[   3.407][v][memory] #EXTINF:0,Taylor swift sexy queen - For Top Fans
[   3.407][v][memory] https://www.youtube.com/watch?v=pRVOCLYrFbE
[   3.407][v][memory] #EXTINF:0,Taylor swift sexy legs ( Concert )
[   3.407][v][memory] https://www.youtube.com/watch?v=_P6mtwOCQR8
[   3.407][v][memory] #EXTINF:0,Taylor swift hot ( concert )
[   3.407][v][memory] https://www.youtube.com/watch?v=-qHJtaoZVEk
[   3.407][v][memory] #EXTINF:0,Taylor swift hot scenes ( Concert )
[   3.407][v][memory] https://www.youtube.com/watch?v=-e59z0rFtqk
[   3.407][v][memory] #EXTINF:0,Taylor swift closeup in Concert (hot)
[   3.407][v][memory] https://www.youtube.com/watch?v=14dHrPGQh-c
[   3.407][v][memory] #EXTINF:0,Taylor swift closeup in Concert (hot)
[   3.407][v][memory] https://www.youtube.com/watch?v=14dHrPGQh-c
[   3.407][v][memory] #EXTINF:0,Taylor Swift Concert (hot dress)
[   3.407][v][memory] https://www.youtube.com/watch?v=GlrrbGz9LUQ
[   3.407][v][memory] #EXTINF:0,Sexy Taylor Swift!
[   3.407][v][memory] https://www.youtube.com/watch?v=UJ0dHUmgMU4
[   3.407][v][memory] #EXTINF:0,Taylor Swift I Did Something Bad (Reputation Tour)
[   3.407][v][memory] https://www.youtube.com/watch?v=jaIkYFda9qQ
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Gorgeous (live) - Wembley Stadium (Reputation Stadium tour)
[   3.407][v][memory] https://www.youtube.com/watch?v=jZUGRdtIXmU
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Bad Blood (live) - Wembley Stadium (Reputation Stadium tour)
[   3.407][v][memory] https://www.youtube.com/watch?v=ppct9qWV6sE
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Gorgeous at Reputation Stadium Tour in London
[   3.407][v][memory] https://www.youtube.com/watch?v=Xd9vcp2tG38
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Reputation Stadium Tour funny moments HD
[   3.407][v][memory] https://www.youtube.com/watch?v=19-tgN-LNqI
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Dress LIVE - Reputation Live Stadium Tour
[   3.407][v][memory] https://www.youtube.com/watch?v=5AtOhVmxG-k
[   3.407][v][memory] #EXTINF:0,Taylor Swift- Dress (REPUTATION STADIUM TOUR)
[   3.407][v][memory] https://www.youtube.com/watch?v=gHChoxWtWYI
[   3.407][v][memory] #EXTINF:0,Taylor Swift - Blank Space - up close & SEXY! Reputation Tour 2018 Live
[   3.407][v][memory] https://www.youtube.com/watch?v=8wCJRI5vLXs
[   3.407][v][memory] #EXTINF:0,Gorgeous - Taylor Swift live at The O2 London Capital Jingle Bell Ball 2017 HQ
[   3.407][v][memory] https://www.youtube.com/watch?v=JZm2PJrieL4
[   3.407][v][memory] #EXTINF:0,Ready for it - Taylor Swift live at The O2 London Capital Jingle Bell Ball 2017 HQ
[   3.408][v][memory] https://www.youtube.com/watch?v=CizTVdH_-Mw
[   3.408][v][memory] #EXTINF:0,TAYLOR SWIFT 1989 DUBLIN
[   3.408][v][memory] https://www.youtube.com/watch?v=zn5nU3R_2-o
[   3.408][v][memory] #EXTINF:0,Taylor Swift Super Saturday Night (Best Moments)
[   3.408][v][memory] https://www.youtube.com/watch?v=hq1dCCNEE40
[   3.408][v][memory] #EXTINF:0,Taylor Swift You Belong With Me (DVD The RED Tour Live)
[   3.408][v][memory] https://www.youtube.com/watch?v=xnuBnfEfTSE
[   3.408][v][memory] #EXTINF:0,Taylor Swift 1989 tour Sydney - Style Live
[   3.408][v][memory] https://www.youtube.com/watch?v=crgMNi1Lnq4
[   3.408][v][memory] #EXTINF:0,Taylor Swift - I Knew You Were Trouble Live - 8/14/15 - Levi's Stadium - [HD]
[   3.408][v][memory] https://www.youtube.com/watch?v=F5VSA6-Hv20
[   3.408][v][memory] #EXTINF:0,Taylor Swift - Style Excerpt (The 1989 World Tour Toronto)
[   3.408][v][memory] https://www.youtube.com/watch?v=SJUUSuCO8x4
[   3.408][v][memory] #EXTINF:0,Taylor Swift Houston, Tx- Style
[   3.408][v][memory] https://www.youtube.com/watch?v=FFdmpsulQ8E
[   3.408][v][memory] #EXTINF:0,Taylor Swift - Shake It Off - 1989 Tour - Gillette Stadium 7/25
[   3.408][v][memory] https://www.youtube.com/watch?v=cpmy1m8-zvk
[   3.408][v][memory] #EXTINF:0,Taylor Swift-I Knew You Were Trouble-1989 Tour NJ
[   3.408][v][memory] https://www.youtube.com/watch?v=NKqn8F6I6iM
[   3.408][v][memory] #EXTINF:0,Taylor Swift Tribute #1 - Beautiful
[   3.408][v][memory] https://www.youtube.com/watch?v=61W1x5mqENg
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=ZWI3jWshnHU
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=o4-dz6VEOQQ
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=e3fWBgR-4U8
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=8GL8BgRKwXk
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=9MDLt6csHos
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=m-RENKDzMbs
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=7gLfot9q53s
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=hI8CNxrBD_0
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=LJ15Fb39y0w
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=fum2-hnggqg
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=uMV2qYK5nwM
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=RWfqBhPVyao
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=B0zZKkdtuE0
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=j4HNv3Sfi6I
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=hjEfdB2dYOU
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=r-uwzi85Ttg
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=RBKC8W7atuc
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=bMbwd49Z73o
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=pVmyg65U7v4
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=eqX56LdaPnw
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=qB_MVOk-EFY
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=ZZLCzkE_ICg
[   3.408][v][memory] #EXTINF:0,[Private video]
[   3.408][v][memory] https://www.youtube.com/watch?v=TJXgrV4M7pc
[   3.408][v][memory] #EXTINF:0,[Private video]
[   3.408][v][memory] https://www.youtube.com/watch?v=Hf1OwqiUY4c
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=jK4lyq-syHQ
[   3.408][v][memory] #EXTINF:0,[Deleted video]
[   3.408][v][memory] https://www.youtube.com/watch?v=ep36EiuG9SA
[   3.408][d][memory] resize stream to 131072 bytes, drop 0 bytes
[   3.408][d][memory] Stream opened successfully.
[   3.408][v][demux] Trying demuxers for level=normal.
[   3.408][d][demux] Trying demuxer: disc (force-level: normal)
[   3.408][d][demux] Trying demuxer: edl (force-level: normal)
[   3.408][d][demux] Trying demuxer: cue (force-level: normal)
[   3.408][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   3.408][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   3.408][d][demux] Trying demuxer: mkv (force-level: normal)
[   3.408][d][demux] Trying demuxer: libarchive (force-level: normal)
[   3.408][d][demux] Trying demuxer: lavf (force-level: normal)
[   3.414][v][lavf] No format found, try lowering probescore or forcing the format.
[   3.414][d][demux] Trying demuxer: mf (force-level: normal)
[   3.414][d][demux] Trying demuxer: playlist (force-level: normal)
[   3.414][v][playlist] demuxer read all data; closing stream
[   3.414][v][demux] Detected file format: m3u (Playlist file)
[   3.414][v][cplayer] Opening done: memory://#EXTM3U
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Jerk Off Challenge March 2023
[   3.414][v][cplayer] https://www.youtube.com/watch?v=H_qAuJgkbLg
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Jerk Off Challenge
[   3.414][v][cplayer] https://www.youtube.com/watch?v=SOwAaaXpRJ4
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Sexy Jerk Off Challenge
[   3.414][v][cplayer] https://www.youtube.com/watch?v=CcBoT0Y2wo4
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Jerk Off Challenge
[   3.414][v][cplayer] https://www.youtube.com/watch?v=rMbpE2s1cFw
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Jerk Off Challenge
[   3.414][v][cplayer] https://www.youtube.com/watch?v=iXJUAWZsA5Y
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift â­ Hottest Tribute Ever - Best Moments
[   3.414][v][cplayer] https://www.youtube.com/watch?v=Wpo7702n1VI
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Jerk Off Challenge
[   3.414][v][cplayer] https://www.youtube.com/watch?v=EWcBNHC5dEg
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Mega Mashup (2020)
[   3.414][v][cplayer] https://www.youtube.com/watch?v=B1ZWr5IfN4s
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift | Live Concert Compilation Mashup | Hot Tribute | Thouga
[   3.414][v][cplayer] https://www.youtube.com/watch?v=vfIRvjxxHms
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift's FEET
[   3.414][v][cplayer] https://www.youtube.com/watch?v=cJfs8j4zoxE
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift moving her sexy ass #reptour #reputationStadiumtour #Sexytaylorswift
[   3.414][v][cplayer] https://www.youtube.com/watch?v=gRDqEAcGw4w
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Megamix (2020)
[   3.414][v][cplayer] https://www.youtube.com/watch?v=ItaEYiRMOBs
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift - Dance Again
[   3.414][v][cplayer] https://www.youtube.com/watch?v=WVbjilbPkvc
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Arrives in Gorgeous Cut-Out Gown | 2020 Golden Globes
[   3.414][v][cplayer] https://www.youtube.com/watch?v=BKB_HMbSlBk
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Social 8
[   3.414][v][cplayer] https://www.youtube.com/watch?v=5bgZniocMZ8
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Red Carpet Cam Cats Premiere
[   3.414][v][cplayer] https://www.youtube.com/watch?v=o5ln_CAqo8c
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift arrives at 2019 Billboard Women In Music
[   3.414][v][cplayer] https://www.youtube.com/watch?v=oKQSEiYFPcM
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Compilation 1
[   3.414][v][cplayer] https://www.youtube.com/watch?v=DlERfexyvB8
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift - Hot pics & Live at 2019 AMAs
[   3.414][v][cplayer] https://www.youtube.com/watch?v=brnv0oqrg2s
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift arrives at 2019 American Music Awards Red carpet
[   3.414][v][cplayer] https://www.youtube.com/watch?v=Z2zydRTRbLU
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift attends the American Music Awards 2019
[   3.414][v][cplayer] https://www.youtube.com/watch?v=vySX1Ohdyvs
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Thicc in fishnets
[   3.414][v][cplayer] https://www.youtube.com/watch?v=lomUkxtWBoU
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift arrives at 2019 MTV Video Music Awards Red Carpet
[   3.414][v][cplayer] https://www.youtube.com/watch?v=1mtqE5T4WeE
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift - Shake It off
[   3.414][v][cplayer] https://www.youtube.com/watch?v=mI84DiWhQkQ
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift - You need to Calm down
[   3.414][v][cplayer] https://www.youtube.com/watch?v=MlsSIZYGGVw
[   3.414][v][cplayer] #EXTINF:0,Lover Album Photoshoot: Behind The Scenes
[   3.414][v][cplayer] https://www.youtube.com/watch?v=hKcEdTPOGGw
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Sexiest Video Clip Compilation 2019 NEW
[   3.414][v][cplayer] https://www.youtube.com/watch?v=8vdlgdyKs0Q
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift arrives at FOX's 2019 Teen Choice Awards
[   3.414][v][cplayer] https://www.youtube.com/watch?v=Tbzr7gd43mc
[   3.414][v][cplayer] #EXTINF:0,TAYLOR SWIFT - LOVE STORY #PrimeDay #PrimeDayConcert
[   3.414][v][cplayer] https://www.youtube.com/watch?v=7UHVUYLXTZU
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Beauty part 12
[   3.414][v][cplayer] https://www.youtube.com/watch?v=b-E569eA5tQ
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Beauty part 11
[   3.414][v][cplayer] https://www.youtube.com/watch?v=55t775rJkMs
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Beauty part 10
[   3.414][v][cplayer] https://www.youtube.com/watch?v=PtJfCc4wuHE
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift arrives at 2019 Billboard Music Awards Red carpet
[   3.414][v][cplayer] https://www.youtube.com/watch?v=TmZeoSVvG2w
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Beauty part 9
[   3.414][v][cplayer] https://www.youtube.com/watch?v=m7OKHQcSSYw
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Beauty part 8
[   3.414][v][cplayer] https://www.youtube.com/watch?v=co63xUcmpmE
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Beauty part 6
[   3.414][v][cplayer] https://www.youtube.com/watch?v=_HpUobnjnvY
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift Beauty part 5
[   3.414][v][cplayer] https://www.youtube.com/watch?v=t_ulde0aepw
[   3.414][v][cplayer] #EXTINF:0,Sparkling in sequins! Taylor Swift shines on iHeart red carpet
[   3.414][v][cplayer] https://www.youtube.com/watch?v=15ssxn-x5ck
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift arrives at 2019 iHeartRadio Music Awards Red carpet
[   3.414][v][cplayer] https://www.youtube.com/watch?v=fCych9yMHzY
[   3.414][v][cplayer] #EXTINF:0,Beautiful Taylor Swift in skirts
[   3.414][v][cplayer] https://www.youtube.com/watch?v=vZT-eCeB3Ho
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift beauty part 6
[   3.414][v][cplayer] https://www.youtube.com/watch?v=tmEuQuG97Lo
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift beauty part 5
[   3.414][v][cplayer] https://www.youtube.com/watch?v=uGrqrR7To48
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift HOTTEST moments
[   3.414][v][cplayer] https://www.youtube.com/watch?v=2XejdnD3C_8
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift beauty part 4
[   3.414][v][cplayer] https://www.youtube.com/watch?v=R0RCuQrwGsU
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift -Sexy Compilation
[   3.414][v][cplayer] https://www.youtube.com/watch?v=Id8tpXNQ_20
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift beauty part 3
[   3.414][v][cplayer] https://www.youtube.com/watch?v=RMhs3Dojjb4
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift beauty part 2
[   3.414][v][cplayer] https://www.youtube.com/watch?v=s-S8O7yrjj8
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift beauty part 1
[   3.414][v][cplayer] https://www.youtube.com/watch?v=n_1AVXHD7Ds
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift beauty part 1
[   3.414][v][cplayer] https://www.youtube.com/watch?v=n_1AVXHD7Ds
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift commands attention on the 2018 AMAs red carpet
[   3.414][v][cplayer] https://www.youtube.com/watch?v=twXRs9Y2rnU
[   3.414][v][cplayer] #EXTINF:0,Taylor swift reputation tour gorgeous
[   3.414][v][cplayer] https://www.youtube.com/watch?v=8nqTfJCdx8s
[   3.414][v][cplayer] #EXTINF:0,Style - Taylor Swift - Reputation Stadium Tour
[   3.414][v][cplayer] https://www.youtube.com/watch?v=hGHvlNvIgi4
[   3.414][v][cplayer] #EXTINF:0,Taylor Swift âI Did Something Badâ
[   3.414][v][cplayer] https://www.youtube.com/watch?v=flDWojQK2o8
[   3.414][v][cplayer] #EXTINF:0,Taylor swift sexy queen - For Top Fans
[   3.414][v][cplayer] https://www.youtube.com/watch?v=pRVOCLYrFbE
[   3.414][v][cplayer] #EXTINF:0,Taylor swift sexy legs ( Concert )
[   3.414][v][cplayer] https://www.youtube.com/watch?v=_P6mtwOCQR8
[   3.414][v][cplayer] #EXTINF:0,Taylor swift hot ( concert )
[   3.414][v][cplayer] https://www.youtube.com/watch?v=-qHJtaoZVEk
[   3.415][v][cplayer] #EXTINF:0,Taylor swift hot scenes ( Concert )
[   3.415][v][cplayer] https://www.youtube.com/watch?v=-e59z0rFtqk
[   3.415][v][cplayer] #EXTINF:0,Taylor swift closeup in Concert (hot)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=14dHrPGQh-c
[   3.415][v][cplayer] #EXTINF:0,Taylor swift closeup in Concert (hot)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=14dHrPGQh-c
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift Concert (hot dress)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=GlrrbGz9LUQ
[   3.415][v][cplayer] #EXTINF:0,Sexy Taylor Swift!
[   3.415][v][cplayer] https://www.youtube.com/watch?v=UJ0dHUmgMU4
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift I Did Something Bad (Reputation Tour)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=jaIkYFda9qQ
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - Gorgeous (live) - Wembley Stadium (Reputation Stadium tour)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=jZUGRdtIXmU
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - Bad Blood (live) - Wembley Stadium (Reputation Stadium tour)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=ppct9qWV6sE
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - Gorgeous at Reputation Stadium Tour in London
[   3.415][v][cplayer] https://www.youtube.com/watch?v=Xd9vcp2tG38
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - Reputation Stadium Tour funny moments HD
[   3.415][v][cplayer] https://www.youtube.com/watch?v=19-tgN-LNqI
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - Dress LIVE - Reputation Live Stadium Tour
[   3.415][v][cplayer] https://www.youtube.com/watch?v=5AtOhVmxG-k
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift- Dress (REPUTATION STADIUM TOUR)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=gHChoxWtWYI
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - Blank Space - up close & SEXY! Reputation Tour 2018 Live
[   3.415][v][cplayer] https://www.youtube.com/watch?v=8wCJRI5vLXs
[   3.415][v][cplayer] #EXTINF:0,Gorgeous - Taylor Swift live at The O2 London Capital Jingle Bell Ball 2017 HQ
[   3.415][v][cplayer] https://www.youtube.com/watch?v=JZm2PJrieL4
[   3.415][v][cplayer] #EXTINF:0,Ready for it - Taylor Swift live at The O2 London Capital Jingle Bell Ball 2017 HQ
[   3.415][v][cplayer] https://www.youtube.com/watch?v=CizTVdH_-Mw
[   3.415][v][cplayer] #EXTINF:0,TAYLOR SWIFT 1989 DUBLIN
[   3.415][v][cplayer] https://www.youtube.com/watch?v=zn5nU3R_2-o
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift Super Saturday Night (Best Moments)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=hq1dCCNEE40
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift You Belong With Me (DVD The RED Tour Live)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=xnuBnfEfTSE
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift 1989 tour Sydney - Style Live
[   3.415][v][cplayer] https://www.youtube.com/watch?v=crgMNi1Lnq4
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - I Knew You Were Trouble Live - 8/14/15 - Levi's Stadium - [HD]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=F5VSA6-Hv20
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - Style Excerpt (The 1989 World Tour Toronto)
[   3.415][v][cplayer] https://www.youtube.com/watch?v=SJUUSuCO8x4
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift Houston, Tx- Style
[   3.415][v][cplayer] https://www.youtube.com/watch?v=FFdmpsulQ8E
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift - Shake It Off - 1989 Tour - Gillette Stadium 7/25
[   3.415][v][cplayer] https://www.youtube.com/watch?v=cpmy1m8-zvk
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift-I Knew You Were Trouble-1989 Tour NJ
[   3.415][v][cplayer] https://www.youtube.com/watch?v=NKqn8F6I6iM
[   3.415][v][cplayer] #EXTINF:0,Taylor Swift Tribute #1 - Beautiful
[   3.415][v][cplayer] https://www.youtube.com/watch?v=61W1x5mqENg
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=ZWI3jWshnHU
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=o4-dz6VEOQQ
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=e3fWBgR-4U8
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=8GL8BgRKwXk
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=9MDLt6csHos
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=m-RENKDzMbs
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=7gLfot9q53s
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=hI8CNxrBD_0
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=LJ15Fb39y0w
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=fum2-hnggqg
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=uMV2qYK5nwM
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=RWfqBhPVyao
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=B0zZKkdtuE0
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=j4HNv3Sfi6I
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=hjEfdB2dYOU
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=r-uwzi85Ttg
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=RBKC8W7atuc
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=bMbwd49Z73o
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=pVmyg65U7v4
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=eqX56LdaPnw
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=qB_MVOk-EFY
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=ZZLCzkE_ICg
[   3.415][v][cplayer] #EXTINF:0,[Private video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=TJXgrV4M7pc
[   3.415][v][cplayer] #EXTINF:0,[Private video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=Hf1OwqiUY4c
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=jK4lyq-syHQ
[   3.415][v][cplayer] #EXTINF:0,[Deleted video]
[   3.415][v][cplayer] https://www.youtube.com/watch?v=ep36EiuG9SA
[   3.415][v][cplayer] finished playback, success (reason 5)
[   3.415][i][cplayer] 
[   3.415][i][cplayer] Resuming playback. This behavior can be disabled with --no-resume-playback.
[   3.415][v][cplayer] Loading config '/home/shobhit/.config/mpv/watch_later/74A467FE49F91381D23E87BACBC3D333'
[   3.415][v][cplayer] Reading config file /home/shobhit/.config/mpv/watch_later/74A467FE49F91381D23E87BACBC3D333
[   3.415][v][cplayer] Applying profile 'default'...
[   3.415][v][cplayer] Setting option 'start' = '182.666000' (flags = 36)
[   3.415][v][cplayer] Setting option 'volume' = '112.000000' (flags = 36)
[   3.415][i][cplayer] Playing: https://www.youtube.com/watch?v=H_qAuJgkbLg
[   3.415][v][cplayer] Running hook: ytdl_hook/on_load
[   3.415][v][ytdl_hook] ytdl:// hook 
[   3.415][v][ytdl_hook] not a ytdl:// url 
[   3.415][d][osc] osc_init 
[   3.416][v][ffmpeg] Opening https://www.youtube.com/watch?v=H_qAuJgkbLg
[   3.416][d][global] user path: '/home/shobhit/Downloads/youtube.com_cookies.txt' -> '/home/shobhit/Downloads/youtube.com_cookies.txt'
[   3.416][v][ffmpeg] Loading cookie file: /home/shobhit/Downloads/youtube.com_cookies.txt
[   3.416][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   3.416][v][cplayer] Set property: shared-script-properties -> 1
[   3.416][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   3.418][d][ffmpeg] tcp: Starting connection attempt to 2404:6800:4002:826::200e port 443
[   3.422][d][ffmpeg] tcp: Successfully connected to 2404:6800:4002:826::200e port 443
[   3.446][d][osc] osc_init 
[   3.448][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   3.448][v][cplayer] Set property: shared-script-properties -> 1
[   3.448][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   3.647][d][ffmpeg] resize stream to 131072 bytes, drop 0 bytes
[   3.647][v][ffmpeg] Mime-type: 'text/html; charset=utf-8'
[   3.647][d][ffmpeg] Stream opened successfully.
[   3.647][v][demux] Trying demuxers for level=normal.
[   3.647][d][demux] Trying demuxer: disc (force-level: normal)
[   3.647][d][demux] Trying demuxer: edl (force-level: normal)
[   3.647][d][demux] Trying demuxer: cue (force-level: normal)
[   3.647][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   3.647][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   3.647][d][demux] Trying demuxer: mkv (force-level: normal)
[   3.647][d][demux] Trying demuxer: libarchive (force-level: normal)
[   3.648][d][demux] Trying demuxer: lavf (force-level: normal)
[   3.807][d][ffmpeg] resize stream to 262144 bytes, drop 0 bytes
[   3.870][d][ffmpeg] resize stream to 524288 bytes, drop 0 bytes
[   3.966][d][ffmpeg] resize stream to 1048576 bytes, drop 0 bytes
[   4.003][d][ffmpeg] resize stream to 2097152 bytes, drop 0 bytes
[   4.027][v][lavf] No format found, try lowering probescore or forcing the format.
[   4.027][d][demux] Trying demuxer: mf (force-level: normal)
[   4.027][d][demux] Trying demuxer: playlist (force-level: normal)
[   4.027][d][demux] Trying demuxer: null (force-level: normal)
[   4.027][v][demux] Trying demuxers for level=unsafe.
[   4.027][d][demux] Trying demuxer: disc (force-level: unsafe)
[   4.027][d][demux] Trying demuxer: edl (force-level: unsafe)
[   4.027][d][demux] Trying demuxer: cue (force-level: unsafe)
[   4.027][d][demux] Trying demuxer: rawaudio (force-level: unsafe)
[   4.027][d][demux] Trying demuxer: rawvideo (force-level: unsafe)
[   4.027][d][demux] Trying demuxer: mkv (force-level: unsafe)
[   4.027][d][demux] Trying demuxer: libarchive (force-level: unsafe)
[   4.027][d][demux] Trying demuxer: lavf (force-level: unsafe)
[   4.062][d][ffmpeg] resize stream to 1048576 bytes, drop 0 bytes
[   4.085][d][ffmpeg] resize stream to 2097152 bytes, drop 0 bytes
[   4.109][v][lavf] No format found, try lowering probescore or forcing the format.
[   4.109][d][demux] Trying demuxer: mf (force-level: unsafe)
[   4.109][d][demux] Trying demuxer: playlist (force-level: unsafe)
[   4.109][d][demux] Trying demuxer: null (force-level: unsafe)
[   4.109][d][ffmpeg] AVIOContext: Statistics: 727705 bytes read, 0 seeks
[   4.109][v][cplayer] Opening failed or was aborted: https://www.youtube.com/watch?v=H_qAuJgkbLg
[   4.109][v][cplayer] Running hook: ytdl_hook/on_load_fail
[   4.109][v][ytdl_hook] full hook 
[   4.109][d][ytdl_hook] Running: yt-dlp --no-warnings -J --flat-playlist --sub-format ass/srt/best --format bestvideo[height<=?1080]+bestaudio/best --cookies /home/shobhit/Downloads/youtube.com_cookies.txt --all-subs --no-playlist -- https://www.youtube.com/watch?v=H_qAuJgkbLg 
[   4.109][d][cplayer] Run command: subprocess, flags=64, args=[args="yt-dlp,--no-warnings,-J,--flat-playlist,--sub-format,ass/srt/best,--format,bestvideo[height<=?1080]+bestaudio/best,--cookies,/home/shobhit/Downloads/youtube.com_cookies.txt,--all-subs,--no-playlist,--,https://www.youtube.com/watch?v=H_qAuJgkbLg", playback_only="yes", capture_size="67108864", capture_stdout="yes", capture_stderr="yes", detach="no", env="", stdin_data="", passthrough_stdin="no"]
[   6.297][v][ytdl_hook] youtube-dl succeeded! 
[   6.297][d][ytdl_hook] ytdl parsing took 0.006782 seconds 
[   6.297][d][ytdl_hook] No fragments to join into EDL 
[   6.297][d][ytdl_hook] No fragments to join into EDL 
[   6.297][v][ytdl_hook] format selection: youtube-dl (separate) 
[   6.297][d][ytdl_hook] streamurl: edl://!new_stream;!no_clip;!no_chapters;%914%https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZbjYCsTD4-EPxfaB-AU&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-ADlSzPWqVUifMhMC4Mnzp2RpOuCnqLayA_MQrHzwRet4&itag=247&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&vprv=1&svpuc=1&mime=video%2Fwebm&gir=yes&clen=27002231&dur=480.000&lmt=1680480235498095&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=IOS&txp=5319224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgNEiidiXyocOMN62Sb1nEbXVf4fATxVcV0k05F05_wo8CIQCLpM_yDvzKReZbOQydokyxZw-MNSPIBfEC8RjTdVxCRg%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRQIhAPvrXKjjG1XG86XE_7zDbSr82XD1ILwl_pufnN3I5ZZOAiBa08DrMUQO1mCvba7jZYAGUTT0UTN-gcfrYTqqeK17bg%3D%3D;!new_stream;!no_clip;!no_chapters;%973%https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZZSbGfXA4-EPt8SRwAE&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-AJ15lRM5IN8GVqTTEZxi2mzKhIbXCRL9a7aesXX47UfR&itag=251&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&spc=UWF9fyZIvk1kzwp1lNlA5vk-q3yNypP7QSCcnjQNLbAhdjk&vprv=1&svpuc=1&mime=audio%2Fwebm&gir=yes&clen=8587921&dur=480.021&lmt=1680480257613517&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=ANDROID&txp=5318224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cspc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgD7ltm7mvE_NVaZ5TdX58LpW6z6xnbuE4gi_yHL8Qn0MCIQDUu49j09O7TC3c58ywIwQ75PV-MHuRnoWGx_zMIocBww%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRgIhAMjZTp-Ii2XFKEK9u9gCj_9uQzA0fVo94dFASqMikP3xAiEAsAEjHp7piFZV1oEMbsSQNQ8KEB9dy-y3oYIG4kffzY4%3D;!global_tags,uploader=%26%Shelby Church Is Beautiful,ytdl_description=%42%Taylor Swift Jerk Off Challenge March 2023,channel_url=%56%https://www.youtube.com/channel/UC35lERtsTvtTXOiGBDsK74g 
[   6.297][v][cplayer] Set property: stream-open-filename="edl://!new_stream;!no_clip;!no_chapters;%914%https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZbjYCsTD4-EPxfaB-AU&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-ADlSzPWqVUifMhMC4Mnzp2RpOuCnqLayA_MQrHzwRet4&itag=247&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&vprv=1&svpuc=1&mime=video%2Fwebm&gir=yes&clen=27002231&dur=480.000&lmt=1680480235498095&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=IOS&txp=5319224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgNEiidiXyocOMN62Sb1nEbXVf4fATxVcV0k05F05_wo8CIQCLpM_yDvzKReZbOQydokyxZw-MNSPIBfEC8RjTdVxCRg%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRQIhAPvrXKjjG1XG86XE_7zDbSr82XD1ILwl_pufnN3I5ZZOAiBa08DrMUQO1mCvba7jZYAGUTT0UTN-gcfrYTqqeK17bg%3D%3D;!new_stream;!no_clip;!no_chapters;%973%https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZZSbGfXA4-EPt8SRwAE&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-AJ15lRM5IN8GVqTTEZxi2mzKhIbXCRL9a7aesXX47UfR&itag=251&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&spc=UWF9fyZIvk1kzwp1lNlA5vk-q3yNypP7QSCcnjQNLbAhdjk&vprv=1&svpuc=1&mime=audio%2Fwebm&gir=yes&clen=8587921&dur=480.021&lmt=1680480257613517&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=ANDROID&txp=5318224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cspc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgD7ltm7mvE_NVaZ5TdX58LpW6z6xnbuE4gi_yHL8Qn0MCIQDUu49j09O7TC3c58ywIwQ75PV-MHuRnoWGx_zMIocBww%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRgIhAMjZTp-Ii2XFKEK9u9gCj_9uQzA0fVo94dFASqMikP3xAiEAsAEjHp7piFZV1oEMbsSQNQ8KEB9dy-y3oYIG4kffzY4%3D;!global_tags,uploader=%26%Shelby Church Is Beautiful,ytdl_description=%42%Taylor Swift Jerk Off Challenge March 2023,channel_url=%56%https://www.youtube.com/channel/UC35lERtsTvtTXOiGBDsK74g" -> 1
[   6.297][v][cplayer] Set property: file-local-options/force-media-title="Taylor Swift Jerk Off Challenge March 2023" -> 1
[   6.297][v][cplayer] Set property: file-local-options/stream-lavf-o={} -> 1
[   6.297][d][ytdl_hook] script running time: 0.007113 seconds 
[   6.297][v][edl] Opening edl://!new_stream;!no_clip;!no_chapters;%914%https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZbjYCsTD4-EPxfaB-AU&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-ADlSzPWqVUifMhMC4Mnzp2RpOuCnqLayA_MQrHzwRet4&itag=247&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&vprv=1&svpuc=1&mime=video%2Fwebm&gir=yes&clen=27002231&dur=480.000&lmt=1680480235498095&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=IOS&txp=5319224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgNEiidiXyocOMN62Sb1nEbXVf4fATxVcV0k05F05_wo8CIQCLpM_yDvzKReZbOQydokyxZw-MNSPIBfEC8RjTdVxCRg%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRQIhAPvrXKjjG1XG86XE_7zDbSr82XD1ILwl_pufnN3I5ZZOAiBa08DrMUQO1mCvba7jZYAGUTT0UTN-gcfrYTqqeK17bg%3D%3D;!new_stream;!no_clip;!no_chapters;%973%https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZZSbGfXA4-EPt8SRwAE&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-AJ15lRM5IN8GVqTTEZxi2mzKhIbXCRL9a7aesXX47UfR&itag=251&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&spc=UWF9fyZIvk1kzwp1lNlA5vk-q3yNypP7QSCcnjQNLbAhdjk&vprv=1&svpuc=1&mime=audio%2Fwebm&gir=yes&clen=8587921&dur=480.021&lmt=1680480257613517&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=ANDROID&txp=5318224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cspc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgD7ltm7mvE_NVaZ5TdX58LpW6z6xnbuE4gi_yHL8Qn0MCIQDUu49j09O7TC3c58ywIwQ75PV-MHuRnoWGx_zMIocBww%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRgIhAMjZTp-Ii2XFKEK9u9gCj_9uQzA0fVo94dFASqMikP3xAiEAsAEjHp7piFZV1oEMbsSQNQ8KEB9dy-y3oYIG4kffzY4%3D;!global_tags,uploader=%26%Shelby Church Is Beautiful,ytdl_description=%42%Taylor Swift Jerk Off Challenge March 2023,channel_url=%56%https://www.youtube.com/channel/UC35lERtsTvtTXOiGBDsK74g
[   6.297][d][edl] resize stream to 131072 bytes, drop 0 bytes
[   6.297][d][edl] Stream opened successfully.
[   6.297][v][demux] Trying demuxers for level=request.
[   6.297][d][demux] Trying demuxer: edl (force-level: request)
[   6.297][v][demux] Detected file format: Edit decision list
[   6.297][v][demux] Stream is not seekable.
[   6.297][w][demux] Not seekable, but enabling seeking on user request.
[   6.297][v][demux] Opening segment 0...
[   6.297][v][ffmpeg] Opening https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZbjYCsTD4-EPxfaB-AU&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-ADlSzPWqVUifMhMC4Mnzp2RpOuCnqLayA_MQrHzwRet4&itag=247&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&vprv=1&svpuc=1&mime=video%2Fwebm&gir=yes&clen=27002231&dur=480.000&lmt=1680480235498095&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=IOS&txp=5319224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgNEiidiXyocOMN62Sb1nEbXVf4fATxVcV0k05F05_wo8CIQCLpM_yDvzKReZbOQydokyxZw-MNSPIBfEC8RjTdVxCRg%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRQIhAPvrXKjjG1XG86XE_7zDbSr82XD1ILwl_pufnN3I5ZZOAiBa08DrMUQO1mCvba7jZYAGUTT0UTN-gcfrYTqqeK17bg%3D%3D
[   6.297][d][global] user path: '/home/shobhit/Downloads/youtube.com_cookies.txt' -> '/home/shobhit/Downloads/youtube.com_cookies.txt'
[   6.297][v][ffmpeg] Loading cookie file: /home/shobhit/Downloads/youtube.com_cookies.txt
[   6.442][d][ffmpeg] tcp: Starting connection attempt to 2405:200:1630:b1b::d port 443
[   6.446][d][ffmpeg] tcp: Successfully connected to 2405:200:1630:b1b::d port 443
[   6.596][d][ffmpeg] resize stream to 131072 bytes, drop 0 bytes
[   6.596][v][ffmpeg] Mime-type: 'video/webm'
[   6.596][d][ffmpeg] Stream opened successfully.
[   6.596][v][demux] Trying demuxers for level=normal.
[   6.596][d][demux] Trying demuxer: disc (force-level: normal)
[   6.596][d][demux] Trying demuxer: edl (force-level: normal)
[   6.646][d][demux] Trying demuxer: cue (force-level: normal)
[   6.646][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   6.646][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   6.646][d][demux] Trying demuxer: mkv (force-level: normal)
[   6.646][d][mkv] Found the head...
[   6.646][d][mkv] + a segment...
[   6.646][d][mkv] Parsing seek head...
[   6.646][d][mkv] |+ segment information...
[   6.646][d][mkv] float 480000.000000
[   6.646][d][mkv] | + muxing app: google/video-file
[   6.646][d][mkv] | + writing app: google/video-file
[   6.646][d][mkv] | + timecode scale: 1000000
[   6.646][d][mkv] | + duration: 480.000s
[   6.646][d][mkv] |+ segment tracks...
[   6.646][d][mkv] | + a track...
[   6.646][d][mkv] |  + Track number: 1
[   6.646][d][mkv] |  + Track type: Video
[   6.646][d][mkv] |  + Video track
[   6.646][d][mkv] |   + Pixel width: 1280
[   6.646][d][mkv] |   + Pixel height: 720
[   6.646][d][mkv] |    + Matrix: bt.709
[   6.646][d][mkv] |    + Primaries: bt.709
[   6.646][d][mkv] |    + Gamma: bt.1886
[   6.646][d][mkv] |    + Levels: limited
[   6.646][d][mkv] |  + Codec ID: V_VP9
[   6.646][d][mkv] |  + Default duration: 33.333ms ( = 30.000 fps)
[   6.646][v][mkv] Parsing cues...
[   6.646][d][mkv] |+ found cluster
[   6.646][v][mkv] All headers are parsed!
[   7.419][v][demux] Detected file format: Matroska
[   7.419][v][demux] Opening segment 0...
[   7.419][v][ffmpeg] Opening https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZZSbGfXA4-EPt8SRwAE&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-AJ15lRM5IN8GVqTTEZxi2mzKhIbXCRL9a7aesXX47UfR&itag=251&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&spc=UWF9fyZIvk1kzwp1lNlA5vk-q3yNypP7QSCcnjQNLbAhdjk&vprv=1&svpuc=1&mime=audio%2Fwebm&gir=yes&clen=8587921&dur=480.021&lmt=1680480257613517&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=ANDROID&txp=5318224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cspc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgD7ltm7mvE_NVaZ5TdX58LpW6z6xnbuE4gi_yHL8Qn0MCIQDUu49j09O7TC3c58ywIwQ75PV-MHuRnoWGx_zMIocBww%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRgIhAMjZTp-Ii2XFKEK9u9gCj_9uQzA0fVo94dFASqMikP3xAiEAsAEjHp7piFZV1oEMbsSQNQ8KEB9dy-y3oYIG4kffzY4%3D
[   7.419][d][global] user path: '/home/shobhit/Downloads/youtube.com_cookies.txt' -> '/home/shobhit/Downloads/youtube.com_cookies.txt'
[   7.419][v][ffmpeg] Loading cookie file: /home/shobhit/Downloads/youtube.com_cookies.txt
[   7.436][d][ffmpeg] tcp: Starting connection attempt to 2405:200:1630:b1b::d port 443
[   7.442][d][ffmpeg] tcp: Successfully connected to 2405:200:1630:b1b::d port 443
[   7.484][d][ffmpeg] resize stream to 131072 bytes, drop 0 bytes
[   7.484][v][ffmpeg] Mime-type: 'audio/webm'
[   7.484][d][ffmpeg] Stream opened successfully.
[   7.484][v][demux] Trying demuxers for level=normal.
[   7.484][d][demux] Trying demuxer: disc (force-level: normal)
[   7.484][d][demux] Trying demuxer: edl (force-level: normal)
[   7.484][d][demux] Trying demuxer: cue (force-level: normal)
[   7.484][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   7.484][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   7.484][d][demux] Trying demuxer: mkv (force-level: normal)
[   7.484][d][mkv] Found the head...
[   7.484][d][mkv] + a segment...
[   7.484][d][mkv] Parsing seek head...
[   7.484][d][mkv] |+ segment information...
[   7.484][d][mkv] float 480021.000000
[   7.484][d][mkv] | + muxing app: google/video-file
[   7.484][d][mkv] | + writing app: google/video-file
[   7.484][d][mkv] | + timecode scale: 1000000
[   7.484][d][mkv] | + duration: 480.021s
[   7.484][d][mkv] |+ segment tracks...
[   7.484][d][mkv] float 48000.000000
[   7.484][d][mkv] | + a track...
[   7.484][d][mkv] |  + Track number: 1
[   7.484][d][mkv] |  + Track type: Audio
[   7.484][d][mkv] |  + Audio track
[   7.484][d][mkv] |   + Sampling frequency: 48000.000000
[   7.484][d][mkv] |   + Bit depth: 16
[   7.484][d][mkv] |   + Channels: 2
[   7.484][d][mkv] |  + Codec ID: A_OPUS
[   7.484][d][mkv] |  + CodecPrivate, length 19
[   7.484][d][mkv] |  + Language: eng
[   7.484][v][mkv] Parsing cues...
[   7.484][d][mkv] |+ found cluster
[   7.484][v][mkv] All headers are parsed!
[   7.485][v][demux] Detected file format: Matroska
[   7.485][d][demux] Trying demuxer: timeline (force-level: force)
[   7.485][v][timeline] Timeline segments:
[   7.485][v][timeline]   0:     0.000000 -   480.000000 [    0.000000] (0)
[   7.485][v][timeline]   source 0:'https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZbjYCsTD4-EPxfaB-AU&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-ADlSzPWqVUifMhMC4Mnzp2RpOuCnqLayA_MQrHzwRet4&itag=247&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&vprv=1&svpuc=1&mime=video%2Fwebm&gir=yes&clen=27002231&dur=480.000&lmt=1680480235498095&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=IOS&txp=5319224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgNEiidiXyocOMN62Sb1nEbXVf4fATxVcV0k05F05_wo8CIQCLpM_yDvzKReZbOQydokyxZw-MNSPIBfEC8RjTdVxCRg%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRQIhAPvrXKjjG1XG86XE_7zDbSr82XD1ILwl_pufnN3I5ZZOAiBa08DrMUQO1mCvba7jZYAGUTT0UTN-gcfrYTqqeK17bg%3D%3D'
[   7.485][v][timeline]  --- new parallel stream ---
[   7.485][v][timeline]   0:     0.000000 -   480.021000 [    0.000000] (1)
[   7.485][v][timeline]   source 0:'https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZZSbGfXA4-EPt8SRwAE&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-AJ15lRM5IN8GVqTTEZxi2mzKhIbXCRL9a7aesXX47UfR&itag=251&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&spc=UWF9fyZIvk1kzwp1lNlA5vk-q3yNypP7QSCcnjQNLbAhdjk&vprv=1&svpuc=1&mime=audio%2Fwebm&gir=yes&clen=8587921&dur=480.021&lmt=1680480257613517&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=ANDROID&txp=5318224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cspc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgD7ltm7mvE_NVaZ5TdX58LpW6z6xnbuE4gi_yHL8Qn0MCIQDUu49j09O7TC3c58ywIwQ75PV-MHuRnoWGx_zMIocBww%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRgIhAMjZTp-Ii2XFKEK9u9gCj_9uQzA0fVo94dFASqMikP3xAiEAsAEjHp7piFZV1oEMbsSQNQ8KEB9dy-y3oYIG4kffzY4%3D'
[   7.485][v][timeline] Total duration: 480.021000
[   7.485][v][demux] Detected file format: multi/mkv (timeline segments)
[   7.485][v][cplayer] Opening done: edl://!new_stream;!no_clip;!no_chapters;%914%https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZbjYCsTD4-EPxfaB-AU&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-ADlSzPWqVUifMhMC4Mnzp2RpOuCnqLayA_MQrHzwRet4&itag=247&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&vprv=1&svpuc=1&mime=video%2Fwebm&gir=yes&clen=27002231&dur=480.000&lmt=1680480235498095&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=IOS&txp=5319224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgNEiidiXyocOMN62Sb1nEbXVf4fATxVcV0k05F05_wo8CIQCLpM_yDvzKReZbOQydokyxZw-MNSPIBfEC8RjTdVxCRg%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRQIhAPvrXKjjG1XG86XE_7zDbSr82XD1ILwl_pufnN3I5ZZOAiBa08DrMUQO1mCvba7jZYAGUTT0UTN-gcfrYTqqeK17bg%3D%3D;!new_stream;!no_clip;!no_chapters;%973%https://rr2---sn-gwpa-qxaee.googlevideo.com/videoplayback?expire=1708222358&ei=NhPRZZSbGfXA4-EPt8SRwAE&ip=2405%3A201%3A4036%3A891%3Aafb%3A7a9b%3A8dad%3A83d4&id=o-AJ15lRM5IN8GVqTTEZxi2mzKhIbXCRL9a7aesXX47UfR&itag=251&source=youtube&requiressl=yes&xpc=EgVo2aDSNQ%3D%3D&mh=fd&mm=31%2C29&mn=sn-gwpa-qxaee%2Csn-gwpa-qxa6&ms=au%2Crdu&mv=m&mvi=2&pl=50&initcwndbps=728750&spc=UWF9fyZIvk1kzwp1lNlA5vk-q3yNypP7QSCcnjQNLbAhdjk&vprv=1&svpuc=1&mime=audio%2Fwebm&gir=yes&clen=8587921&dur=480.021&lmt=1680480257613517&mt=1708200319&fvip=8&keepalive=yes&fexp=24007246&c=ANDROID&txp=5318224&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cxpc%2Cspc%2Cvprv%2Csvpuc%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=AJfQdSswRQIgD7ltm7mvE_NVaZ5TdX58LpW6z6xnbuE4gi_yHL8Qn0MCIQDUu49j09O7TC3c58ywIwQ75PV-MHuRnoWGx_zMIocBww%3D%3D&lsparams=mh%2Cmm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpl%2Cinitcwndbps&lsig=APTiJQcwRgIhAMjZTp-Ii2XFKEK9u9gCj_9uQzA0fVo94dFASqMikP3xAiEAsAEjHp7piFZV1oEMbsSQNQ8KEB9dy-y3oYIG4kffzY4%3D;!global_tags,uploader=%26%Shelby Church Is Beautiful,ytdl_description=%42%Taylor Swift Jerk Off Challenge March 2023,channel_url=%56%https://www.youtube.com/channel/UC35lERtsTvtTXOiGBDsK74g
[   7.486][d][global] config path: 'sub' -/-> '/home/shobhit/.config/mpv/sub'
[   7.486][d][global] config path: 'sub' -/-> '/home/shobhit/.mpv/sub'
[   7.486][d][global] config path: 'sub' -/-> '/etc/mpv/sub'
[   7.486][d][osc] osc_init 
[   7.486][v][cplayer] Running hook: ytdl_hook/on_preloaded
[   7.486][v][timeline] select track 0
[   7.486][v][timeline] select track 1
[   7.486][i][cplayer]  (+) Video --vid=1 (*) (vp9 1280x720 30.000fps)
[   7.486][i][cplayer]  (+) Audio --aid=1 --alang=eng (*) (opus 2ch 48000Hz)
[   7.486][i][display-tags] File tags:
[   7.486][i][display-tags]  Uploader: Shelby Church Is Beautiful
[   7.486][i][display-tags]  Channel_URL: https://www.youtube.com/channel/UC35lERtsTvtTXOiGBDsK74g
[   7.487][v][vo/gpu] Probing for best GPU context.
[   7.487][v][vo/gpu/opengl] Initializing GPU context 'wayland'
[   7.488][v][vo/gpu/wayland] Registered for protocol wl_compositor
[   7.488][v][vo/gpu/wayland] Registered for protocol wl_shm
[   7.488][v][vo/gpu/wayland] Registered for protocol wl_output
[   7.488][v][vo/gpu/wayland] Registered for protocol wl_data_device_manager
[   7.488][v][vo/gpu/wayland] Registered for protocol xdg_wm_base
[   7.488][v][vo/gpu/wayland] Registered for protocol wl_seat
[   7.488][v][vo/gpu/wayland] Registered for protocol wp_presentation
[   7.488][w][vo/gpu/wayland] GNOME's wayland compositor lacks support for the idle inhibit protocol. This means the screen can blank during playback.
[   7.488][v][vo/gpu/wayland] Compositor doesn't support the zxdg_decoration_manager_v1 protocol!
[   7.488][v][vo/gpu/wayland] Compositor doesn't support the zwp_idle_inhibit_manager_v1 protocol!
[   7.565][v][vo/gpu/opengl] EGL_VERSION=1.5
[   7.565][v][vo/gpu/opengl] EGL_VENDOR=Mesa Project
[   7.565][v][vo/gpu/opengl] EGL_CLIENT_APIS=OpenGL OpenGL_ES 
[   7.565][v][vo/gpu/opengl] Trying to create Desktop OpenGL context.
[   7.565][d][vo/gpu/opengl] Chosen EGLConfig:
[   7.565][d][vo/gpu/opengl]   EGL_CONFIG_ID=0x15
[   7.565][d][vo/gpu/opengl]   EGL_RED_SIZE=0xa
[   7.565][d][vo/gpu/opengl]   EGL_GREEN_SIZE=0xa
[   7.565][d][vo/gpu/opengl]   EGL_BLUE_SIZE=0xa
[   7.565][d][vo/gpu/opengl]   EGL_ALPHA_SIZE=0x0
[   7.565][d][vo/gpu/opengl]   EGL_COLOR_BUFFER_TYPE=0x308e
[   7.565][d][vo/gpu/opengl]   EGL_CONFIG_CAVEAT=0x3038
[   7.565][d][vo/gpu/opengl]   EGL_CONFORMANT=0x4d
[   7.565][d][vo/gpu/opengl]   EGL_NATIVE_VISUAL_ID=0x0
[   7.567][v][vo/gpu/wayland] GL_VERSION='4.6 (Core Profile) Mesa 23.2.1-1ubuntu3.1~22.04.2'
[   7.567][v][vo/gpu/wayland] Detected desktop OpenGL 4.6.
[   7.567][v][vo/gpu/wayland] GL_VENDOR='Intel'
[   7.567][v][vo/gpu/wayland] GL_RENDERER='Mesa Intel(R) Graphics (ADL GT2)'
[   7.567][v][vo/gpu/wayland] GL_SHADING_LANGUAGE_VERSION='4.60'
[   7.568][d][vo/gpu/wayland] Combined OpenGL extensions string:
[   7.568][d][vo/gpu/wayland] EGL_ANDROID_blob_cache EGL_ANDROID_native_fence_sync EGL_EXT_buffer_age EGL_EXT_create_context_robustness EGL_EXT_image_dma_buf_import EGL_EXT_image_dma_buf_import_modifiers EGL_EXT_protected_content EGL_EXT_present_opaque EGL_EXT_swap_buffers_with_damage EGL_IMG_context_priority EGL_KHR_cl_event2 EGL_KHR_config_attribs EGL_KHR_context_flush_control EGL_KHR_create_context EGL_KHR_create_context_no_error EGL_KHR_fence_sync EGL_KHR_get_all_proc_addresses EGL_KHR_gl_colorspace EGL_KHR_gl_renderbuffer_image EGL_KHR_gl_texture_2D_image EGL_KHR_gl_texture_3D_image EGL_KHR_gl_texture_cubemap_image EGL_KHR_image_base EGL_KHR_no_config_context EGL_KHR_reusable_sync EGL_KHR_surfaceless_context EGL_KHR_swap_buffers_with_damage EGL_EXT_pixel_format_float EGL_KHR_wait_sync EGL_MESA_configless_context EGL_MESA_drm_image EGL_MESA_image_dma_buf_export EGL_MESA_query_driver EGL_WL_bind_wayland_display EGL_WL_create_wayland_buffer_from_image  GL_3DFX_texture_compression_FXT1 GL_AMD_conservative_depth GL_AMD_depth_clamp_separate GL_AMD_draw_buffers_blend GL_AMD_gpu_shader_int64 GL_AMD_multi_draw_indirect GL_AMD_performance_monitor GL_AMD_pinned_memory GL_AMD_query_buffer_object GL_AMD_seamless_cubemap_per_texture GL_AMD_shader_stencil_export GL_AMD_shader_trinary_minmax GL_AMD_texture_texture4 GL_AMD_vertex_shader_layer GL_AMD_vertex_shader_viewport_index GL_ANGLE_texture_compression_dxt3 GL_ANGLE_texture_compression_dxt5 GL_ARB_ES2_compatibility GL_ARB_ES3_1_compatibility GL_ARB_ES3_2_compatibility GL_ARB_ES3_compatibility GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_blend_func_extended GL_ARB_buffer_storage GL_ARB_clear_buffer_object GL_ARB_clear_texture GL_ARB_clip_control GL_ARB_compressed_texture_pixel_storage GL_ARB_compute_shader GL_ARB_compute_variable_group_size GL_ARB_conditional_render_inverted GL_ARB_conservative_depth GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_cull_distance GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_derivative_control GL_ARB_direct_state_access GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_elements_base_vertex GL_ARB_draw_indirect GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_shader GL_ARB_fragment_shader_interlock GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_get_program_binary GL_ARB_get_texture_sub_image GL_ARB_gl_spirv GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_gpu_shader_int64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_indirect_parameters GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multi_draw_indirect GL_ARB_occlusion_query2 GL_ARB_parallel_shader_compile GL_ARB_pipeline_statistics_query GL_ARB_pixel_buffer_object GL_ARB_point_sprite GL_ARB_polygon_offset_clamp GL_ARB_post_depth_coverage GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_query_buffer_object GL_ARB_robust_buffer_access_behavior GL_ARB_robustness GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_seamless_cubemap_per_texture GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counter_ops GL_ARB_shader_atomic_counters GL_ARB_shader_ballot GL_ARB_shader_bit_encoding GL_ARB_shader_clock GL_ARB_shader_draw_parameters GL_ARB_shader_group_vote GL_ARB_shader_image_load_store GL_ARB_shader_image_size GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_shader_stencil_export GL_ARB_shader_storage_buffer_object GL_ARB_shader_subroutine GL_ARB_shader_texture_image_samples GL_ARB_shader_texture_lod GL_ARB_shader_viewport_layer_array GL_ARB_shading_language_420pack GL_ARB_shading_language_include GL_ARB_shading_language_packing GL_ARB_spirv_extensions GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_barrier GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_range GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map_array GL_ARB_texture_filter_anisotropic GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_overflow_query GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ATI_blend_equation_separate GL_ATI_texture_float GL_EXT_EGL_image_storage GL_EXT_EGL_sync GL_EXT_abgr GL_EXT_blend_equation_separate GL_EXT_debug_label GL_EXT_demote_to_helper_invocation GL_EXT_depth_bounds_test GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXT_framebuffer_multisample_blit_scaled GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_memory_object GL_EXT_memory_object_fd GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_pixel_buffer_object GL_EXT_polygon_offset_clamp GL_EXT_provoking_vertex GL_EXT_semaphore GL_EXT_semaphore_fd GL_EXT_shader_framebuffer_fetch GL_EXT_shader_framebuffer_fetch_non_coherent GL_EXT_shader_integer_mix GL_EXT_shader_samples_identical GL_EXT_texture_array GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_sRGB GL_EXT_texture_sRGB_R8 GL_EXT_texture_sRGB_decode GL_EXT_texture_shadow_lod GL_EXT_texture_shared_exponent GL_EXT_texture_snorm GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_IBM_multimode_draw_arrays GL_INTEL_blackhole_render GL_INTEL_conservative_rasterization GL_INTEL_performance_query GL_INTEL_shader_atomic_float_minmax GL_INTEL_shader_integer_functions2 GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent GL_KHR_context_flush_control GL_KHR_debug GL_KHR_no_error GL_KHR_parallel_shader_compile GL_KHR_robust_buffer_access_behavior GL_KHR_robustness GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_sliced_3d GL_MESA_framebuffer_flip_y GL_MESA_pack_invert GL_MESA_shader_integer_functions GL_MESA_texture_signed_rgba GL_NV_alpha_to_coverage_dither_control GL_NV_compute_shader_derivatives GL_NV_conditional_render GL_NV_copy_image GL_NV_depth_clamp GL_NV_fragment_shader_interlock GL_NV_packed_depth_stencil GL_NV_texture_barrier GL_OES_EGL_image GL_S3_s3tc
[   7.568][d][vo/gpu/opengl] Texture formats:
[   7.568][d][vo/gpu/opengl]   NAME       COMP*TYPE SIZE           DEPTH PER COMP.
[   7.568][d][vo/gpu/opengl]   r8         1*unorm   1B    LF CR ST {8}
[   7.568][d][vo/gpu/opengl]   rg8        2*unorm   2B    LF CR ST {8 8}
[   7.568][d][vo/gpu/opengl]   rgb8       3*unorm   3B    LF CR ST {8 8 8}
[   7.568][d][vo/gpu/opengl]   rgba8      4*unorm   4B    LF CR ST {8 8 8 8}
[   7.568][d][vo/gpu/opengl]   r16        1*unorm   2B    LF CR ST {16}
[   7.568][d][vo/gpu/opengl]   rg16       2*unorm   4B    LF CR ST {16 16}
[   7.568][d][vo/gpu/opengl]   rgb16      3*unorm   6B    LF CR ST {16 16 16}
[   7.568][d][vo/gpu/opengl]   rgba16     4*unorm   8B    LF CR ST {16 16 16 16}
[   7.568][d][vo/gpu/opengl]   r8ui       1*uint    1B       CR ST {8}
[   7.568][d][vo/gpu/opengl]   rg8ui      2*uint    2B       CR ST {8 8}
[   7.568][d][vo/gpu/opengl]   rgb8ui     3*uint    3B          ST {8 8 8}
[   7.568][d][vo/gpu/opengl]   rgba8ui    4*uint    4B       CR ST {8 8 8 8}
[   7.568][d][vo/gpu/opengl]   r16ui      1*uint    2B       CR ST {16}
[   7.568][d][vo/gpu/opengl]   rg16ui     2*uint    4B       CR ST {16 16}
[   7.568][d][vo/gpu/opengl]   rgb16ui    3*uint    6B          ST {16 16 16}
[   7.568][d][vo/gpu/opengl]   rgba16ui   4*uint    8B       CR ST {16 16 16 16}
[   7.568][d][vo/gpu/opengl]   r16f       1*float   4B    LF CR ST {32/16}
[   7.568][d][vo/gpu/opengl]   rg16f      2*float   8B    LF CR ST {32/16 32/16}
[   7.568][d][vo/gpu/opengl]   rgb16f     3*float  12B    LF CR ST {32/16 32/16 32/16}
[   7.568][d][vo/gpu/opengl]   rgba16f    4*float  16B    LF CR ST {32/16 32/16 32/16 32/16}
[   7.568][d][vo/gpu/opengl]   r32f       1*float   4B    LF CR ST {32}
[   7.568][d][vo/gpu/opengl]   rg32f      2*float   8B    LF CR ST {32 32}
[   7.568][d][vo/gpu/opengl]   rgb32f     3*float  12B    LF CR ST {32 32 32}
[   7.568][d][vo/gpu/opengl]   rgba32f    4*float  16B    LF CR ST {32 32 32 32}
[   7.568][d][vo/gpu/opengl]   rgb10_a2   4*unorm   4B    LF CR ST {0/10 0/10 0/10 0/2}
[   7.568][d][vo/gpu/opengl]   rgba12     4*unorm   8B    LF CR ST {16 16 16 16}
[   7.568][d][vo/gpu/opengl]   rgb10      3*unorm   6B    LF CR ST {16/10 16/10 16/10}
[   7.568][d][vo/gpu/opengl]   rgb565     3*unorm   2B    LF    ST {0/8 0/8 0/8}
[   7.568][d][vo/gpu/opengl]  LA = LUMINANCE_ALPHA hack format
[   7.568][d][vo/gpu/opengl]  LF = linear filterable
[   7.568][d][vo/gpu/opengl]  CR = can be used for render targets
[   7.568][d][vo/gpu/opengl]  ST = can be used for storable images
[   7.568][d][vo/gpu/opengl] Image formats:
[   7.568][d][vo/gpu/opengl]   yuv444p => 3 planes 1x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.568][d][vo/gpu/opengl]   yuv420p => 3 planes 2x2 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.568][d][vo/gpu/opengl]   gray => 1 planes 1x1 8/0 [r8] (r) [unorm]
[   7.568][d][vo/gpu/opengl]   gray16 => 1 planes 1x1 16/0 [r16] (r) [unorm]
[   7.568][d][vo/gpu/opengl]   uyvy422
[   7.568][d][vo/gpu/opengl]   nv12 => 2 planes 2x2 8/0 [r8/rg8] (r/gb) [unorm]
[   7.569][d][vo/gpu/opengl]   p010 => 2 planes 2x2 16/6 [r16/rg16] (r/gb) [unorm]
[   7.569][d][vo/gpu/opengl]   argb => 1 planes 1x1 8/0 [rgba8] (argb) [unorm]
[   7.569][d][vo/gpu/opengl]   bgra => 1 planes 1x1 8/0 [rgba8] (bgra) [unorm]
[   7.569][d][vo/gpu/opengl]   abgr => 1 planes 1x1 8/0 [rgba8] (abgr) [unorm]
[   7.569][d][vo/gpu/opengl]   rgba => 1 planes 1x1 8/0 [rgba8] (rgba) [unorm]
[   7.569][d][vo/gpu/opengl]   bgr24 => 1 planes 1x1 8/0 [rgb8] (bgr) [unorm]
[   7.569][d][vo/gpu/opengl]   rgb24 => 1 planes 1x1 8/0 [rgb8] (rgb) [unorm]
[   7.569][d][vo/gpu/opengl]   0rgb => 1 planes 1x1 8/0 [rgba8] (_rgb) [unorm]
[   7.569][d][vo/gpu/opengl]   bgr0 => 1 planes 1x1 8/0 [rgba8] (bgr) [unorm]
[   7.569][d][vo/gpu/opengl]   0bgr => 1 planes 1x1 8/0 [rgba8] (_bgr) [unorm]
[   7.569][d][vo/gpu/opengl]   rgb0 => 1 planes 1x1 8/0 [rgba8] (rgb) [unorm]
[   7.569][d][vo/gpu/opengl]   rgba64 => 1 planes 1x1 16/0 [rgba16] (rgba) [unorm]
[   7.569][d][vo/gpu/opengl]   rgb565 => 1 planes 1x1 0/0 [rgb565] (rgb) [unknown]
[   7.569][d][vo/gpu/opengl]   pal8
[   7.569][d][vo/gpu/opengl]   vdpau
[   7.569][d][vo/gpu/opengl]   d3d11
[   7.569][d][vo/gpu/opengl]   dxva2_vld
[   7.569][d][vo/gpu/opengl]   mmal
[   7.569][d][vo/gpu/opengl]   mediacodec
[   7.569][d][vo/gpu/opengl]   drm_prime
[   7.569][d][vo/gpu/opengl]   cuda
[   7.569][d][vo/gpu/opengl]   yap8 => 2 planes 1x1 8/0 [r8/r8] (r/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yap16 => 2 planes 1x1 16/0 [r16/r16] (r/a) [unorm]
[   7.569][d][vo/gpu/opengl]   grayaf32 => 2 planes 1x1 32/0 [r16f/r16f] (r/a) [float]
[   7.569][d][vo/gpu/opengl]   yuv444pf => 3 planes 1x1 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   7.569][d][vo/gpu/opengl]   yuva444pf => 4 planes 1x1 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   7.569][d][vo/gpu/opengl]   yuv420pf => 3 planes 2x2 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   7.569][d][vo/gpu/opengl]   yuva420pf => 4 planes 2x2 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   7.569][d][vo/gpu/opengl]   yuv422pf => 3 planes 2x1 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   7.569][d][vo/gpu/opengl]   yuva422pf => 4 planes 2x1 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   7.569][d][vo/gpu/opengl]   yuv440pf => 3 planes 1x2 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   7.569][d][vo/gpu/opengl]   yuva440pf => 4 planes 1x2 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   7.569][d][vo/gpu/opengl]   yuv410pf => 3 planes 4x4 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   7.569][d][vo/gpu/opengl]   yuva410pf => 4 planes 4x4 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   7.569][d][vo/gpu/opengl]   yuv411pf => 3 planes 4x1 32/0 [r16f/r16f/r16f] (r/g/b) [float]
[   7.569][d][vo/gpu/opengl]   yuva411pf => 4 planes 4x1 32/0 [r16f/r16f/r16f/r16f] (r/g/b/a) [float]
[   7.569][d][vo/gpu/opengl]   rgb30 => 1 planes 1x1 10/0 [rgb10_a2] (bgr) [unknown]
[   7.569][d][vo/gpu/opengl]   y1 => 1 planes 1x1 8/-7 [r8] (r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp1 => 3 planes 1x1 8/-7 [r8/r8/r8] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp2 => 3 planes 1x1 8/-6 [r8/r8/r8] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp3 => 3 planes 1x1 8/-5 [r8/r8/r8] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp4 => 3 planes 1x1 8/-4 [r8/r8/r8] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp5 => 3 planes 1x1 8/-3 [r8/r8/r8] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp6 => 3 planes 1x1 8/-2 [r8/r8/r8] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   vdpau_output
[   7.569][d][vo/gpu/opengl]   vaapi
[   7.569][d][vo/gpu/opengl]   videotoolbox
[   7.569][d][vo/gpu/opengl]   yuyv422
[   7.569][d][vo/gpu/opengl]   yuv422p => 3 planes 2x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv410p => 3 planes 4x4 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv411p => 3 planes 4x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   monow
[   7.569][d][vo/gpu/opengl]   monob
[   7.569][d][vo/gpu/opengl]   yuvj422p => 3 planes 2x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   uyyvyy411
[   7.569][d][vo/gpu/opengl]   bgr8
[   7.569][d][vo/gpu/opengl]   bgr4
[   7.569][d][vo/gpu/opengl]   bgr4_byte
[   7.569][d][vo/gpu/opengl]   rgb8
[   7.569][d][vo/gpu/opengl]   rgb4
[   7.569][d][vo/gpu/opengl]   rgb4_byte
[   7.569][d][vo/gpu/opengl]   nv21 => 2 planes 2x2 8/0 [r8/rg8] (r/bg) [unorm]
[   7.569][d][vo/gpu/opengl]   gray16be
[   7.569][d][vo/gpu/opengl]   yuv440p => 3 planes 1x2 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuvj440p => 3 planes 1x2 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva420p => 4 planes 2x2 8/0 [r8/r8/r8/r8] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   rgb48be
[   7.569][d][vo/gpu/opengl]   rgb48 => 1 planes 1x1 16/0 [rgb16] (rgb) [unorm]
[   7.569][d][vo/gpu/opengl]   rgb565be
[   7.569][d][vo/gpu/opengl]   rgb555be
[   7.569][d][vo/gpu/opengl]   rgb555
[   7.569][d][vo/gpu/opengl]   bgr565be
[   7.569][d][vo/gpu/opengl]   bgr565
[   7.569][d][vo/gpu/opengl]   bgr555be
[   7.569][d][vo/gpu/opengl]   bgr555
[   7.569][d][vo/gpu/opengl]   vaapi_moco
[   7.569][d][vo/gpu/opengl]   vaapi_idct
[   7.569][d][vo/gpu/opengl]   yuv420p16 => 3 planes 2x2 16/0 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv420p16be
[   7.569][d][vo/gpu/opengl]   yuv422p16 => 3 planes 2x1 16/0 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv422p16be
[   7.569][d][vo/gpu/opengl]   yuv444p16 => 3 planes 1x1 16/0 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv444p16be
[   7.569][d][vo/gpu/opengl]   rgb444
[   7.569][d][vo/gpu/opengl]   rgb444be
[   7.569][d][vo/gpu/opengl]   bgr444
[   7.569][d][vo/gpu/opengl]   bgr444be
[   7.569][d][vo/gpu/opengl]   ya8 => 1 planes 1x1 8/0 [rg8] (ra) [unorm]
[   7.569][d][vo/gpu/opengl]   bgr48be
[   7.569][d][vo/gpu/opengl]   bgr48 => 1 planes 1x1 16/0 [rgb16] (bgr) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv420p9be
[   7.569][d][vo/gpu/opengl]   yuv420p9 => 3 planes 2x2 16/-7 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv420p10be
[   7.569][d][vo/gpu/opengl]   yuv420p10 => 3 planes 2x2 16/-6 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv422p10be
[   7.569][d][vo/gpu/opengl]   yuv422p10 => 3 planes 2x1 16/-6 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv444p9be
[   7.569][d][vo/gpu/opengl]   yuv444p9 => 3 planes 1x1 16/-7 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv444p10be
[   7.569][d][vo/gpu/opengl]   yuv444p10 => 3 planes 1x1 16/-6 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv422p9be
[   7.569][d][vo/gpu/opengl]   yuv422p9 => 3 planes 2x1 16/-7 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp => 3 planes 1x1 8/0 [r8/r8/r8] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp9be
[   7.569][d][vo/gpu/opengl]   gbrp9 => 3 planes 1x1 16/-7 [r16/r16/r16] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp10be
[   7.569][d][vo/gpu/opengl]   gbrp10 => 3 planes 1x1 16/-6 [r16/r16/r16] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp16be
[   7.569][d][vo/gpu/opengl]   gbrp16 => 3 planes 1x1 16/0 [r16/r16/r16] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva422p => 4 planes 2x1 8/0 [r8/r8/r8/r8] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva444p => 4 planes 1x1 8/0 [r8/r8/r8/r8] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva420p9be
[   7.569][d][vo/gpu/opengl]   yuva420p9 => 4 planes 2x2 16/-7 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva422p9be
[   7.569][d][vo/gpu/opengl]   yuva422p9 => 4 planes 2x1 16/-7 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva444p9be
[   7.569][d][vo/gpu/opengl]   yuva444p9 => 4 planes 1x1 16/-7 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva420p10be
[   7.569][d][vo/gpu/opengl]   yuva420p10 => 4 planes 2x2 16/-6 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva422p10be
[   7.569][d][vo/gpu/opengl]   yuva422p10 => 4 planes 2x1 16/-6 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva444p10be
[   7.569][d][vo/gpu/opengl]   yuva444p10 => 4 planes 1x1 16/-6 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva420p16be
[   7.569][d][vo/gpu/opengl]   yuva420p16 => 4 planes 2x2 16/0 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva422p16be
[   7.569][d][vo/gpu/opengl]   yuva422p16 => 4 planes 2x1 16/0 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   yuva444p16be
[   7.569][d][vo/gpu/opengl]   yuva444p16 => 4 planes 1x1 16/0 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.569][d][vo/gpu/opengl]   xyz12 => 1 planes 1x1 16/4 [rgb16] (rgb) [unorm]
[   7.569][d][vo/gpu/opengl]   xyz12be
[   7.569][d][vo/gpu/opengl]   nv16 => 2 planes 2x1 8/0 [r8/rg8] (r/gb) [unorm]
[   7.569][d][vo/gpu/opengl]   nv20 => 2 planes 2x1 16/-6 [r16/rg16] (r/gb) [unorm]
[   7.569][d][vo/gpu/opengl]   nv20be
[   7.569][d][vo/gpu/opengl]   rgba64be
[   7.569][d][vo/gpu/opengl]   bgra64be
[   7.569][d][vo/gpu/opengl]   bgra64 => 1 planes 1x1 16/0 [rgba16] (bgra) [unorm]
[   7.569][d][vo/gpu/opengl]   yvyu422
[   7.569][d][vo/gpu/opengl]   ya16be
[   7.569][d][vo/gpu/opengl]   ya16 => 1 planes 1x1 16/0 [rg16] (ra) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrap => 4 planes 1x1 8/0 [r8/r8/r8/r8] (g/b/r/a) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrap16be
[   7.569][d][vo/gpu/opengl]   gbrap16 => 4 planes 1x1 16/0 [r16/r16/r16/r16] (g/b/r/a) [unorm]
[   7.569][d][vo/gpu/opengl]   qsv
[   7.569][d][vo/gpu/opengl]   d3d11va_vld
[   7.569][d][vo/gpu/opengl]   yuv420p12be
[   7.569][d][vo/gpu/opengl]   yuv420p12 => 3 planes 2x2 16/-4 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv420p14be
[   7.569][d][vo/gpu/opengl]   yuv420p14 => 3 planes 2x2 16/-2 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv422p12be
[   7.569][d][vo/gpu/opengl]   yuv422p12 => 3 planes 2x1 16/-4 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv422p14be
[   7.569][d][vo/gpu/opengl]   yuv422p14 => 3 planes 2x1 16/-2 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv444p12be
[   7.569][d][vo/gpu/opengl]   yuv444p12 => 3 planes 1x1 16/-4 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   yuv444p14be
[   7.569][d][vo/gpu/opengl]   yuv444p14 => 3 planes 1x1 16/-2 [r16/r16/r16] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp12be
[   7.569][d][vo/gpu/opengl]   gbrp12 => 3 planes 1x1 16/-4 [r16/r16/r16] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   gbrp14be
[   7.569][d][vo/gpu/opengl]   gbrp14 => 3 planes 1x1 16/-2 [r16/r16/r16] (g/b/r) [unorm]
[   7.569][d][vo/gpu/opengl]   yuvj411p => 3 planes 4x1 8/0 [r8/r8/r8] (r/g/b) [unorm]
[   7.569][d][vo/gpu/opengl]   bayer_bggr8
[   7.569][d][vo/gpu/opengl]   bayer_rggb8
[   7.569][d][vo/gpu/opengl]   bayer_gbrg8
[   7.570][d][vo/gpu/opengl]   bayer_grbg8
[   7.570][d][vo/gpu/opengl]   bayer_bggr16
[   7.570][d][vo/gpu/opengl]   bayer_bggr16be
[   7.570][d][vo/gpu/opengl]   bayer_rggb16
[   7.570][d][vo/gpu/opengl]   bayer_rggb16be
[   7.570][d][vo/gpu/opengl]   bayer_gbrg16
[   7.570][d][vo/gpu/opengl]   bayer_gbrg16be
[   7.570][d][vo/gpu/opengl]   bayer_grbg16
[   7.570][d][vo/gpu/opengl]   bayer_grbg16be
[   7.570][d][vo/gpu/opengl]   xvmc
[   7.570][d][vo/gpu/opengl]   yuv440p10 => 3 planes 1x2 16/-6 [r16/r16/r16] (r/g/b) [unorm]
[   7.570][d][vo/gpu/opengl]   yuv440p10be
[   7.570][d][vo/gpu/opengl]   yuv440p12 => 3 planes 1x2 16/-4 [r16/r16/r16] (r/g/b) [unorm]
[   7.570][d][vo/gpu/opengl]   yuv440p12be
[   7.570][d][vo/gpu/opengl]   ayuv64 => 1 planes 1x1 16/0 [rgba16] (argb) [unorm]
[   7.570][d][vo/gpu/opengl]   ayuv64be
[   7.570][d][vo/gpu/opengl]   p010be
[   7.570][d][vo/gpu/opengl]   gbrap12be
[   7.570][d][vo/gpu/opengl]   gbrap12 => 4 planes 1x1 16/-4 [r16/r16/r16/r16] (g/b/r/a) [unorm]
[   7.570][d][vo/gpu/opengl]   gbrap10be
[   7.570][d][vo/gpu/opengl]   gbrap10 => 4 planes 1x1 16/-6 [r16/r16/r16/r16] (g/b/r/a) [unorm]
[   7.570][d][vo/gpu/opengl]   gray12be
[   7.570][d][vo/gpu/opengl]   gray12 => 1 planes 1x1 16/-4 [r16] (r) [unorm]
[   7.570][d][vo/gpu/opengl]   gray10be
[   7.570][d][vo/gpu/opengl]   gray10 => 1 planes 1x1 16/-6 [r16] (r) [unorm]
[   7.570][d][vo/gpu/opengl]   p016 => 2 planes 2x2 16/0 [r16/rg16] (r/gb) [unorm]
[   7.570][d][vo/gpu/opengl]   p016be
[   7.570][d][vo/gpu/opengl]   gray9be
[   7.570][d][vo/gpu/opengl]   gray9 => 1 planes 1x1 16/-7 [r16] (r) [unorm]
[   7.570][d][vo/gpu/opengl]   gbrpf32be
[   7.570][d][vo/gpu/opengl]   gbrpf32 => 3 planes 1x1 32/0 [r16f/r16f/r16f] (g/b/r) [float]
[   7.570][d][vo/gpu/opengl]   gbrapf32be
[   7.570][d][vo/gpu/opengl]   gbrapf32 => 4 planes 1x1 32/0 [r16f/r16f/r16f/r16f] (g/b/r/a) [float]
[   7.570][d][vo/gpu/opengl]   opencl
[   7.570][d][vo/gpu/opengl]   gray14be
[   7.570][d][vo/gpu/opengl]   gray14 => 1 planes 1x1 16/-2 [r16] (r) [unorm]
[   7.570][d][vo/gpu/opengl]   grayf32be
[   7.570][d][vo/gpu/opengl]   grayf32 => 1 planes 1x1 32/0 [r16f] (r) [float]
[   7.570][d][vo/gpu/opengl]   yuva422p12be
[   7.570][d][vo/gpu/opengl]   yuva422p12 => 4 planes 2x1 16/-4 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.570][d][vo/gpu/opengl]   yuva444p12be
[   7.570][d][vo/gpu/opengl]   yuva444p12 => 4 planes 1x1 16/-4 [r16/r16/r16/r16] (r/g/b/a) [unorm]
[   7.570][d][vo/gpu/opengl]   nv24 => 2 planes 1x1 8/0 [r8/rg8] (r/gb) [unorm]
[   7.570][d][vo/gpu/opengl]   nv42 => 2 planes 1x1 8/0 [r8/rg8] (r/bg) [unorm]
[   7.570][d][vo/gpu/opengl]   vulkan
[   7.570][d][vo/gpu/opengl]   y210be
[   7.570][d][vo/gpu/opengl]   y210
[   7.570][d][vo/gpu/opengl]   x2rgb10be
[   7.570][v][vo/gpu] Testing FBO format rgba16f
[   7.570][d][vo/gpu] Resizing texture: 16x16
[   7.570][v][vo/gpu] Using FBO format rgba16f.
[   7.570][d][global] config path: 'shaders/Anime4K_Clamp_Highlights.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_Clamp_Highlights.glsl'
[   7.570][d][global] user path: '~~/shaders/Anime4K_Clamp_Highlights.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_Clamp_Highlights.glsl'
[   7.570][d][global] config path: 'shaders/Anime4K_Restore_CNN_M.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_Restore_CNN_M.glsl'
[   7.570][d][global] user path: '~~/shaders/Anime4K_Restore_CNN_M.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_Restore_CNN_M.glsl'
[   7.570][d][global] config path: 'shaders/Anime4K_Upscale_CNN_x2_M.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_Upscale_CNN_x2_M.glsl'
[   7.570][d][global] user path: '~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_Upscale_CNN_x2_M.glsl'
[   7.570][d][global] config path: 'shaders/Anime4K_AutoDownscalePre_x2.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_AutoDownscalePre_x2.glsl'
[   7.570][d][global] user path: '~~/shaders/Anime4K_AutoDownscalePre_x2.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_AutoDownscalePre_x2.glsl'
[   7.570][d][global] config path: 'shaders/Anime4K_AutoDownscalePre_x4.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_AutoDownscalePre_x4.glsl'
[   7.570][d][global] user path: '~~/shaders/Anime4K_AutoDownscalePre_x4.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_AutoDownscalePre_x4.glsl'
[   7.570][d][global] config path: 'shaders/Anime4K_Upscale_CNN_x2_S.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_Upscale_CNN_x2_S.glsl'
[   7.570][d][global] user path: '~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl' -> '/home/shobhit/.config/mpv/shaders/Anime4K_Upscale_CNN_x2_S.glsl'
[   7.570][v][vo/gpu/wayland] Registered output AUO 0x2992 (0x4):
[   7.570][v][vo/gpu/wayland] 	x: 0px, y: 0px
[   7.570][v][vo/gpu/wayland] 	w: 1920px (340mm), h: 1080px (190mm)
[   7.570][v][vo/gpu/wayland] 	scale: 1
[   7.570][v][vo/gpu/wayland] 	Hz: 60.201000
[   7.571][v][vd] Container reported FPS: 30.000000
[   7.571][v][vd] Codec list:
[   7.571][v][vd]     vp9 - Google VP9
[   7.571][v][vd]     vp9_v4l2m2m (vp9) - V4L2 mem2mem VP9 decoder wrapper
[   7.571][v][vd]     libvpx-vp9 (vp9) - libvpx VP9
[   7.571][v][vd]     vp9_cuvid (vp9) - Nvidia CUVID VP9 decoder
[   7.571][v][vd]     vp9_qsv (vp9) - VP9 video (Intel Quick Sync Video acceleration)
[   7.571][v][vd] Opening decoder vp9
[   7.571][v][vd] Looking at hwdec vp9-nvdec...
[   7.573][v][vo/gpu] Loading hwdec driver 'vaapi-egl'
[   7.573][v][vo/gpu/vaapi-egl] using VAAPI EGL interop
[   7.573][v][vo/gpu/vaapi-egl] Trying to open a x11 VA display...
[   7.573][v][vo/gpu/vaapi-egl] Trying to open a wayland VA display...
[   7.574][d][vo/gpu/vaapi-egl/vaapi] libva: VA-API version 1.14.0
[   7.574][d][vo/gpu/vaapi-egl/vaapi] libva: Trying to open /usr/lib/x86_64-linux-gnu/dri/iHD_drv_video.so
[   7.575][d][vo/gpu/vaapi-egl/vaapi] libva: Found init function __vaDriverInit_1_14
[   7.577][d][vo/gpu/vaapi-egl/vaapi] libva: va_openDriver() returns 0
[   7.578][v][vo/gpu/vaapi-egl/vaapi] Initialized VAAPI: version 1.14
[   7.578][d][ffmpeg] AVHWDeviceContext: VAAPI driver: Intel iHD driver for Intel(R) Gen Graphics - 22.3.1 ().
[   7.578][d][ffmpeg] AVHWDeviceContext: Driver not found in known nonstandard list, using standard behaviour.
[   7.578][v][vo/gpu/vaapi-egl] Going to probe surface formats (may log bogus errors)...
[   7.578][d][vo/gpu/vaapi-egl] vaExportSurfaceHandle() failed (invalid VASurfaceID)
[   7.578][d][vo/gpu/vaapi-egl] vaExportSurfaceHandle() failed (invalid VASurfaceID)
[   7.578][e][ffmpeg] AVHWDeviceContext: Failed to query surface attributes: 20 (the requested function is not implemented).
[   7.578][w][vo/gpu/vaapi-egl] failed to retrieve libavutil frame constraints
[   7.578][d][vo/gpu/vaapi-egl] vaExportSurfaceHandle() failed (invalid VASurfaceID)
[   7.578][d][vo/gpu/vaapi-egl] vaExportSurfaceHandle() failed (invalid VASurfaceID)
[   7.578][d][vo/gpu/vaapi-egl] vaExportSurfaceHandle() failed (invalid VASurfaceID)
[   7.578][d][vo/gpu/vaapi-egl] vaExportSurfaceHandle() failed (invalid VASurfaceID)
[   7.578][d][vo/gpu/vaapi-egl] Supported formats:
[   7.578][d][vo/gpu/vaapi-egl]  nv12
[   7.578][d][vo/gpu/vaapi-egl]  yuv420p
[   7.578][d][vo/gpu/vaapi-egl]  bgra
[   7.578][d][vo/gpu/vaapi-egl]  rgb0
[   7.578][d][vo/gpu/vaapi-egl]  p010
[   7.578][d][vo/gpu/vaapi-egl]  argb
[   7.578][d][vo/gpu/vaapi-egl]  abgr
[   7.578][d][vo/gpu/vaapi-egl]  rgb30
[   7.578][v][vo/gpu/vaapi-egl] Done probing surface formats.
[   7.578][v][vo/gpu] Loading hwdec driver 'cuda-nvdec'
[   7.578][v][vo/gpu/cuda-nvdec] Failed to load CUDA symbols
[   7.578][v][vo/gpu] Loading failed.
[   7.578][v][vo/gpu] Loading hwdec driver 'drmprime-drm'
[   7.578][v][vo/gpu/drmprime-drm] Failed to retrieve DRM fd from native display.
[   7.578][v][vo/gpu] Loading failed.
[   7.578][v][vd] Could not create device.
[   7.578][v][vd] Looking at hwdec vp9-vaapi...
[   7.578][v][vd] Trying hardware decoding via vp9-vaapi.
[   7.579][v][vd] Selected codec: vp9 (Google VP9)
[   7.579][v][vf] User filter list:
[   7.579][v][vf]   (empty)
[   7.579][v][ad] Codec list:
[   7.579][v][ad]     opus - Opus
[   7.579][v][ad]     libopus (opus) - libopus Opus
[   7.579][v][ad] Opening decoder opus
[   7.579][v][ad] Requesting 1 threads for decoding.
[   7.579][v][ad] Selected codec: opus (Opus)
[   7.579][v][af] User filter list:
[   7.579][v][af]   (empty)
[   7.579][v][cplayer] Starting playback...
[   7.579][v][timeline] queuing seek to 182.666000
[   7.579][v][cplayer] hr-seek, skipping to 182.666000
[   7.579][v][timeline] execute seek (to 182.666000 flags 32)
[   7.579][v][timeline] switch to segment 0
[   7.579][v][mkv] select track 0
[   7.579][v][mkv] queuing seek to 182.666000
[   7.579][v][mkv] execute seek (to 182.666000 flags 32)
[   7.579][v][ffmpeg] stream level seek from 98304 to 7848196
[   7.581][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   7.581][v][cplayer] Set property: shared-script-properties -> 1
[   7.581][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   7.591][d][ffmpeg] tcp: Starting connection attempt to 2405:200:1630:b1b::d port 443
[   7.598][d][ffmpeg] tcp: Successfully connected to 2405:200:1630:b1b::d port 443
[   7.611][d][osc] osc_init 
[   7.612][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   7.613][v][cplayer] Set property: shared-script-properties -> 1
[   7.613][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   7.672][v][mkv] seek done
[   7.721][v][timeline] adjust seek target from 182.666000 to 181.333000
[   7.721][v][timeline] switch to segment 0
[   7.721][v][mkv] select track 0
[   7.721][v][mkv] queuing seek to 181.333000
[   7.721][v][mkv] execute seek (to 181.333000 flags 32)
[   7.721][v][ffmpeg] stream level seek from 16384 to 3175031
[   7.736][d][ffmpeg] tcp: Starting connection attempt to 2405:200:1630:b1b::d port 443
[   7.742][d][ffmpeg] tcp: Successfully connected to 2405:200:1630:b1b::d port 443
[   7.779][v][mkv] seek done
[   7.779][v][timeline] seek done
[   7.779][d][timeline] stream 1: resize index to 128
[   7.780][v][af] [in] 48000Hz stereo 2ch floatp
[   7.780][v][af] [userspeed] 48000Hz stereo 2ch floatp
[   7.780][v][af] [userspeed] (disabled)
[   7.780][v][af] [convert] 48000Hz stereo 2ch floatp
[   7.780][v][ao] Trying audio driver 'pulse'
[   7.780][v][ao/pulse] requested format: 48000 Hz, stereo channels, floatp
[   7.780][v][ao/pulse] Library version: 15.99.0
[   7.780][v][ao/pulse] Proto: 35
[   7.780][v][ao/pulse] Server proto: 4294967295
[   7.782][v][ao/pulse] Channel layouts:
[   7.782][v][ao/pulse]  - #fl
[   7.782][v][ao/pulse]  - #fr
[   7.782][v][ao/pulse]  - #fc
[   7.782][v][ao/pulse]  - #lfe
[   7.782][v][ao/pulse]  - #bl
[   7.782][v][ao/pulse]  - #br
[   7.782][v][ao/pulse]  - #flc
[   7.782][v][ao/pulse]  - #frc
[   7.782][v][ao/pulse]  - #bc
[   7.782][v][ao/pulse]  - #sl
[   7.782][v][ao/pulse]  - #sr
[   7.782][v][ao/pulse]  - #tc
[   7.782][v][ao/pulse]  - #tfl
[   7.782][v][ao/pulse]  - #tfc
[   7.782][v][ao/pulse]  - #tfr
[   7.782][v][ao/pulse]  - #tbl
[   7.782][v][ao/pulse]  - #tbc
[   7.782][v][ao/pulse]  - #tbr
[   7.782][v][ao/pulse] result: stereo
[   7.790][v][ao/pulse] device buffer: 4800 samples.
[   7.791][v][ao/pulse] using soft-buffer of 9600 samples.
[   7.791][i][cplayer] AO: [pulse] 48000Hz stereo 2ch float
[   7.791][v][cplayer] AO: Description: PulseAudio audio output
[   7.791][v][autoconvert] inserting resampler
[   7.791][v][swresample] format change, reinitializing resampler
[   7.791][v][swresample] 48000Hz stereo floatp -> 48000Hz stereo float
[   7.791][v][af] [out] 48000Hz stereo 2ch float
[   7.792][v][vd] Pixel formats supported by decoder: cuda vaapi_vld vdpau yuv420p
[   7.792][v][vd] Codec profile: Profile 0 (0x0)
[   7.792][v][vd] Requesting pixfmt 'vaapi_vld' from decoder.
[   7.795][i][vd] Using hardware decoding (vaapi).
[   7.795][v][vd] Decoder format: 1280x720 [0:1] vaapi[nv12] bt.709/auto/auto/limited/auto CL=unknown
[   7.795][v][vd] Using container aspect ratio.
[   7.795][v][vf] [in] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display SP=1.000000 CL=mpeg2/4/h264
[   7.795][v][vf] [userdeint] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display SP=1.000000 CL=mpeg2/4/h264
[   7.795][v][vf] [userdeint] (disabled)
[   7.795][v][vf] [autorotate] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display SP=1.000000 CL=mpeg2/4/h264
[   7.795][v][vf] [autorotate] (disabled)
[   7.795][v][vf] [convert] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display SP=1.000000 CL=mpeg2/4/h264
[   7.795][v][vf] [convert] (disabled)
[   7.795][v][vf] [out] 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display SP=1.000000 CL=mpeg2/4/h264
[   7.830][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   8.081][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   8.334][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   8.464][i][cplayer] VO: [gpu] 1280x720 vaapi[nv12]
[   8.464][v][cplayer] VO: Description: Shader-based GPU Renderer
[   8.464][v][vo/gpu] reconfig to 1280x720 vaapi[nv12] bt.709/bt.709/bt.1886/limited/display SP=1.000000 CL=mpeg2/4/h264
[   8.464][v][vo/gpu/wayland] Reconfiguring!
[   8.464][d][vo/gpu] max content size: 1920x1080
[   8.464][d][vo/gpu] monitor size: 1920x1080
[   8.466][v][vo/gpu/wayland] Resizing due to xdg from 1280x720 to 1280x720
[   8.466][v][vo/gpu/wayland] Resizing due to xdg from 1280x720 to 1920x1080
[   8.473][v][vo/gpu] Resize: 1280x720
[   8.473][v][vo/gpu] Window size: 1280x720 (Borders: l=0 t=0 r=0 b=0)
[   8.473][v][vo/gpu] Video source: 1280x720 (1:1)
[   8.473][v][vo/gpu] Video display: (0, 0) 1280x720 -> (0, 0) 1280x720
[   8.473][v][vo/gpu] Video scale: 1.000000/1.000000
[   8.473][v][vo/gpu] OSD borders: l=0 t=0 r=0 b=0
[   8.473][v][vo/gpu] Video borders: l=0 t=0 r=0 b=0
[   8.473][v][vo/gpu] Testing FBO format rgba16f
[   8.473][d][vo/gpu] Resizing texture: 16x16
[   8.473][v][vo/gpu] Using FBO format rgba16f.
[   8.473][v][vo/gpu/wayland] Handling resize on the egl side
[   8.473][v][vo/gpu] Resize: 1920x1080
[   8.473][v][vo/gpu] Window size: 1920x1080 (Borders: l=0 t=0 r=0 b=0)
[   8.473][v][vo/gpu] Video source: 1280x720 (1:1)
[   8.473][v][vo/gpu] Video display: (0, 0) 1280x720 -> (0, 0) 1920x1080
[   8.473][v][vo/gpu] Video scale: 1.500000/1.500000
[   8.473][v][vo/gpu] OSD borders: l=0 t=0 r=0 b=0
[   8.473][v][vo/gpu] Video borders: l=0 t=0 r=0 b=0
[   8.473][v][vo/gpu] Reported display depth: 10
[   8.475][d][vo/gpu] Resizing texture: 1280x720
[   8.489][d][vo/gpu/opengl] compute shader source:
[   8.489][d][vo/gpu/opengl] [  1] #version 440
[   8.489][d][vo/gpu/opengl] [  2] #extension GL_ARB_compute_shader : enable
[   8.489][d][vo/gpu/opengl] [  3] #extension GL_ARB_shader_image_load_store : enable
[   8.489][d][vo/gpu/opengl] [  4] #define tex1D texture
[   8.489][d][vo/gpu/opengl] [  5] #define tex3D texture
[   8.489][d][vo/gpu/opengl] [  6] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.489][d][vo/gpu/opengl] [  7] layout(std140, binding=0) uniform UBO {
[   8.489][d][vo/gpu/opengl] [  8] layout(offset=0) vec2 texture_size0;
[   8.489][d][vo/gpu/opengl] [  9] layout(offset=16) mat2 texture_rot0;
[   8.489][d][vo/gpu/opengl] [ 10] layout(offset=48) vec2 texture_off0;
[   8.489][d][vo/gpu/opengl] [ 11] layout(offset=56) vec2 pixel_size0;
[   8.489][d][vo/gpu/opengl] [ 12] layout(offset=64) vec2 out_scale;
[   8.489][d][vo/gpu/opengl] [ 13] };
[   8.489][d][vo/gpu/opengl] [ 14] uniform sampler1D lut;
[   8.489][d][vo/gpu/opengl] [ 15] layout(rgba16f) uniform restrict writeonly image2D out_image;
[   8.489][d][vo/gpu/opengl] [ 16] uniform sampler2D texture0;
[   8.489][d][vo/gpu/opengl] [ 17] layout (local_size_x = 32, local_size_y = 8) in;
[   8.489][d][vo/gpu/opengl] [ 18] #define outcoord(id) (out_scale * (vec2(id) + vec2(0.5)))
[   8.489][d][vo/gpu/opengl] [ 19] #define texmap0(id) (texture_rot0 * outcoord(id) + pixel_size0 * texture_off0)
[   8.489][d][vo/gpu/opengl] [ 20] #define texcoord0 texmap0(gl_GlobalInvocationID)
[   8.489][d][vo/gpu/opengl] [ 21] shared float in0[288];
[   8.489][d][vo/gpu/opengl] [ 22] shared float in1[288];
[   8.489][d][vo/gpu/opengl] [ 23] void main() {
[   8.489][d][vo/gpu/opengl] [ 24] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.489][d][vo/gpu/opengl] [ 25] // upscaling plane 1
[   8.489][d][vo/gpu/opengl] [ 26] #undef tex
[   8.489][d][vo/gpu/opengl] [ 27] #undef texmap
[   8.489][d][vo/gpu/opengl] [ 28] #define tex texture0
[   8.489][d][vo/gpu/opengl] [ 29] #define texmap texmap0
[   8.489][d][vo/gpu/opengl] [ 30] vec2 pos = texcoord0;
[   8.489][d][vo/gpu/opengl] [ 31] vec2 size = texture_size0;
[   8.489][d][vo/gpu/opengl] [ 32] vec2 pt = pixel_size0;
[   8.489][d][vo/gpu/opengl] [ 33] color = vec4(0.0);
[   8.489][d][vo/gpu/opengl] [ 34] {
[   8.489][d][vo/gpu/opengl] [ 35] vec2 wpos = texmap(gl_WorkGroupID * gl_WorkGroupSize);
[   8.489][d][vo/gpu/opengl] [ 36] vec2 wbase = wpos - pt * fract(wpos * size - vec2(0.5));
[   8.489][d][vo/gpu/opengl] [ 37] vec2 fcoord = fract(pos * size - vec2(0.5));
[   8.489][d][vo/gpu/opengl] [ 38] vec2 base = pos - pt * fcoord;
[   8.489][d][vo/gpu/opengl] [ 39] ivec2 rel = ivec2(round((base - wbase) * size));
[   8.489][d][vo/gpu/opengl] [ 40] int idx;
[   8.489][d][vo/gpu/opengl] [ 41] float w, d, wsum = 0.0;
[   8.489][d][vo/gpu/opengl] [ 42] vec4 c;
[   8.489][d][vo/gpu/opengl] [ 43] for (int y = int(gl_LocalInvocationID.y); y < 12; y += 8) {
[   8.489][d][vo/gpu/opengl] [ 44] for (int x = int(gl_LocalInvocationID.x); x < 24; x += 32) {
[   8.489][d][vo/gpu/opengl] [ 45] c = texture(tex, wbase + pt * vec2(x - 3, y - 3));
[   8.489][d][vo/gpu/opengl] [ 46] in0[24 * y + x] = c[0];
[   8.489][d][vo/gpu/opengl] [ 47] in1[24 * y + x] = c[1];
[   8.489][d][vo/gpu/opengl] [ 48] }}
[   8.489][d][vo/gpu/opengl] [ 49] groupMemoryBarrier();
[   8.489][d][vo/gpu/opengl] [ 50] barrier();
[   8.489][d][vo/gpu/opengl] [ 51] // scaler samples
[   8.489][d][vo/gpu/opengl] [ 52] idx = 24 * rel.y + rel.x + 0;
[   8.489][d][vo/gpu/opengl] [ 53] idx = 24 * rel.y + rel.x + 1;
[   8.489][d][vo/gpu/opengl] [ 54] idx = 24 * rel.y + rel.x + 2;
[   8.489][d][vo/gpu/opengl] [ 55] idx = 24 * rel.y + rel.x + 3;
[   8.489][d][vo/gpu/opengl] [ 56] d = length(vec2(0.0, -3.0) - fcoord);
[   8.489][d][vo/gpu/opengl] [ 57] if (d < 3.032708) {
[   8.489][d][vo/gpu/opengl] [ 58] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.489][d][vo/gpu/opengl] [ 59] wsum += w;
[   8.489][d][vo/gpu/opengl] [ 60] color[0] += w * in0[idx];
[   8.489][d][vo/gpu/opengl] [ 61] color[1] += w * in1[idx];
[   8.489][d][vo/gpu/opengl] [ 62] }
[   8.489][d][vo/gpu/opengl] [ 63] idx = 24 * rel.y + rel.x + 4;
[   8.489][d][vo/gpu/opengl] [ 64] d = length(vec2(1.0, -3.0) - fcoord);
[   8.489][d][vo/gpu/opengl] [ 65] if (d < 3.032708) {
[   8.489][d][vo/gpu/opengl] [ 66] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.489][d][vo/gpu/opengl] [ 67] wsum += w;
[   8.489][d][vo/gpu/opengl] [ 68] color[0] += w * in0[idx];
[   8.489][d][vo/gpu/opengl] [ 69] color[1] += w * in1[idx];
[   8.489][d][vo/gpu/opengl] [ 70] }
[   8.489][d][vo/gpu/opengl] [ 71] idx = 24 * rel.y + rel.x + 5;
[   8.489][d][vo/gpu/opengl] [ 72] idx = 24 * rel.y + rel.x + 6;
[   8.489][d][vo/gpu/opengl] [ 73] idx = 24 * rel.y + rel.x + 7;
[   8.489][d][vo/gpu/opengl] [ 74] idx = 24 * rel.y + rel.x + 24;
[   8.489][d][vo/gpu/opengl] [ 75] idx = 24 * rel.y + rel.x + 25;
[   8.489][d][vo/gpu/opengl] [ 76] d = length(vec2(-2.0, -2.0) - fcoord);
[   8.489][d][vo/gpu/opengl] [ 77] if (d < 3.032708) {
[   8.489][d][vo/gpu/opengl] [ 78] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.489][d][vo/gpu/opengl] [ 79] wsum += w;
[   8.489][d][vo/gpu/opengl] [ 80] color[0] += w * in0[idx];
[   8.489][d][vo/gpu/opengl] [ 81] color[1] += w * in1[idx];
[   8.489][d][vo/gpu/opengl] [ 82] }
[   8.489][d][vo/gpu/opengl] [ 83] idx = 24 * rel.y + rel.x + 26;
[   8.489][d][vo/gpu/opengl] [ 84] d = length(vec2(-1.0, -2.0) - fcoord);
[   8.489][d][vo/gpu/opengl] [ 85] if (d < 3.032708) {
[   8.489][d][vo/gpu/opengl] [ 86] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.489][d][vo/gpu/opengl] [ 87] wsum += w;
[   8.489][d][vo/gpu/opengl] [ 88] color[0] += w * in0[idx];
[   8.489][d][vo/gpu/opengl] [ 89] color[1] += w * in1[idx];
[   8.489][d][vo/gpu/opengl] [ 90] }
[   8.489][d][vo/gpu/opengl] [ 91] idx = 24 * rel.y + rel.x + 27;
[   8.489][d][vo/gpu/opengl] [ 92] d = length(vec2(0.0, -2.0) - fcoord);
[   8.489][d][vo/gpu/opengl] [ 93] if (d < 3.032708) {
[   8.489][d][vo/gpu/opengl] [ 94] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.489][d][vo/gpu/opengl] [ 95] wsum += w;
[   8.489][d][vo/gpu/opengl] [ 96] color[0] += w * in0[idx];
[   8.489][d][vo/gpu/opengl] [ 97] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [ 98] }
[   8.490][d][vo/gpu/opengl] [ 99] idx = 24 * rel.y + rel.x + 28;
[   8.490][d][vo/gpu/opengl] [100] d = length(vec2(1.0, -2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [101] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [102] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [103] wsum += w;
[   8.490][d][vo/gpu/opengl] [104] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [105] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [106] }
[   8.490][d][vo/gpu/opengl] [107] idx = 24 * rel.y + rel.x + 29;
[   8.490][d][vo/gpu/opengl] [108] d = length(vec2(2.0, -2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [109] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [110] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [111] wsum += w;
[   8.490][d][vo/gpu/opengl] [112] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [113] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [114] }
[   8.490][d][vo/gpu/opengl] [115] idx = 24 * rel.y + rel.x + 30;
[   8.490][d][vo/gpu/opengl] [116] d = length(vec2(3.0, -2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [117] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [118] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [119] wsum += w;
[   8.490][d][vo/gpu/opengl] [120] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [121] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [122] }
[   8.490][d][vo/gpu/opengl] [123] idx = 24 * rel.y + rel.x + 31;
[   8.490][d][vo/gpu/opengl] [124] idx = 24 * rel.y + rel.x + 48;
[   8.490][d][vo/gpu/opengl] [125] idx = 24 * rel.y + rel.x + 49;
[   8.490][d][vo/gpu/opengl] [126] d = length(vec2(-2.0, -1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [127] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [128] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [129] wsum += w;
[   8.490][d][vo/gpu/opengl] [130] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [131] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [132] }
[   8.490][d][vo/gpu/opengl] [133] idx = 24 * rel.y + rel.x + 50;
[   8.490][d][vo/gpu/opengl] [134] d = length(vec2(-1.0, -1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [135] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [136] wsum += w;
[   8.490][d][vo/gpu/opengl] [137] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [138] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [139] idx = 24 * rel.y + rel.x + 51;
[   8.490][d][vo/gpu/opengl] [140] d = length(vec2(0.0, -1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [141] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [142] wsum += w;
[   8.490][d][vo/gpu/opengl] [143] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [144] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [145] idx = 24 * rel.y + rel.x + 52;
[   8.490][d][vo/gpu/opengl] [146] d = length(vec2(1.0, -1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [147] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [148] wsum += w;
[   8.490][d][vo/gpu/opengl] [149] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [150] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [151] idx = 24 * rel.y + rel.x + 53;
[   8.490][d][vo/gpu/opengl] [152] d = length(vec2(2.0, -1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [153] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [154] wsum += w;
[   8.490][d][vo/gpu/opengl] [155] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [156] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [157] idx = 24 * rel.y + rel.x + 54;
[   8.490][d][vo/gpu/opengl] [158] d = length(vec2(3.0, -1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [159] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [160] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [161] wsum += w;
[   8.490][d][vo/gpu/opengl] [162] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [163] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [164] }
[   8.490][d][vo/gpu/opengl] [165] idx = 24 * rel.y + rel.x + 55;
[   8.490][d][vo/gpu/opengl] [166] idx = 24 * rel.y + rel.x + 72;
[   8.490][d][vo/gpu/opengl] [167] d = length(vec2(-3.0, 0.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [168] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [169] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [170] wsum += w;
[   8.490][d][vo/gpu/opengl] [171] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [172] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [173] }
[   8.490][d][vo/gpu/opengl] [174] idx = 24 * rel.y + rel.x + 73;
[   8.490][d][vo/gpu/opengl] [175] d = length(vec2(-2.0, 0.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [176] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [177] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [178] wsum += w;
[   8.490][d][vo/gpu/opengl] [179] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [180] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [181] }
[   8.490][d][vo/gpu/opengl] [182] idx = 24 * rel.y + rel.x + 74;
[   8.490][d][vo/gpu/opengl] [183] d = length(vec2(-1.0, 0.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [184] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [185] wsum += w;
[   8.490][d][vo/gpu/opengl] [186] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [187] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [188] idx = 24 * rel.y + rel.x + 75;
[   8.490][d][vo/gpu/opengl] [189] d = length(vec2(0.0, 0.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [190] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [191] wsum += w;
[   8.490][d][vo/gpu/opengl] [192] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [193] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [194] idx = 24 * rel.y + rel.x + 76;
[   8.490][d][vo/gpu/opengl] [195] d = length(vec2(1.0, 0.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [196] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [197] wsum += w;
[   8.490][d][vo/gpu/opengl] [198] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [199] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [200] idx = 24 * rel.y + rel.x + 77;
[   8.490][d][vo/gpu/opengl] [201] d = length(vec2(2.0, 0.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [202] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [203] wsum += w;
[   8.490][d][vo/gpu/opengl] [204] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [205] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [206] idx = 24 * rel.y + rel.x + 78;
[   8.490][d][vo/gpu/opengl] [207] d = length(vec2(3.0, 0.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [208] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [209] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [210] wsum += w;
[   8.490][d][vo/gpu/opengl] [211] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [212] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [213] }
[   8.490][d][vo/gpu/opengl] [214] idx = 24 * rel.y + rel.x + 79;
[   8.490][d][vo/gpu/opengl] [215] d = length(vec2(4.0, 0.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [216] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [217] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [218] wsum += w;
[   8.490][d][vo/gpu/opengl] [219] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [220] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [221] }
[   8.490][d][vo/gpu/opengl] [222] idx = 24 * rel.y + rel.x + 96;
[   8.490][d][vo/gpu/opengl] [223] d = length(vec2(-3.0, 1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [224] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [225] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [226] wsum += w;
[   8.490][d][vo/gpu/opengl] [227] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [228] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [229] }
[   8.490][d][vo/gpu/opengl] [230] idx = 24 * rel.y + rel.x + 97;
[   8.490][d][vo/gpu/opengl] [231] d = length(vec2(-2.0, 1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [232] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [233] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [234] wsum += w;
[   8.490][d][vo/gpu/opengl] [235] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [236] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [237] }
[   8.490][d][vo/gpu/opengl] [238] idx = 24 * rel.y + rel.x + 98;
[   8.490][d][vo/gpu/opengl] [239] d = length(vec2(-1.0, 1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [240] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [241] wsum += w;
[   8.490][d][vo/gpu/opengl] [242] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [243] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [244] idx = 24 * rel.y + rel.x + 99;
[   8.490][d][vo/gpu/opengl] [245] d = length(vec2(0.0, 1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [246] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [247] wsum += w;
[   8.490][d][vo/gpu/opengl] [248] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [249] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [250] idx = 24 * rel.y + rel.x + 100;
[   8.490][d][vo/gpu/opengl] [251] d = length(vec2(1.0, 1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [252] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [253] wsum += w;
[   8.490][d][vo/gpu/opengl] [254] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [255] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [256] idx = 24 * rel.y + rel.x + 101;
[   8.490][d][vo/gpu/opengl] [257] d = length(vec2(2.0, 1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [258] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [259] wsum += w;
[   8.490][d][vo/gpu/opengl] [260] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [261] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [262] idx = 24 * rel.y + rel.x + 102;
[   8.490][d][vo/gpu/opengl] [263] d = length(vec2(3.0, 1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [264] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [265] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [266] wsum += w;
[   8.490][d][vo/gpu/opengl] [267] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [268] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [269] }
[   8.490][d][vo/gpu/opengl] [270] idx = 24 * rel.y + rel.x + 103;
[   8.490][d][vo/gpu/opengl] [271] d = length(vec2(4.0, 1.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [272] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [273] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [274] wsum += w;
[   8.490][d][vo/gpu/opengl] [275] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [276] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [277] }
[   8.490][d][vo/gpu/opengl] [278] idx = 24 * rel.y + rel.x + 120;
[   8.490][d][vo/gpu/opengl] [279] idx = 24 * rel.y + rel.x + 121;
[   8.490][d][vo/gpu/opengl] [280] d = length(vec2(-2.0, 2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [281] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [282] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [283] wsum += w;
[   8.490][d][vo/gpu/opengl] [284] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [285] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [286] }
[   8.490][d][vo/gpu/opengl] [287] idx = 24 * rel.y + rel.x + 122;
[   8.490][d][vo/gpu/opengl] [288] d = length(vec2(-1.0, 2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [289] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [290] wsum += w;
[   8.490][d][vo/gpu/opengl] [291] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [292] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [293] idx = 24 * rel.y + rel.x + 123;
[   8.490][d][vo/gpu/opengl] [294] d = length(vec2(0.0, 2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [295] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [296] wsum += w;
[   8.490][d][vo/gpu/opengl] [297] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [298] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [299] idx = 24 * rel.y + rel.x + 124;
[   8.490][d][vo/gpu/opengl] [300] d = length(vec2(1.0, 2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [301] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [302] wsum += w;
[   8.490][d][vo/gpu/opengl] [303] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [304] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [305] idx = 24 * rel.y + rel.x + 125;
[   8.490][d][vo/gpu/opengl] [306] d = length(vec2(2.0, 2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [307] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [308] wsum += w;
[   8.490][d][vo/gpu/opengl] [309] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [310] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [311] idx = 24 * rel.y + rel.x + 126;
[   8.490][d][vo/gpu/opengl] [312] d = length(vec2(3.0, 2.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [313] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [314] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [315] wsum += w;
[   8.490][d][vo/gpu/opengl] [316] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [317] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [318] }
[   8.490][d][vo/gpu/opengl] [319] idx = 24 * rel.y + rel.x + 127;
[   8.490][d][vo/gpu/opengl] [320] idx = 24 * rel.y + rel.x + 144;
[   8.490][d][vo/gpu/opengl] [321] idx = 24 * rel.y + rel.x + 145;
[   8.490][d][vo/gpu/opengl] [322] d = length(vec2(-2.0, 3.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [323] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [324] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [325] wsum += w;
[   8.490][d][vo/gpu/opengl] [326] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [327] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [328] }
[   8.490][d][vo/gpu/opengl] [329] idx = 24 * rel.y + rel.x + 146;
[   8.490][d][vo/gpu/opengl] [330] d = length(vec2(-1.0, 3.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [331] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [332] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [333] wsum += w;
[   8.490][d][vo/gpu/opengl] [334] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [335] color[1] += w * in1[idx];
[   8.490][d][vo/gpu/opengl] [336] }
[   8.490][d][vo/gpu/opengl] [337] idx = 24 * rel.y + rel.x + 147;
[   8.490][d][vo/gpu/opengl] [338] d = length(vec2(0.0, 3.0) - fcoord);
[   8.490][d][vo/gpu/opengl] [339] if (d < 3.032708) {
[   8.490][d][vo/gpu/opengl] [340] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.490][d][vo/gpu/opengl] [341] wsum += w;
[   8.490][d][vo/gpu/opengl] [342] color[0] += w * in0[idx];
[   8.490][d][vo/gpu/opengl] [343] color[1] += w * in1[idx];
[   8.491][d][vo/gpu/opengl] [344] }
[   8.491][d][vo/gpu/opengl] [345] idx = 24 * rel.y + rel.x + 148;
[   8.491][d][vo/gpu/opengl] [346] d = length(vec2(1.0, 3.0) - fcoord);
[   8.491][d][vo/gpu/opengl] [347] if (d < 3.032708) {
[   8.491][d][vo/gpu/opengl] [348] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.491][d][vo/gpu/opengl] [349] wsum += w;
[   8.491][d][vo/gpu/opengl] [350] color[0] += w * in0[idx];
[   8.491][d][vo/gpu/opengl] [351] color[1] += w * in1[idx];
[   8.491][d][vo/gpu/opengl] [352] }
[   8.491][d][vo/gpu/opengl] [353] idx = 24 * rel.y + rel.x + 149;
[   8.491][d][vo/gpu/opengl] [354] d = length(vec2(2.0, 3.0) - fcoord);
[   8.491][d][vo/gpu/opengl] [355] if (d < 3.032708) {
[   8.491][d][vo/gpu/opengl] [356] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.491][d][vo/gpu/opengl] [357] wsum += w;
[   8.491][d][vo/gpu/opengl] [358] color[0] += w * in0[idx];
[   8.491][d][vo/gpu/opengl] [359] color[1] += w * in1[idx];
[   8.491][d][vo/gpu/opengl] [360] }
[   8.491][d][vo/gpu/opengl] [361] idx = 24 * rel.y + rel.x + 150;
[   8.491][d][vo/gpu/opengl] [362] d = length(vec2(3.0, 3.0) - fcoord);
[   8.491][d][vo/gpu/opengl] [363] if (d < 3.032708) {
[   8.491][d][vo/gpu/opengl] [364] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.491][d][vo/gpu/opengl] [365] wsum += w;
[   8.491][d][vo/gpu/opengl] [366] color[0] += w * in0[idx];
[   8.491][d][vo/gpu/opengl] [367] color[1] += w * in1[idx];
[   8.491][d][vo/gpu/opengl] [368] }
[   8.491][d][vo/gpu/opengl] [369] idx = 24 * rel.y + rel.x + 151;
[   8.491][d][vo/gpu/opengl] [370] idx = 24 * rel.y + rel.x + 168;
[   8.491][d][vo/gpu/opengl] [371] idx = 24 * rel.y + rel.x + 169;
[   8.491][d][vo/gpu/opengl] [372] idx = 24 * rel.y + rel.x + 170;
[   8.491][d][vo/gpu/opengl] [373] idx = 24 * rel.y + rel.x + 171;
[   8.491][d][vo/gpu/opengl] [374] d = length(vec2(0.0, 4.0) - fcoord);
[   8.491][d][vo/gpu/opengl] [375] if (d < 3.032708) {
[   8.491][d][vo/gpu/opengl] [376] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.491][d][vo/gpu/opengl] [377] wsum += w;
[   8.491][d][vo/gpu/opengl] [378] color[0] += w * in0[idx];
[   8.491][d][vo/gpu/opengl] [379] color[1] += w * in1[idx];
[   8.491][d][vo/gpu/opengl] [380] }
[   8.491][d][vo/gpu/opengl] [381] idx = 24 * rel.y + rel.x + 172;
[   8.491][d][vo/gpu/opengl] [382] d = length(vec2(1.0, 4.0) - fcoord);
[   8.491][d][vo/gpu/opengl] [383] if (d < 3.032708) {
[   8.491][d][vo/gpu/opengl] [384] w = tex1D(lut, LUT_POS(d * 1.0/3.238315, 64.0)).r;
[   8.491][d][vo/gpu/opengl] [385] wsum += w;
[   8.491][d][vo/gpu/opengl] [386] color[0] += w * in0[idx];
[   8.491][d][vo/gpu/opengl] [387] color[1] += w * in1[idx];
[   8.491][d][vo/gpu/opengl] [388] }
[   8.491][d][vo/gpu/opengl] [389] idx = 24 * rel.y + rel.x + 173;
[   8.491][d][vo/gpu/opengl] [390] idx = 24 * rel.y + rel.x + 174;
[   8.491][d][vo/gpu/opengl] [391] idx = 24 * rel.y + rel.x + 175;
[   8.491][d][vo/gpu/opengl] [392] color = color / vec4(wsum);
[   8.491][d][vo/gpu/opengl] [393] }
[   8.491][d][vo/gpu/opengl] [394] color *= 1.000000;
[   8.491][d][vo/gpu/opengl] [395] color.b = 0.000000;
[   8.491][d][vo/gpu/opengl] [396] color.a = 1.000000;
[   8.491][d][vo/gpu/opengl] [397] imageStore(out_image, ivec2(gl_GlobalInvocationID), color);
[   8.491][d][vo/gpu/opengl] [398] }
[   8.491][d][vo/gpu/opengl] shader link log (status=1): 
[   8.492][d][vo/gpu] Resizing texture: 1280x720
[   8.494][d][vo/gpu/opengl] vertex shader source:
[   8.494][d][vo/gpu/opengl] [  1] #version 440
[   8.494][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.494][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.494][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.494][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.494][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.494][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.494][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.494][d][vo/gpu/opengl] [  9] in vec2 vertex_texcoord1;
[   8.494][d][vo/gpu/opengl] [ 10] out vec2 texcoord1;
[   8.494][d][vo/gpu/opengl] [ 11] void main() {
[   8.494][d][vo/gpu/opengl] [ 12] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.494][d][vo/gpu/opengl] [ 13] texcoord0 = vertex_texcoord0;
[   8.494][d][vo/gpu/opengl] [ 14] texcoord1 = vertex_texcoord1;
[   8.494][d][vo/gpu/opengl] [ 15] }
[   8.494][d][vo/gpu/opengl] fragment shader source:
[   8.494][d][vo/gpu/opengl] [  1] #version 440
[   8.494][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.494][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.494][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.494][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.494][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.494][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.494][d][vo/gpu/opengl] [  8] in vec2 texcoord1;
[   8.494][d][vo/gpu/opengl] [  9] layout(std140, binding=0) uniform UBO {
[   8.494][d][vo/gpu/opengl] [ 10] layout(offset=0) vec2 texture_size0;
[   8.494][d][vo/gpu/opengl] [ 11] layout(offset=16) mat2 texture_rot0;
[   8.494][d][vo/gpu/opengl] [ 12] layout(offset=48) vec2 texture_off0;
[   8.494][d][vo/gpu/opengl] [ 13] layout(offset=56) vec2 pixel_size0;
[   8.494][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_size1;
[   8.494][d][vo/gpu/opengl] [ 15] layout(offset=80) mat2 texture_rot1;
[   8.494][d][vo/gpu/opengl] [ 16] layout(offset=112) vec2 texture_off1;
[   8.494][d][vo/gpu/opengl] [ 17] layout(offset=120) vec2 pixel_size1;
[   8.494][d][vo/gpu/opengl] [ 18] };
[   8.494][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.494][d][vo/gpu/opengl] [ 20] uniform sampler2D texture1;
[   8.494][d][vo/gpu/opengl] [ 21] void main() {
[   8.494][d][vo/gpu/opengl] [ 22] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.494][d][vo/gpu/opengl] [ 23] color.r = 1.000000 * vec4(texture(texture0, texcoord0)).r;
[   8.494][d][vo/gpu/opengl] [ 24] color.gb = 1.000000 * vec4(texture(texture1, texcoord1)).rg;
[   8.494][d][vo/gpu/opengl] [ 25] out_color = color;
[   8.494][d][vo/gpu/opengl] [ 26] }
[   8.494][d][vo/gpu/opengl] shader link log (status=1): 
[   8.494][d][vo/gpu] Resizing texture: 1280x720
[   8.497][d][vo/gpu/opengl] vertex shader source:
[   8.497][d][vo/gpu/opengl] [  1] #version 440
[   8.497][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.497][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.497][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.497][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.497][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.497][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.497][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.497][d][vo/gpu/opengl] [  9] void main() {
[   8.497][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.497][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.497][d][vo/gpu/opengl] [ 12] }
[   8.497][d][vo/gpu/opengl] fragment shader source:
[   8.497][d][vo/gpu/opengl] [  1] #version 440
[   8.497][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.497][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.497][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.497][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.497][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.497][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.497][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.497][d][vo/gpu/opengl] [  9] layout(offset=0) mat3 colormatrix;
[   8.497][d][vo/gpu/opengl] [ 10] layout(offset=48) vec3 colormatrix_c;
[   8.497][d][vo/gpu/opengl] [ 11] layout(offset=64) vec2 texture_size0;
[   8.497][d][vo/gpu/opengl] [ 12] layout(offset=80) mat2 texture_rot0;
[   8.497][d][vo/gpu/opengl] [ 13] layout(offset=112) vec2 texture_off0;
[   8.497][d][vo/gpu/opengl] [ 14] layout(offset=120) vec2 pixel_size0;
[   8.497][d][vo/gpu/opengl] [ 15] };
[   8.497][d][vo/gpu/opengl] [ 16] uniform sampler2D texture0;
[   8.497][d][vo/gpu/opengl] [ 17] void main() {
[   8.497][d][vo/gpu/opengl] [ 18] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.497][d][vo/gpu/opengl] [ 19] color.rgb = 1.000000 * vec4(texture(texture0, texcoord0)).rgb;
[   8.497][d][vo/gpu/opengl] [ 20] color = color.rgbr;
[   8.497][d][vo/gpu/opengl] [ 21] color.rgb = mat3(colormatrix) * color.rgb + colormatrix_c;
[   8.497][d][vo/gpu/opengl] [ 22] color.a = 1.0;
[   8.497][d][vo/gpu/opengl] [ 23] out_color = color;
[   8.497][d][vo/gpu/opengl] [ 24] }
[   8.497][d][vo/gpu/opengl] shader link log (status=1): 
[   8.497][d][vo/gpu] Resizing texture: 1280x720
[   8.499][d][vo/gpu/opengl] vertex shader source:
[   8.499][d][vo/gpu/opengl] [  1] #version 440
[   8.499][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.499][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.499][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.499][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.499][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.499][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.499][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.499][d][vo/gpu/opengl] [  9] void main() {
[   8.499][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.499][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.499][d][vo/gpu/opengl] [ 12] }
[   8.499][d][vo/gpu/opengl] fragment shader source:
[   8.499][d][vo/gpu/opengl] [  1] #version 440
[   8.499][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.499][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.499][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.499][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.499][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.499][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.499][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.499][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 texture_size0;
[   8.499][d][vo/gpu/opengl] [ 10] layout(offset=16) mat2 texture_rot0;
[   8.499][d][vo/gpu/opengl] [ 11] layout(offset=48) vec2 texture_off0;
[   8.499][d][vo/gpu/opengl] [ 12] layout(offset=56) vec2 pixel_size0;
[   8.499][d][vo/gpu/opengl] [ 13] };
[   8.499][d][vo/gpu/opengl] [ 14] uniform sampler2D texture0;
[   8.499][d][vo/gpu/opengl] [ 15] #define HOOKED_raw texture0
[   8.499][d][vo/gpu/opengl] [ 16] #define HOOKED_pos texcoord0
[   8.499][d][vo/gpu/opengl] [ 17] #define HOOKED_size texture_size0
[   8.499][d][vo/gpu/opengl] [ 18] #define HOOKED_rot texture_rot0
[   8.499][d][vo/gpu/opengl] [ 19] #define HOOKED_off texture_off0
[   8.499][d][vo/gpu/opengl] [ 20] #define HOOKED_pt pixel_size0
[   8.499][d][vo/gpu/opengl] [ 21] #define HOOKED_map texmap0
[   8.499][d][vo/gpu/opengl] [ 22] #define HOOKED_mul 1.000000
[   8.499][d][vo/gpu/opengl] [ 23] #define HOOKED_tex(pos) (HOOKED_mul * vec4(texture(HOOKED_raw, pos)).rgba)
[   8.499][d][vo/gpu/opengl] [ 24] #define HOOKED_texOff(off) HOOKED_tex(HOOKED_pos + HOOKED_pt * vec2(off))
[   8.499][d][vo/gpu/opengl] [ 25] #define MAIN_raw texture0
[   8.499][d][vo/gpu/opengl] [ 26] #define MAIN_pos texcoord0
[   8.499][d][vo/gpu/opengl] [ 27] #define MAIN_size texture_size0
[   8.499][d][vo/gpu/opengl] [ 28] #define MAIN_rot texture_rot0
[   8.499][d][vo/gpu/opengl] [ 29] #define MAIN_off texture_off0
[   8.499][d][vo/gpu/opengl] [ 30] #define MAIN_pt pixel_size0
[   8.499][d][vo/gpu/opengl] [ 31] #define MAIN_map texmap0
[   8.499][d][vo/gpu/opengl] [ 32] #define MAIN_mul 1.000000
[   8.499][d][vo/gpu/opengl] [ 33] #define MAIN_tex(pos) (MAIN_mul * vec4(texture(MAIN_raw, pos)).rgba)
[   8.499][d][vo/gpu/opengl] [ 34] #define MAIN_texOff(off) MAIN_tex(MAIN_pos + MAIN_pt * vec2(off))
[   8.499][d][vo/gpu/opengl] [ 35] void main() {
[   8.499][d][vo/gpu/opengl] [ 36] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.499][d][vo/gpu/opengl] [ 37] {
[   8.499][d][vo/gpu/opengl] [ 38] float st1 = 1.2;
[   8.499][d][vo/gpu/opengl] [ 39] vec4 p = HOOKED_tex(HOOKED_pos);
[   8.499][d][vo/gpu/opengl] [ 40] vec4 sum1 = HOOKED_texOff(st1 * vec2(+1, +1)) + HOOKED_texOff(st1 * vec2(+1, -1)) + HOOKED_texOff(st1 * vec2(-1, +1)) + HOOKED_texOff(st1 * vec2(-1, -1));
[   8.499][d][vo/gpu/opengl] [ 41] float st2 = 1.5;
[   8.499][d][vo/gpu/opengl] [ 42] vec4 sum2 = HOOKED_texOff(st2 * vec2(+1, 0)) + HOOKED_texOff(st2 * vec2( 0, +1)) + HOOKED_texOff(st2 * vec2(-1, 0)) + HOOKED_texOff(st2 * vec2( 0, -1));
[   8.499][d][vo/gpu/opengl] [ 43] vec4 t = p * 0.859375 + sum2 * -0.1171875 + sum1 * -0.09765625;
[   8.499][d][vo/gpu/opengl] [ 44] color = p + t * 1.000000;
[   8.499][d][vo/gpu/opengl] [ 45] }
[   8.499][d][vo/gpu/opengl] [ 46] color.a = 1.000000;
[   8.499][d][vo/gpu/opengl] [ 47] out_color = color;
[   8.499][d][vo/gpu/opengl] [ 48] }
[   8.499][d][vo/gpu/opengl] shader link log (status=1): 
[   8.499][d][vo/gpu] Resizing texture: 1280x720
[   8.501][d][vo/gpu/opengl] vertex shader source:
[   8.501][d][vo/gpu/opengl] [  1] #version 440
[   8.501][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.501][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.501][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.501][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.501][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.501][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.502][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.502][d][vo/gpu/opengl] [  9] void main() {
[   8.502][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.502][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.502][d][vo/gpu/opengl] [ 12] }
[   8.502][d][vo/gpu/opengl] fragment shader source:
[   8.502][d][vo/gpu/opengl] [  1] #version 440
[   8.502][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.502][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.502][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.502][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.502][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.502][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.502][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.502][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.502][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.502][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.502][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.502][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.502][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.502][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.502][d][vo/gpu/opengl] [ 16] };
[   8.502][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.502][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.502][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.502][d][vo/gpu/opengl] [ 20] #define HOOKED_raw texture0
[   8.502][d][vo/gpu/opengl] [ 21] #define HOOKED_pos texcoord0
[   8.502][d][vo/gpu/opengl] [ 22] #define HOOKED_size texture_size0
[   8.502][d][vo/gpu/opengl] [ 23] #define HOOKED_rot texture_rot0
[   8.502][d][vo/gpu/opengl] [ 24] #define HOOKED_off texture_off0
[   8.502][d][vo/gpu/opengl] [ 25] #define HOOKED_pt pixel_size0
[   8.502][d][vo/gpu/opengl] [ 26] #define HOOKED_map texmap0
[   8.502][d][vo/gpu/opengl] [ 27] #define HOOKED_mul 1.000000
[   8.502][d][vo/gpu/opengl] [ 28] #define HOOKED_tex(pos) (HOOKED_mul * vec4(texture(HOOKED_raw, pos)).rgba)
[   8.502][d][vo/gpu/opengl] [ 29] #define HOOKED_texOff(off) HOOKED_tex(HOOKED_pos + HOOKED_pt * vec2(off))
[   8.502][d][vo/gpu/opengl] [ 30] #define MAIN_raw texture0
[   8.502][d][vo/gpu/opengl] [ 31] #define MAIN_pos texcoord0
[   8.502][d][vo/gpu/opengl] [ 32] #define MAIN_size texture_size0
[   8.502][d][vo/gpu/opengl] [ 33] #define MAIN_rot texture_rot0
[   8.502][d][vo/gpu/opengl] [ 34] #define MAIN_off texture_off0
[   8.502][d][vo/gpu/opengl] [ 35] #define MAIN_pt pixel_size0
[   8.502][d][vo/gpu/opengl] [ 36] #define MAIN_map texmap0
[   8.502][d][vo/gpu/opengl] [ 37] #define MAIN_mul 1.000000
[   8.502][d][vo/gpu/opengl] [ 38] #define MAIN_tex(pos) (MAIN_mul * vec4(texture(MAIN_raw, pos)).rgba)
[   8.502][d][vo/gpu/opengl] [ 39] #define MAIN_texOff(off) MAIN_tex(MAIN_pos + MAIN_pt * vec2(off))
[   8.502][d][vo/gpu/opengl] [ 40] 
[   8.502][d][vo/gpu/opengl] [ 41] #define KERNELSIZE 5 //Kernel size, must be an positive odd integer.
[   8.502][d][vo/gpu/opengl] [ 42] #define KERNELHALFSIZE 2 //Half of the kernel size without remainder. Must be equal to trunc(KERNELSIZE/2).
[   8.502][d][vo/gpu/opengl] [ 43] 
[   8.502][d][vo/gpu/opengl] [ 44] float get_luma(vec4 rgba) {
[   8.502][d][vo/gpu/opengl] [ 45] 	return dot(vec4(0.299, 0.587, 0.114, 0.0), rgba);
[   8.502][d][vo/gpu/opengl] [ 46] }
[   8.502][d][vo/gpu/opengl] [ 47] 
[   8.502][d][vo/gpu/opengl] [ 48] vec4 hook() {
[   8.502][d][vo/gpu/opengl] [ 49] 
[   8.502][d][vo/gpu/opengl] [ 50] 	float gmax = 0.0;
[   8.502][d][vo/gpu/opengl] [ 51] 	
[   8.502][d][vo/gpu/opengl] [ 52] 	for (int i=0; i<KERNELSIZE; i++) {
[   8.502][d][vo/gpu/opengl] [ 53] 		float g = get_luma(MAIN_texOff(vec2(i - KERNELHALFSIZE, 0)));
[   8.502][d][vo/gpu/opengl] [ 54] 		
[   8.502][d][vo/gpu/opengl] [ 55] 		gmax = max(g, gmax);
[   8.502][d][vo/gpu/opengl] [ 56] 	}
[   8.502][d][vo/gpu/opengl] [ 57] 	
[   8.502][d][vo/gpu/opengl] [ 58] 	return vec4(gmax, 0.0, 0.0, 0.0);
[   8.502][d][vo/gpu/opengl] [ 59] }
[   8.502][d][vo/gpu/opengl] [ 60] 
[   8.502][d][vo/gpu/opengl] [ 61] void main() {
[   8.502][d][vo/gpu/opengl] [ 62] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.502][d][vo/gpu/opengl] [ 63] color = hook();
[   8.502][d][vo/gpu/opengl] [ 64] color.g = 0.000000;
[   8.502][d][vo/gpu/opengl] [ 65] color.b = 0.000000;
[   8.502][d][vo/gpu/opengl] [ 66] color.a = 1.000000;
[   8.502][d][vo/gpu/opengl] [ 67] out_color = color;
[   8.502][d][vo/gpu/opengl] [ 68] }
[   8.502][d][vo/gpu/opengl] shader link log (status=1): 
[   8.502][d][vo/gpu] Resizing texture: 1280x720
[   8.504][d][vo/gpu/opengl] vertex shader source:
[   8.504][d][vo/gpu/opengl] [  1] #version 440
[   8.504][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.504][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.504][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.504][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.504][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.504][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.504][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.504][d][vo/gpu/opengl] [  9] in vec2 vertex_texcoord1;
[   8.504][d][vo/gpu/opengl] [ 10] out vec2 texcoord1;
[   8.504][d][vo/gpu/opengl] [ 11] void main() {
[   8.504][d][vo/gpu/opengl] [ 12] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.504][d][vo/gpu/opengl] [ 13] texcoord0 = vertex_texcoord0;
[   8.504][d][vo/gpu/opengl] [ 14] texcoord1 = vertex_texcoord1;
[   8.504][d][vo/gpu/opengl] [ 15] }
[   8.504][d][vo/gpu/opengl] fragment shader source:
[   8.504][d][vo/gpu/opengl] [  1] #version 440
[   8.504][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.504][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.504][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.504][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.504][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.504][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.504][d][vo/gpu/opengl] [  8] in vec2 texcoord1;
[   8.504][d][vo/gpu/opengl] [  9] layout(std140, binding=0) uniform UBO {
[   8.504][d][vo/gpu/opengl] [ 10] layout(offset=0) vec2 input_size;
[   8.504][d][vo/gpu/opengl] [ 11] layout(offset=8) vec2 target_size;
[   8.504][d][vo/gpu/opengl] [ 12] layout(offset=16) vec2 tex_offset;
[   8.504][d][vo/gpu/opengl] [ 13] layout(offset=24) vec2 texture_size0;
[   8.504][d][vo/gpu/opengl] [ 14] layout(offset=32) mat2 texture_rot0;
[   8.504][d][vo/gpu/opengl] [ 15] layout(offset=64) vec2 texture_off0;
[   8.504][d][vo/gpu/opengl] [ 16] layout(offset=72) vec2 pixel_size0;
[   8.504][d][vo/gpu/opengl] [ 17] layout(offset=80) vec2 texture_size1;
[   8.504][d][vo/gpu/opengl] [ 18] layout(offset=96) mat2 texture_rot1;
[   8.504][d][vo/gpu/opengl] [ 19] layout(offset=128) vec2 texture_off1;
[   8.504][d][vo/gpu/opengl] [ 20] layout(offset=136) vec2 pixel_size1;
[   8.504][d][vo/gpu/opengl] [ 21] };
[   8.504][d][vo/gpu/opengl] [ 22] uniform float random;
[   8.504][d][vo/gpu/opengl] [ 23] uniform int frame;
[   8.504][d][vo/gpu/opengl] [ 24] uniform sampler2D texture0;
[   8.504][d][vo/gpu/opengl] [ 25] uniform sampler2D texture1;
[   8.504][d][vo/gpu/opengl] [ 26] #define HOOKED_raw texture0
[   8.504][d][vo/gpu/opengl] [ 27] #define HOOKED_pos texcoord0
[   8.504][d][vo/gpu/opengl] [ 28] #define HOOKED_size texture_size0
[   8.504][d][vo/gpu/opengl] [ 29] #define HOOKED_rot texture_rot0
[   8.504][d][vo/gpu/opengl] [ 30] #define HOOKED_off texture_off0
[   8.504][d][vo/gpu/opengl] [ 31] #define HOOKED_pt pixel_size0
[   8.504][d][vo/gpu/opengl] [ 32] #define HOOKED_map texmap0
[   8.504][d][vo/gpu/opengl] [ 33] #define HOOKED_mul 1.000000
[   8.504][d][vo/gpu/opengl] [ 34] #define HOOKED_tex(pos) (HOOKED_mul * vec4(texture(HOOKED_raw, pos)).rgba)
[   8.504][d][vo/gpu/opengl] [ 35] #define HOOKED_texOff(off) HOOKED_tex(HOOKED_pos + HOOKED_pt * vec2(off))
[   8.504][d][vo/gpu/opengl] [ 36] #define MAIN_raw texture0
[   8.504][d][vo/gpu/opengl] [ 37] #define MAIN_pos texcoord0
[   8.504][d][vo/gpu/opengl] [ 38] #define MAIN_size texture_size0
[   8.504][d][vo/gpu/opengl] [ 39] #define MAIN_rot texture_rot0
[   8.504][d][vo/gpu/opengl] [ 40] #define MAIN_off texture_off0
[   8.504][d][vo/gpu/opengl] [ 41] #define MAIN_pt pixel_size0
[   8.504][d][vo/gpu/opengl] [ 42] #define MAIN_map texmap0
[   8.504][d][vo/gpu/opengl] [ 43] #define MAIN_mul 1.000000
[   8.504][d][vo/gpu/opengl] [ 44] #define MAIN_tex(pos) (MAIN_mul * vec4(texture(MAIN_raw, pos)).rgba)
[   8.504][d][vo/gpu/opengl] [ 45] #define MAIN_texOff(off) MAIN_tex(MAIN_pos + MAIN_pt * vec2(off))
[   8.504][d][vo/gpu/opengl] [ 46] #define STATSMAX_raw texture1
[   8.504][d][vo/gpu/opengl] [ 47] #define STATSMAX_pos texcoord1
[   8.504][d][vo/gpu/opengl] [ 48] #define STATSMAX_size texture_size1
[   8.504][d][vo/gpu/opengl] [ 49] #define STATSMAX_rot texture_rot1
[   8.504][d][vo/gpu/opengl] [ 50] #define STATSMAX_off texture_off1
[   8.504][d][vo/gpu/opengl] [ 51] #define STATSMAX_pt pixel_size1
[   8.504][d][vo/gpu/opengl] [ 52] #define STATSMAX_map texmap1
[   8.504][d][vo/gpu/opengl] [ 53] #define STATSMAX_mul 1.000000
[   8.504][d][vo/gpu/opengl] [ 54] #define STATSMAX_tex(pos) (STATSMAX_mul * vec4(texture(STATSMAX_raw, pos)).rgba)
[   8.504][d][vo/gpu/opengl] [ 55] #define STATSMAX_texOff(off) STATSMAX_tex(STATSMAX_pos + STATSMAX_pt * vec2(off))
[   8.504][d][vo/gpu/opengl] [ 56] 
[   8.504][d][vo/gpu/opengl] [ 57] #define KERNELSIZE 5 //Kernel size, must be an positive odd integer.
[   8.504][d][vo/gpu/opengl] [ 58] #define KERNELHALFSIZE 2 //Half of the kernel size without remainder. Must be equal to trunc(KERNELSIZE/2).
[   8.504][d][vo/gpu/opengl] [ 59] 
[   8.504][d][vo/gpu/opengl] [ 60] vec4 hook() {
[   8.504][d][vo/gpu/opengl] [ 61] 
[   8.504][d][vo/gpu/opengl] [ 62] 	float gmax = 0.0;
[   8.504][d][vo/gpu/opengl] [ 63] 	
[   8.504][d][vo/gpu/opengl] [ 64] 	for (int i=0; i<KERNELSIZE; i++) {
[   8.504][d][vo/gpu/opengl] [ 65] 		float g = STATSMAX_texOff(vec2(0, i - KERNELHALFSIZE)).x;
[   8.504][d][vo/gpu/opengl] [ 66] 		
[   8.504][d][vo/gpu/opengl] [ 67] 		gmax = max(g, gmax);
[   8.504][d][vo/gpu/opengl] [ 68] 	}
[   8.504][d][vo/gpu/opengl] [ 69] 	
[   8.504][d][vo/gpu/opengl] [ 70] 	return vec4(gmax, 0.0, 0.0, 0.0);
[   8.504][d][vo/gpu/opengl] [ 71] }
[   8.504][d][vo/gpu/opengl] [ 72] 
[   8.505][d][vo/gpu/opengl] [ 73] void main() {
[   8.505][d][vo/gpu/opengl] [ 74] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.505][d][vo/gpu/opengl] [ 75] color = hook();
[   8.505][d][vo/gpu/opengl] [ 76] color.g = 0.000000;
[   8.505][d][vo/gpu/opengl] [ 77] color.b = 0.000000;
[   8.505][d][vo/gpu/opengl] [ 78] color.a = 1.000000;
[   8.505][d][vo/gpu/opengl] [ 79] out_color = color;
[   8.505][d][vo/gpu/opengl] [ 80] }
[   8.505][d][vo/gpu/opengl] shader link log (status=1): 
[   8.505][d][vo/gpu] Resizing texture: 1280x720
[   8.507][d][vo/gpu/opengl] vertex shader source:
[   8.507][d][vo/gpu/opengl] [  1] #version 440
[   8.507][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.507][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.507][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.507][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.507][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.507][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.507][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.507][d][vo/gpu/opengl] [  9] void main() {
[   8.507][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.507][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.507][d][vo/gpu/opengl] [ 12] }
[   8.507][d][vo/gpu/opengl] fragment shader source:
[   8.507][d][vo/gpu/opengl] [  1] #version 440
[   8.507][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.507][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.507][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.507][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.507][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.507][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.507][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.507][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.507][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.507][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.507][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.507][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.507][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.507][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.507][d][vo/gpu/opengl] [ 16] };
[   8.507][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.507][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.507][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.507][d][vo/gpu/opengl] [ 20] #define MAIN_raw texture0
[   8.507][d][vo/gpu/opengl] [ 21] #define MAIN_pos texcoord0
[   8.507][d][vo/gpu/opengl] [ 22] #define MAIN_size texture_size0
[   8.507][d][vo/gpu/opengl] [ 23] #define MAIN_rot texture_rot0
[   8.507][d][vo/gpu/opengl] [ 24] #define MAIN_off texture_off0
[   8.507][d][vo/gpu/opengl] [ 25] #define MAIN_pt pixel_size0
[   8.507][d][vo/gpu/opengl] [ 26] #define MAIN_map texmap0
[   8.507][d][vo/gpu/opengl] [ 27] #define MAIN_mul 1.000000
[   8.507][d][vo/gpu/opengl] [ 28] #define MAIN_tex(pos) (MAIN_mul * vec4(texture(MAIN_raw, pos)).rgba)
[   8.507][d][vo/gpu/opengl] [ 29] #define MAIN_texOff(off) MAIN_tex(MAIN_pos + MAIN_pt * vec2(off))
[   8.507][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (MAIN_texOff(vec2(x_off, y_off)))
[   8.507][d][vo/gpu/opengl] [ 31] vec4 hook() {
[   8.507][d][vo/gpu/opengl] [ 32]     vec4 result = mat4(-0.09991986, 0.13782342, -0.031251684, -0.06356843, -0.3437488, 0.05450952, 0.34347802, 0.46335372, 0.08607224, 0.044988394, 0.137179, 0.17976908, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
[   8.507][d][vo/gpu/opengl] [ 33]     result += mat4(-0.024212424, -0.09278509, -0.00040907756, 0.34552294, -0.13254678, 0.113105185, 0.005667946, -0.00036919137, -0.06375679, 0.009184115, 0.115518734, -0.115506776, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
[   8.507][d][vo/gpu/opengl] [ 34]     result += mat4(-0.14101827, 0.023523493, 0.044094566, -0.019271746, -0.44348842, -0.08818877, -0.4026149, -0.21995795, -0.15880394, -0.013732858, -0.020751135, 0.012719151, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
[   8.507][d][vo/gpu/opengl] [ 35]     result += mat4(0.013001821, -0.34503505, 0.39219138, 0.18792126, 0.24760444, -0.016173402, 0.10154511, 0.15453082, -0.058132876, 0.016784398, -0.05808539, -0.11039915, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
[   8.507][d][vo/gpu/opengl] [ 36]     result += mat4(0.37024534, 0.041440863, -0.3374568, -0.44994286, 0.19555596, 0.20855539, -0.27974075, -0.5372628, 0.21228147, -0.0295346, -0.56700057, 0.030042822, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
[   8.507][d][vo/gpu/opengl] [ 37]     result += mat4(-0.12940632, 0.057526, 0.090682045, -0.06985033, -0.13704006, -0.047685407, 0.44615674, -0.48056605, -0.06166251, -0.01883519, 0.2032237, -0.113287605, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
[   8.507][d][vo/gpu/opengl] [ 38]     result += mat4(0.010856669, -0.35820737, 0.16757219, 0.082619876, -0.03967303, 0.038705572, 0.32652855, -0.012030017, 0.015120559, -0.15314877, 0.23442009, 0.09767922, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
[   8.507][d][vo/gpu/opengl] [ 39]     result += mat4(-0.046272673, -0.17752305, 0.082018286, -0.2512824, 0.58619463, -0.060903464, -0.022793597, 0.077803515, -0.17025311, 0.05136993, 0.029383298, -0.15475409, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
[   8.507][d][vo/gpu/opengl] [ 40]     result += mat4(-0.11212024, 0.13378005, -0.2027488, 0.08056421, -0.11176219, -0.048429377, -0.08396386, 0.10507829, 0.13326839, 0.0430627, 0.051362377, 0.06482755, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
[   8.507][d][vo/gpu/opengl] [ 41]     result += vec4(-0.061233472, 0.39222646, 0.029704979, 0.02586828);
[   8.507][d][vo/gpu/opengl] [ 42]     return result;
[   8.507][d][vo/gpu/opengl] [ 43] }
[   8.507][d][vo/gpu/opengl] [ 44] void main() {
[   8.507][d][vo/gpu/opengl] [ 45] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.507][d][vo/gpu/opengl] [ 46] color = hook();
[   8.507][d][vo/gpu/opengl] [ 47] out_color = color;
[   8.507][d][vo/gpu/opengl] [ 48] }
[   8.507][d][vo/gpu/opengl] shader link log (status=1): 
[   8.507][d][vo/gpu] Resizing texture: 1280x720
[   8.509][d][vo/gpu/opengl] vertex shader source:
[   8.509][d][vo/gpu/opengl] [  1] #version 440
[   8.509][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.509][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.509][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.509][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.509][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.509][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.510][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.510][d][vo/gpu/opengl] [  9] void main() {
[   8.510][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.510][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.510][d][vo/gpu/opengl] [ 12] }
[   8.510][d][vo/gpu/opengl] fragment shader source:
[   8.510][d][vo/gpu/opengl] [  1] #version 440
[   8.510][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.510][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.510][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.510][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.510][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.510][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.510][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.510][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.510][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.510][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.510][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.510][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.510][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.510][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.510][d][vo/gpu/opengl] [ 16] };
[   8.510][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.510][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.510][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.510][d][vo/gpu/opengl] [ 20] #define conv2d_tf_raw texture0
[   8.510][d][vo/gpu/opengl] [ 21] #define conv2d_tf_pos texcoord0
[   8.510][d][vo/gpu/opengl] [ 22] #define conv2d_tf_size texture_size0
[   8.510][d][vo/gpu/opengl] [ 23] #define conv2d_tf_rot texture_rot0
[   8.510][d][vo/gpu/opengl] [ 24] #define conv2d_tf_off texture_off0
[   8.510][d][vo/gpu/opengl] [ 25] #define conv2d_tf_pt pixel_size0
[   8.510][d][vo/gpu/opengl] [ 26] #define conv2d_tf_map texmap0
[   8.510][d][vo/gpu/opengl] [ 27] #define conv2d_tf_mul 1.000000
[   8.510][d][vo/gpu/opengl] [ 28] #define conv2d_tf_tex(pos) (conv2d_tf_mul * vec4(texture(conv2d_tf_raw, pos)).rgba)
[   8.510][d][vo/gpu/opengl] [ 29] #define conv2d_tf_texOff(off) conv2d_tf_tex(conv2d_tf_pos + conv2d_tf_pt * vec2(off))
[   8.510][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.510][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.510][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.510][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.16410656, -0.40521824, 0.13121907, -0.02314597, 0.105412476, -0.060401272, -0.043063477, -0.13933973, 0.12558138, -0.020861467, 0.030370515, 0.13178016, -0.14220351, 0.20736893, 0.003321564, -0.29241714) * go_0(-1.0, -1.0);
[   8.510][d][vo/gpu/opengl] [ 34]     result += mat4(0.18517321, 0.29162985, -0.26783395, 0.039760686, 0.025527012, -0.067319244, 0.055004176, 0.048916563, 0.12750523, -0.091435954, 0.13818842, 0.36704224, 0.0839921, 0.10186618, -0.17237376, 0.13282418) * go_0(-1.0, 0.0);
[   8.510][d][vo/gpu/opengl] [ 35]     result += mat4(-0.1657887, 0.0131325135, -0.17222486, 0.091398895, -0.12756164, -0.08437298, -0.29052997, 0.3269337, 0.15870757, -0.013529402, -0.0581753, 0.11802371, 0.07099966, -0.024063632, 0.31834844, -0.11183859) * go_0(-1.0, 1.0);
[   8.510][d][vo/gpu/opengl] [ 36]     result += mat4(0.46036887, -0.07654623, 0.22923063, 0.17463821, 0.10555414, -0.117430426, 0.12406777, -0.011399492, 0.028316498, 0.13684341, 0.009664087, 0.2022659, 0.04953974, -0.31342217, -0.6103131, -0.13605757) * go_0(0.0, -1.0);
[   8.510][d][vo/gpu/opengl] [ 37]     result += mat4(0.03406955, -0.39819366, 0.61176, -0.46809456, -0.029321073, 0.46619493, 0.36700186, 0.02288561, 0.11464085, -0.10931452, -0.09154022, 0.07334147, -0.5609916, 0.31826234, -0.011012659, -0.46719545) * go_0(0.0, 0.0);
[   8.510][d][vo/gpu/opengl] [ 38]     result += mat4(-0.056855045, 0.27037027, -0.09269696, -0.563572, -0.06816116, -0.22986612, 0.08693167, -0.16246101, 0.09954046, -0.05374176, 0.0071916827, -0.1788692, 0.3825241, -0.1609887, 0.055204768, 0.10213068) * go_0(0.0, 1.0);
[   8.510][d][vo/gpu/opengl] [ 39]     result += mat4(0.0646626, 0.102358796, -0.45055822, 0.20557903, -0.23337309, 0.12633002, -0.19299199, -0.15085731, -0.13473304, 0.053790465, -0.10061193, -0.13393497, -0.04264752, -0.029740738, -0.07865285, 0.20883279) * go_0(1.0, -1.0);
[   8.510][d][vo/gpu/opengl] [ 40]     result += mat4(0.010471527, -0.033218473, -0.46157447, 0.004866583, 0.23226471, -0.059343327, -0.1439596, 0.13619648, 0.013839963, 0.15930325, 0.043742355, 0.17467323, 0.33772305, 0.40261495, -0.08351293, 0.18129359) * go_0(1.0, 0.0);
[   8.510][d][vo/gpu/opengl] [ 41]     result += mat4(-0.12493434, -0.1875134, -0.074943796, -0.0031701606, -0.037142616, 0.1667002, 0.16665547, -0.011248127, 0.0071619414, 0.0034872112, 0.120318964, -0.09625579, 0.14917047, -0.16310586, 0.07231737, 0.30447328) * go_0(1.0, 1.0);
[   8.510][d][vo/gpu/opengl] [ 42]     result += mat4(0.093798615, 0.17074613, -0.08780678, -0.012520207, 0.118534856, 0.027508778, -0.2778478, -0.19509242, -0.34137097, 0.32000312, -0.22027159, 0.337515, 0.16220862, 0.108993016, 0.14070526, 0.12784284) * go_1(-1.0, -1.0);
[   8.510][d][vo/gpu/opengl] [ 43]     result += mat4(-0.14325632, -0.1467453, -0.27502358, 0.09370837, 0.11821083, -0.012266484, -0.2100548, 0.4707502, -0.06766648, 0.58165014, -0.2512279, -0.33783755, 0.1318925, -0.04346277, 0.15454485, 0.044500057) * go_1(-1.0, 0.0);
[   8.510][d][vo/gpu/opengl] [ 44]     result += mat4(-0.05683207, 0.0051946463, -0.108000524, 0.10133204, -0.50763863, 0.007308442, 0.8542404, 0.28387356, 0.022709515, 0.294523, -0.3822472, 0.66166407, 0.01404485, 0.031282708, -0.26756814, -0.123147786) * go_1(-1.0, 1.0);
[   8.510][d][vo/gpu/opengl] [ 45]     result += mat4(-0.36455178, 0.3470555, -0.045303088, -0.03170764, -0.15802494, -0.0019141496, -0.25939587, -0.23875342, 0.130428, 0.03954273, -0.17985536, 0.105145946, 0.15804817, 0.12551713, 0.28371975, -0.085748516) * go_1(0.0, -1.0);
[   8.510][d][vo/gpu/opengl] [ 46]     result += mat4(0.0060625463, 0.2443924, -0.017692259, -0.20214005, -0.09584515, -0.012805372, -0.13942227, 0.16143198, 0.12942013, 0.41785547, 0.046071563, 0.7030026, 0.10499644, -0.20566013, -0.031321276, 0.27830327) * go_1(0.0, 0.0);
[   8.510][d][vo/gpu/opengl] [ 47]     result += mat4(-0.081274964, -0.14562319, 0.27200526, -0.20491314, 0.012910989, 0.024201397, 0.04816258, 0.21297328, -0.22015952, -0.44160756, -0.056035373, 0.33824417, -0.31645304, 0.15469243, 0.053187452, -0.20989445) * go_1(0.0, 1.0);
[   8.510][d][vo/gpu/opengl] [ 48]     result += mat4(-0.046550367, 0.033185404, 0.33337244, 0.12853645, 0.23520172, -0.05909214, 0.0861368, 0.10706329, -0.07058717, -0.11759937, -0.18594047, 0.080006264, -0.055425353, -0.12506317, 0.15729053, -0.0915004) * go_1(1.0, -1.0);
[   8.510][d][vo/gpu/opengl] [ 49]     result += mat4(0.042516407, 0.14844789, 0.16533111, 0.13502933, -0.0655417, -0.057256397, 0.076713726, -0.23448966, 0.12855926, 0.014219275, 0.051761385, 0.053433083, -0.2446715, -0.4008074, 0.19603717, -0.1796951) * go_1(1.0, 0.0);
[   8.510][d][vo/gpu/opengl] [ 50]     result += mat4(0.14777803, 0.15524907, 0.043158617, -0.06996876, 0.19210646, -0.2144364, -0.47020787, -0.4207906, -0.18074386, -0.2163903, 0.0030754965, 0.36799973, -0.3837698, -0.0022661497, -0.37276733, -0.28934997) * go_1(1.0, 1.0);
[   8.510][d][vo/gpu/opengl] [ 51]     result += vec4(-0.018297346, -0.080951825, -0.062163066, -0.08050014);
[   8.510][d][vo/gpu/opengl] [ 52]     return result;
[   8.510][d][vo/gpu/opengl] [ 53] }
[   8.510][d][vo/gpu/opengl] [ 54] void main() {
[   8.510][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.510][d][vo/gpu/opengl] [ 56] color = hook();
[   8.510][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.510][d][vo/gpu/opengl] [ 58] }
[   8.510][d][vo/gpu/opengl] shader link log (status=1): 
[   8.510][d][vo/gpu] Resizing texture: 1280x720
[   8.512][d][vo/gpu/opengl] vertex shader source:
[   8.512][d][vo/gpu/opengl] [  1] #version 440
[   8.512][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.512][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.512][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.512][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.512][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.512][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.512][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.512][d][vo/gpu/opengl] [  9] void main() {
[   8.512][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.512][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.512][d][vo/gpu/opengl] [ 12] }
[   8.512][d][vo/gpu/opengl] fragment shader source:
[   8.512][d][vo/gpu/opengl] [  1] #version 440
[   8.512][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.512][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.512][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.512][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.512][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.512][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.512][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.512][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.513][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.513][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.513][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.513][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.513][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.513][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.513][d][vo/gpu/opengl] [ 16] };
[   8.513][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.513][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.513][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.513][d][vo/gpu/opengl] [ 20] #define conv2d_1_tf_raw texture0
[   8.513][d][vo/gpu/opengl] [ 21] #define conv2d_1_tf_pos texcoord0
[   8.513][d][vo/gpu/opengl] [ 22] #define conv2d_1_tf_size texture_size0
[   8.513][d][vo/gpu/opengl] [ 23] #define conv2d_1_tf_rot texture_rot0
[   8.513][d][vo/gpu/opengl] [ 24] #define conv2d_1_tf_off texture_off0
[   8.513][d][vo/gpu/opengl] [ 25] #define conv2d_1_tf_pt pixel_size0
[   8.513][d][vo/gpu/opengl] [ 26] #define conv2d_1_tf_map texmap0
[   8.513][d][vo/gpu/opengl] [ 27] #define conv2d_1_tf_mul 1.000000
[   8.513][d][vo/gpu/opengl] [ 28] #define conv2d_1_tf_tex(pos) (conv2d_1_tf_mul * vec4(texture(conv2d_1_tf_raw, pos)).rgba)
[   8.513][d][vo/gpu/opengl] [ 29] #define conv2d_1_tf_texOff(off) conv2d_1_tf_tex(conv2d_1_tf_pos + conv2d_1_tf_pt * vec2(off))
[   8.513][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_1_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.513][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_1_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.513][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.513][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(0.31543177, 0.23095237, -0.06692611, -0.5867763, 0.003622504, 0.17948842, -0.14627707, 0.1745016, -0.052964583, -0.15551159, 0.05644786, -0.012665164, 0.13107763, 0.11369179, -0.09452995, -0.11973403) * go_0(-1.0, -1.0);
[   8.513][d][vo/gpu/opengl] [ 34]     result += mat4(-0.2694661, -0.115382135, 0.3073268, -0.067228466, -0.25511482, -0.13922207, 0.36758214, -0.18821828, -0.022617863, 0.20333402, -0.11125889, 0.3552245, -0.013346653, -0.099095374, -0.25100616, 0.35521755) * go_0(-1.0, 0.0);
[   8.513][d][vo/gpu/opengl] [ 35]     result += mat4(0.011012409, -0.13675085, 0.25642, -0.34851208, -0.23184675, 0.18012202, 0.57654136, 0.103173524, -0.16461405, 0.038177088, 0.1234096, 0.013202029, -0.19033363, 0.07469178, -0.017948546, 0.15287702) * go_0(-1.0, 1.0);
[   8.513][d][vo/gpu/opengl] [ 36]     result += mat4(-0.05340533, 0.23797482, 0.20351392, -0.05333351, -0.12181174, -0.23363493, -0.20696607, 0.109941036, -0.11519453, 0.13842066, -0.10687832, 0.29040006, 0.022218632, 0.031238724, 0.2685182, 0.15300068) * go_0(0.0, -1.0);
[   8.513][d][vo/gpu/opengl] [ 37]     result += mat4(0.22985318, -0.3103802, -0.22916415, 0.25238806, -0.11690287, -0.1947488, 0.118020535, 0.07814263, -0.06335474, -0.007870727, 0.076106325, 0.094677486, -0.16776285, -0.006570437, -0.29589584, 0.41413507) * go_0(0.0, 0.0);
[   8.513][d][vo/gpu/opengl] [ 38]     result += mat4(0.43607962, -0.36456433, -0.123776875, -0.16634953, -0.091190875, 0.13035081, 0.28627968, 0.27249968, 0.12356344, -0.008616177, 0.09599816, -0.006144557, -0.23490307, 0.3013123, 0.14153156, 0.21837278) * go_0(0.0, 1.0);
[   8.513][d][vo/gpu/opengl] [ 39]     result += mat4(0.060364585, 0.37860224, 0.039182413, -0.22805426, -0.089910224, -0.06817697, -0.2684275, -0.12528503, 0.036934495, -0.07826616, 0.06559976, -0.08253646, 0.13489649, 0.06237663, 0.126376, 0.21194184) * go_0(1.0, -1.0);
[   8.513][d][vo/gpu/opengl] [ 40]     result += mat4(-0.12534817, 0.21225189, -0.27818045, -0.3070443, -0.006957577, -0.025105853, 0.12100924, -0.06916452, 0.23081483, 0.1802756, -0.18995638, 0.16603014, -0.2904096, -0.25292823, -0.21834068, 0.13719653) * go_0(1.0, 0.0);
[   8.513][d][vo/gpu/opengl] [ 41]     result += mat4(0.017209655, 0.10757137, 0.21414296, -0.30885983, 0.10467716, -0.2184891, 0.100061476, -0.1527528, 0.2100472, -0.25768545, -0.22329919, -0.29153427, -0.06983842, -0.103854865, -0.051384352, 0.14629121) * go_0(1.0, 1.0);
[   8.513][d][vo/gpu/opengl] [ 42]     result += mat4(0.0059623295, -0.26060802, 0.32115817, 0.021025505, 0.09783085, -0.15865178, 0.1473021, -0.24977303, -0.033508282, 0.17480391, -0.091310136, 0.09870876, 0.10504043, -0.06105686, 0.013493489, -0.11278855) * go_1(-1.0, -1.0);
[   8.513][d][vo/gpu/opengl] [ 43]     result += mat4(0.14875248, -0.14859414, 0.19377062, -0.17456068, 0.101288855, -0.1113682, -0.48944646, 0.1018565, -0.037392337, 0.08539691, 0.1751306, -0.15428723, -0.059375558, 0.027663672, 0.051804014, -0.049813222) * go_1(-1.0, 0.0);
[   8.513][d][vo/gpu/opengl] [ 44]     result += mat4(0.118846565, -0.19869871, -0.037388258, 0.08456728, -0.11662527, -0.43818352, -0.093285345, 0.038507205, -0.051991668, 0.21008292, 0.10792365, 0.2020924, 0.057021596, 0.09460527, 0.0016551288, -0.0015957063) * go_1(-1.0, 1.0);
[   8.513][d][vo/gpu/opengl] [ 45]     result += mat4(0.11062174, -0.2639232, -0.060295466, -0.3217331, -0.050545212, 0.30989558, 0.30906132, 0.030323273, 0.028986752, 0.037429404, 0.20855664, -0.19848943, 0.034687653, -0.09599135, -0.06250494, -0.13215867) * go_1(0.0, -1.0);
[   8.513][d][vo/gpu/opengl] [ 46]     result += mat4(-0.010391146, 0.07657845, 0.44491258, 0.0435906, 0.0075931503, 0.42632654, 0.47022533, 0.34737435, -0.15452717, -0.14613411, -0.45231065, 0.12094409, 0.0067911847, 0.057501152, 0.09876979, 0.044946447) * go_1(0.0, 0.0);
[   8.513][d][vo/gpu/opengl] [ 47]     result += mat4(-0.15607435, 0.2293058, -0.09520331, 0.012836732, -0.15282455, 0.26437718, -0.1685477, -0.13211122, -0.055801593, -0.016778728, -0.34478986, -0.23228309, 0.12300962, -0.13235827, -0.13987203, -0.16550972) * go_1(0.0, 1.0);
[   8.513][d][vo/gpu/opengl] [ 48]     result += mat4(0.13161735, -0.09039346, -0.033475474, -0.23686698, 0.1514885, 0.20977421, 0.031431954, -0.0049226107, 0.090661936, 0.15288061, -0.03316583, 0.09646573, -0.32651708, 0.18825398, -0.15777239, 0.17572704) * go_1(1.0, -1.0);
[   8.513][d][vo/gpu/opengl] [ 49]     result += mat4(0.112157226, -0.08712878, 0.23453182, 0.1043877, -0.14686783, 0.28682423, -0.086443506, 0.059457052, -0.31530112, -0.2700583, -0.06028952, -0.070416875, 0.18053482, 0.16653341, 0.25215197, 0.061915852) * go_1(1.0, 0.0);
[   8.513][d][vo/gpu/opengl] [ 50]     result += mat4(-0.20122242, 0.076313145, -0.0988483, 0.094337784, -0.35436687, 0.3762327, -0.07809558, 0.3055848, 0.10425242, -0.17087407, 0.030301496, -0.13911743, 0.01630275, 0.24247427, -0.006474477, 0.03842641) * go_1(1.0, 1.0);
[   8.513][d][vo/gpu/opengl] [ 51]     result += vec4(-0.008952847, -0.0058945753, -0.08097229, 0.020968592);
[   8.513][d][vo/gpu/opengl] [ 52]     return result;
[   8.513][d][vo/gpu/opengl] [ 53] }
[   8.513][d][vo/gpu/opengl] [ 54] void main() {
[   8.513][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.513][d][vo/gpu/opengl] [ 56] color = hook();
[   8.513][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.513][d][vo/gpu/opengl] [ 58] }
[   8.513][d][vo/gpu/opengl] shader link log (status=1): 
[   8.513][d][vo/gpu] Resizing texture: 1280x720
[   8.515][d][vo/gpu/opengl] vertex shader source:
[   8.515][d][vo/gpu/opengl] [  1] #version 440
[   8.515][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.515][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.515][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.515][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.515][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.515][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.515][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.515][d][vo/gpu/opengl] [  9] void main() {
[   8.515][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.515][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.515][d][vo/gpu/opengl] [ 12] }
[   8.515][d][vo/gpu/opengl] fragment shader source:
[   8.515][d][vo/gpu/opengl] [  1] #version 440
[   8.515][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.515][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.515][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.515][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.515][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.515][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.515][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.515][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.515][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.515][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.515][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.515][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.515][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.515][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.515][d][vo/gpu/opengl] [ 16] };
[   8.515][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.515][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.515][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.515][d][vo/gpu/opengl] [ 20] #define conv2d_2_tf_raw texture0
[   8.515][d][vo/gpu/opengl] [ 21] #define conv2d_2_tf_pos texcoord0
[   8.515][d][vo/gpu/opengl] [ 22] #define conv2d_2_tf_size texture_size0
[   8.515][d][vo/gpu/opengl] [ 23] #define conv2d_2_tf_rot texture_rot0
[   8.515][d][vo/gpu/opengl] [ 24] #define conv2d_2_tf_off texture_off0
[   8.515][d][vo/gpu/opengl] [ 25] #define conv2d_2_tf_pt pixel_size0
[   8.515][d][vo/gpu/opengl] [ 26] #define conv2d_2_tf_map texmap0
[   8.515][d][vo/gpu/opengl] [ 27] #define conv2d_2_tf_mul 1.000000
[   8.515][d][vo/gpu/opengl] [ 28] #define conv2d_2_tf_tex(pos) (conv2d_2_tf_mul * vec4(texture(conv2d_2_tf_raw, pos)).rgba)
[   8.515][d][vo/gpu/opengl] [ 29] #define conv2d_2_tf_texOff(off) conv2d_2_tf_tex(conv2d_2_tf_pos + conv2d_2_tf_pt * vec2(off))
[   8.515][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_2_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.515][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_2_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.515][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.515][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.2237721, -0.0064096362, -0.31808427, 0.73477733, 0.015353088, 0.23983319, 0.14967978, -0.34920225, -0.07456269, 0.093151815, -0.14331086, -0.24586205, -0.14183366, 0.06401045, -0.22044073, 0.29932275) * go_0(-1.0, -1.0);
[   8.515][d][vo/gpu/opengl] [ 34]     result += mat4(-0.07968509, -0.3349146, 0.16529128, 0.08443499, 0.4095855, -0.17120704, 0.17425705, 0.15298946, 0.2981273, 0.2212369, 0.10392389, -0.28775454, -0.065247655, -0.15255849, 0.13094437, 0.18685219) * go_0(-1.0, 0.0);
[   8.515][d][vo/gpu/opengl] [ 35]     result += mat4(0.015706737, -0.17755036, 0.2622526, 0.112057306, -0.15876788, -0.38466996, -0.33700845, -0.031711742, -0.023320962, -0.3145249, -0.21223734, -0.1314596, -0.1888095, -0.046370104, 0.09000896, -0.0046378844) * go_0(-1.0, 1.0);
[   8.515][d][vo/gpu/opengl] [ 36]     result += mat4(-0.31127506, 0.31304324, -0.03965752, 0.03649018, -0.029851055, 0.05801377, 0.00040150844, -0.04422069, 0.18019931, 0.14415511, -0.09845236, 0.21895434, -0.013932474, -0.046454947, -0.3403935, -0.006705289) * go_0(0.0, -1.0);
[   8.515][d][vo/gpu/opengl] [ 37]     result += mat4(-0.34878647, -0.5129283, 0.060250953, -0.16354133, 0.20644619, 0.08732273, -0.24118888, 0.24455065, 0.24449423, 0.44103387, 0.22455928, 0.25738943, -0.26914698, -0.21309987, 0.08386486, 0.021484816) * go_0(0.0, 0.0);
[   8.515][d][vo/gpu/opengl] [ 38]     result += mat4(-0.057454903, -0.4121922, 0.022661546, 0.37178272, 0.03331408, 0.05044008, 0.04324371, 0.20727943, 0.2432641, 0.076906696, -0.20858039, 0.012439015, -0.19335061, 0.09217451, 0.1968369, -0.19435833) * go_0(0.0, 1.0);
[   8.515][d][vo/gpu/opengl] [ 39]     result += mat4(-0.16960496, 0.24616167, 0.37977478, 0.14324574, -0.011531225, -0.11312143, -0.18141079, -0.23843932, 0.0086012175, -0.3564491, -0.12639481, 0.009799298, -0.29120612, 0.23756824, 0.18035695, -0.087133996) * go_0(1.0, -1.0);
[   8.515][d][vo/gpu/opengl] [ 40]     result += mat4(-0.10081239, 0.29191494, 0.10434693, 0.08970636, 0.008997759, 0.104756236, 0.039641086, 0.02323888, -0.11627765, 0.023693223, -0.30801758, -0.120208986, 0.05086147, 0.18498175, 0.15595439, -0.09877306) * go_0(1.0, 0.0);
[   8.515][d][vo/gpu/opengl] [ 41]     result += mat4(0.101321675, -0.2929976, 0.38810417, 0.5605376, -0.04073937, 0.030110704, -0.18147062, -0.09833952, 0.01927733, 0.15335669, -0.15384074, -0.110595055, -0.054297395, -0.077522054, 0.07918369, -0.068480626) * go_0(1.0, 1.0);
[   8.515][d][vo/gpu/opengl] [ 42]     result += mat4(0.23263514, -0.11719232, 0.2903209, -0.007503795, -0.020222448, -0.17790157, -0.15600762, -0.08741775, 0.12529704, 0.25548857, -0.04585447, -0.10255033, 0.18350503, -0.29593533, 0.0868933, 0.027004737) * go_1(-1.0, -1.0);
[   8.515][d][vo/gpu/opengl] [ 43]     result += mat4(-0.14958654, -0.006238835, -0.2928948, 0.1988557, -0.17057803, 0.12524141, 0.13978264, -0.019280292, 0.05967142, -0.07790818, -0.5893818, -0.022845713, -0.08596779, 0.07875358, -0.03316667, -0.4369282) * go_1(-1.0, 0.0);
[   8.515][d][vo/gpu/opengl] [ 44]     result += mat4(0.19195688, -0.060883682, -0.25897828, 0.07063324, 0.090833396, 0.003422883, 0.109534174, 0.031180874, -0.05017118, 0.022862168, -0.270113, -0.057831235, 0.53920543, -0.10252776, -0.091807485, 0.004294343) * go_1(-1.0, 1.0);
[   8.515][d][vo/gpu/opengl] [ 45]     result += mat4(-0.18494242, -0.119284816, 0.3821897, 0.07777979, 0.15568028, -0.2854859, -0.22441281, -0.049155876, -0.15292497, 0.21895619, -0.095677756, 0.15210424, 0.001643022, -0.026176987, 0.048463076, -0.4824009) * go_1(0.0, -1.0);
[   8.515][d][vo/gpu/opengl] [ 46]     result += mat4(0.007215129, 0.17074333, 0.053930074, -0.027014816, -0.17180431, -0.15163863, -0.0012122132, -0.18934256, -0.08294297, -0.24580221, -0.46552867, -0.27923223, 0.4092668, 0.06288688, -0.1602188, -0.0030876845) * go_1(0.0, 0.0);
[   8.516][d][vo/gpu/opengl] [ 47]     result += mat4(0.111870885, 0.03317145, 0.14155298, 0.20328505, -0.05104131, 0.13979794, 0.018966835, -0.07238511, 0.05493792, -0.14975783, -0.10293237, -0.21985306, 0.49054706, 0.18288186, -0.26925826, 0.35845932) * go_1(0.0, 1.0);
[   8.516][d][vo/gpu/opengl] [ 48]     result += mat4(0.3747799, -0.096748486, -0.17139742, 0.25289854, -0.17421168, -0.018461818, 0.09747162, 0.01660535, -0.20580359, 0.56189656, 0.17151354, -0.26347768, 0.28350568, -0.21486014, -0.44330928, -0.008981037) * go_1(1.0, -1.0);
[   8.516][d][vo/gpu/opengl] [ 49]     result += mat4(0.10169985, -0.18244018, 0.04760736, 0.41017643, -0.09468786, -0.024218475, 0.103733875, -0.22540338, 0.10630112, 0.3677178, -0.104170956, 0.057317447, 0.21764882, 0.0789158, -0.22041337, 0.15065216) * go_1(1.0, 0.0);
[   8.516][d][vo/gpu/opengl] [ 50]     result += mat4(0.11633995, -0.008195114, -0.14501533, 0.07168025, 0.058413275, 0.055995367, 0.09362145, -0.13827963, 0.13760869, 0.040319785, 0.038895044, 0.2675253, -0.087339684, 0.1412073, -0.17166458, -0.2312994) * go_1(1.0, 1.0);
[   8.516][d][vo/gpu/opengl] [ 51]     result += vec4(-0.059377354, -0.02055341, 0.07234869, -0.015452986);
[   8.516][d][vo/gpu/opengl] [ 52]     return result;
[   8.516][d][vo/gpu/opengl] [ 53] }
[   8.516][d][vo/gpu/opengl] [ 54] void main() {
[   8.516][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.516][d][vo/gpu/opengl] [ 56] color = hook();
[   8.516][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.516][d][vo/gpu/opengl] [ 58] }
[   8.516][d][vo/gpu/opengl] shader link log (status=1): 
[   8.516][d][vo/gpu] Resizing texture: 1280x720
[   8.518][d][vo/gpu/opengl] vertex shader source:
[   8.518][d][vo/gpu/opengl] [  1] #version 440
[   8.518][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.518][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.518][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.518][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.518][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.518][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.518][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.518][d][vo/gpu/opengl] [  9] void main() {
[   8.518][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.518][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.518][d][vo/gpu/opengl] [ 12] }
[   8.518][d][vo/gpu/opengl] fragment shader source:
[   8.518][d][vo/gpu/opengl] [  1] #version 440
[   8.518][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.518][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.518][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.518][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.518][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.518][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.518][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.518][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.518][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.518][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.518][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.518][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.518][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.518][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.518][d][vo/gpu/opengl] [ 16] };
[   8.518][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.518][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.518][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.518][d][vo/gpu/opengl] [ 20] #define conv2d_3_tf_raw texture0
[   8.518][d][vo/gpu/opengl] [ 21] #define conv2d_3_tf_pos texcoord0
[   8.518][d][vo/gpu/opengl] [ 22] #define conv2d_3_tf_size texture_size0
[   8.518][d][vo/gpu/opengl] [ 23] #define conv2d_3_tf_rot texture_rot0
[   8.518][d][vo/gpu/opengl] [ 24] #define conv2d_3_tf_off texture_off0
[   8.518][d][vo/gpu/opengl] [ 25] #define conv2d_3_tf_pt pixel_size0
[   8.518][d][vo/gpu/opengl] [ 26] #define conv2d_3_tf_map texmap0
[   8.518][d][vo/gpu/opengl] [ 27] #define conv2d_3_tf_mul 1.000000
[   8.518][d][vo/gpu/opengl] [ 28] #define conv2d_3_tf_tex(pos) (conv2d_3_tf_mul * vec4(texture(conv2d_3_tf_raw, pos)).rgba)
[   8.518][d][vo/gpu/opengl] [ 29] #define conv2d_3_tf_texOff(off) conv2d_3_tf_tex(conv2d_3_tf_pos + conv2d_3_tf_pt * vec2(off))
[   8.518][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_3_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.518][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_3_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.518][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.518][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.29012984, -0.13150147, 0.31015614, 0.05992291, -0.050289866, 0.14845313, -0.09608898, 0.27913308, 0.060307387, -0.04160452, 0.035932682, -0.08137563, -0.07999419, 0.11818284, -0.27512288, 0.21948813) * go_0(-1.0, -1.0);
[   8.518][d][vo/gpu/opengl] [ 34]     result += mat4(0.12916058, -0.21759962, -0.33868533, 0.021636661, 0.053470243, 0.1412425, 0.043395396, -0.26751056, -0.01689101, -0.2623835, 0.010809152, 0.062962815, -0.20692012, -0.1677863, -0.23313859, -0.17402615) * go_0(-1.0, 0.0);
[   8.518][d][vo/gpu/opengl] [ 35]     result += mat4(-0.08204112, -0.23672083, -0.0064437394, -0.13200696, -0.056692924, -0.02708657, 0.12536962, 0.004428919, 0.14137582, 0.15404348, -0.105753876, 0.047957454, 0.15734316, 0.16562423, -0.010160829, -0.06602983) * go_0(-1.0, 1.0);
[   8.518][d][vo/gpu/opengl] [ 36]     result += mat4(0.025653997, -0.10877775, -0.31258908, 0.18841636, -0.36005193, 0.1816357, -0.34537643, -0.0741087, 0.4663994, 0.0065186517, 0.08109033, 0.2976773, -0.35774228, -0.041366056, -0.37852773, 0.050565656) * go_0(0.0, -1.0);
[   8.518][d][vo/gpu/opengl] [ 37]     result += mat4(0.04392313, 0.11316681, -0.14421389, 0.17985669, -0.1651274, -0.5656209, -0.124100484, 0.42774054, -0.1153939, 0.16829851, 0.2025612, 0.054007456, -0.06868256, -0.56935954, -0.12227961, 0.17688861) * go_0(0.0, 0.0);
[   8.518][d][vo/gpu/opengl] [ 38]     result += mat4(0.34041, 0.499, 0.15234196, 0.21353458, -0.2732667, -0.049950935, 0.03550811, -0.21051687, 0.2609023, 0.016438454, -0.29874632, 0.37994128, 0.049288407, -0.31126305, 0.029235512, -0.012256015) * go_0(0.0, 1.0);
[   8.518][d][vo/gpu/opengl] [ 39]     result += mat4(-0.0046853204, 0.15391374, -0.040689662, 0.20186873, -0.08137621, 0.35905558, 0.23733845, 0.21794793, -0.066420384, 0.029600656, -0.31421044, -0.050773863, -0.06260773, 0.04634221, -0.10948491, -0.045498934) * go_0(1.0, -1.0);
[   8.518][d][vo/gpu/opengl] [ 40]     result += mat4(-0.082953, -0.025837064, -0.09928303, -0.14300232, 0.275064, 0.07793617, 0.22240888, 0.06637834, -0.4382666, -0.2932182, -0.27243167, -0.14221182, 0.5695728, 0.20719238, 0.5575927, 0.40816882) * go_0(1.0, 0.0);
[   8.518][d][vo/gpu/opengl] [ 41]     result += mat4(-0.18510929, -0.15052167, 0.25277212, 0.06804461, 0.016387, 0.20310035, 0.2903229, -0.0615877, -0.28987274, -0.11942605, 0.013498961, 0.3184152, 0.29543474, -0.042830903, -0.018111207, -0.13263674) * go_0(1.0, 1.0);
[   8.518][d][vo/gpu/opengl] [ 42]     result += mat4(0.25749087, 0.0053866603, -0.09391162, -0.06129529, -0.094091184, -0.07419633, 0.0013858611, 0.012000353, -0.062903, -0.0204224, -0.12113313, 0.017942557, -0.073379934, 0.052201986, 0.35864577, 0.023564404) * go_1(-1.0, -1.0);
[   8.518][d][vo/gpu/opengl] [ 43]     result += mat4(0.100115694, 0.19451359, 0.23252094, 0.19506809, -0.12470779, 0.0027281935, -0.17488572, -0.018721964, -0.15159339, 0.18457152, 0.057712987, -0.08191495, 0.19735703, 0.07326743, -0.28563106, 0.01642815) * go_1(-1.0, 0.0);
[   8.518][d][vo/gpu/opengl] [ 44]     result += mat4(0.068062514, 0.28356665, 0.07377898, 0.42776972, 0.28725025, -0.13045293, -0.17525704, -0.05885591, -0.16676305, -0.2555945, -0.10078422, -0.053032875, 0.084470876, 0.06460686, 0.13824362, -0.05231353) * go_1(-1.0, 1.0);
[   8.518][d][vo/gpu/opengl] [ 45]     result += mat4(0.22637829, -0.028969254, 0.1968254, -0.13331996, 0.038017053, -0.008854481, -0.2031639, 0.09237089, -0.3821112, 0.1108527, -0.11029933, -0.24542028, 0.22416145, -0.031492114, -0.19144306, -0.0996271) * go_1(0.0, -1.0);
[   8.518][d][vo/gpu/opengl] [ 46]     result += mat4(0.10776744, 0.16363445, 0.14656505, -0.3737814, -0.06642015, 0.5616549, -0.008412252, -0.37266847, 0.12506576, -0.15329036, 0.037538245, -0.10810259, 0.01706349, 0.1813702, 0.035651788, -0.012786579) * go_1(0.0, 0.0);
[   8.518][d][vo/gpu/opengl] [ 47]     result += mat4(-0.4023338, -0.2098614, -0.18285121, -0.02727653, 0.26107362, 0.041306913, -0.036515504, -0.045217298, -0.39958602, -0.21229339, -0.021053292, -0.13427502, 0.36178818, 0.20934913, 0.1500852, 0.2634554) * go_1(0.0, 1.0);
[   8.518][d][vo/gpu/opengl] [ 48]     result += mat4(0.07794611, -0.25937587, -0.06822529, -0.056336135, 0.094220124, 0.21588847, -0.0455218, -0.10968329, -0.08068449, -0.31366697, 0.07799637, 0.24252681, 0.23963861, 0.13715535, 0.010329345, 0.09094301) * go_1(1.0, -1.0);
[   8.518][d][vo/gpu/opengl] [ 49]     result += mat4(-0.20975718, -0.12550138, 0.14453574, -0.0020878632, -0.07153068, 0.3249998, -0.056577377, 0.18166828, 0.37204072, 0.17018336, 0.3752895, 0.32178587, 0.2571982, -0.27258632, -0.25971004, -0.40536007) * go_1(1.0, 0.0);
[   8.518][d][vo/gpu/opengl] [ 50]     result += mat4(-0.3243907, -0.06300621, -0.09398436, -0.19549188, 0.14906861, 0.061537784, -0.055284478, 0.11281728, 0.12964857, 0.09979093, -0.1810159, -0.4104283, 0.05807971, -0.056371246, 0.08072554, 0.18479007) * go_1(1.0, 1.0);
[   8.518][d][vo/gpu/opengl] [ 51]     result += vec4(-0.048888464, -0.0561434, 0.030690912, -0.030496685);
[   8.518][d][vo/gpu/opengl] [ 52]     return result;
[   8.518][d][vo/gpu/opengl] [ 53] }
[   8.518][d][vo/gpu/opengl] [ 54] void main() {
[   8.518][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.518][d][vo/gpu/opengl] [ 56] color = hook();
[   8.518][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.518][d][vo/gpu/opengl] [ 58] }
[   8.519][d][vo/gpu/opengl] shader link log (status=1): 
[   8.519][d][vo/gpu] Resizing texture: 1280x720
[   8.521][d][vo/gpu/opengl] vertex shader source:
[   8.521][d][vo/gpu/opengl] [  1] #version 440
[   8.521][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.521][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.521][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.521][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.521][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.521][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.521][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.521][d][vo/gpu/opengl] [  9] void main() {
[   8.521][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.521][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.521][d][vo/gpu/opengl] [ 12] }
[   8.521][d][vo/gpu/opengl] fragment shader source:
[   8.521][d][vo/gpu/opengl] [  1] #version 440
[   8.521][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.521][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.521][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.521][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.521][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.521][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.521][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.521][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.521][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.521][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.521][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.521][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.521][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.521][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.521][d][vo/gpu/opengl] [ 16] };
[   8.521][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.521][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.521][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.521][d][vo/gpu/opengl] [ 20] #define conv2d_4_tf_raw texture0
[   8.521][d][vo/gpu/opengl] [ 21] #define conv2d_4_tf_pos texcoord0
[   8.521][d][vo/gpu/opengl] [ 22] #define conv2d_4_tf_size texture_size0
[   8.521][d][vo/gpu/opengl] [ 23] #define conv2d_4_tf_rot texture_rot0
[   8.521][d][vo/gpu/opengl] [ 24] #define conv2d_4_tf_off texture_off0
[   8.521][d][vo/gpu/opengl] [ 25] #define conv2d_4_tf_pt pixel_size0
[   8.521][d][vo/gpu/opengl] [ 26] #define conv2d_4_tf_map texmap0
[   8.521][d][vo/gpu/opengl] [ 27] #define conv2d_4_tf_mul 1.000000
[   8.521][d][vo/gpu/opengl] [ 28] #define conv2d_4_tf_tex(pos) (conv2d_4_tf_mul * vec4(texture(conv2d_4_tf_raw, pos)).rgba)
[   8.521][d][vo/gpu/opengl] [ 29] #define conv2d_4_tf_texOff(off) conv2d_4_tf_tex(conv2d_4_tf_pos + conv2d_4_tf_pt * vec2(off))
[   8.521][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_4_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.521][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_4_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.521][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.521][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(0.15332128, 0.027258258, 0.14900503, -0.15982795, 0.17021236, -0.51046044, -0.15287271, -0.058167327, 0.51826185, -0.34817994, 0.004513167, 0.05395769, 0.1990321, -0.049979225, 0.11391989, -0.16062729) * go_0(-1.0, -1.0);
[   8.521][d][vo/gpu/opengl] [ 34]     result += mat4(0.033682905, 0.019728886, 0.19931756, 0.17381927, 0.2585768, -0.2124572, -0.014632459, 0.39779893, -0.1146207, -0.2396625, 0.08960277, 0.38345298, 0.25497693, 0.11692859, -0.14207517, 0.12667973) * go_0(-1.0, 0.0);
[   8.521][d][vo/gpu/opengl] [ 35]     result += mat4(-0.14911255, 0.08910706, 0.16136818, 0.03914566, 0.24204038, -0.03607149, -0.4571109, 0.10802461, -0.0021356856, 0.00885878, 0.22297303, 0.2367231, 0.045177583, 0.11120606, -0.009971904, -0.059262395) * go_0(-1.0, 1.0);
[   8.521][d][vo/gpu/opengl] [ 36]     result += mat4(0.24565999, -0.2261384, 0.47373205, 0.024613412, -0.10923052, 0.039027315, -0.42707404, -0.3783373, 0.3544573, -0.5468578, -0.27599156, -0.09455918, 0.18760219, -0.19082001, 0.030565469, 0.20589156) * go_0(0.0, -1.0);
[   8.521][d][vo/gpu/opengl] [ 37]     result += mat4(0.1973198, -0.03433863, 0.059960485, 0.045642868, 0.1819595, -0.14460869, 0.1286175, 0.2067575, -0.042632047, -0.11842967, -0.11224446, -0.18764776, -0.19563004, 0.027425969, 0.24056377, 0.5949649) * go_0(0.0, 0.0);
[   8.521][d][vo/gpu/opengl] [ 38]     result += mat4(0.055027682, 0.16331595, -0.2608588, 0.12545955, 0.4588985, 0.03642909, 0.22187738, 0.45190734, -0.001210133, -0.057651415, -0.061199043, 0.11935476, -0.049561135, 0.27509886, 0.13778673, -0.124914035) * go_0(0.0, 1.0);
[   8.521][d][vo/gpu/opengl] [ 39]     result += mat4(-0.02257459, 0.27705106, 0.044165276, -0.26521233, 0.05982374, -0.2824302, 0.3171142, 0.08430561, -0.10155528, 0.16182268, -0.09183147, -0.19447176, 0.3295707, -0.50616395, -0.036964044, 0.23166709) * go_0(1.0, -1.0);
[   8.521][d][vo/gpu/opengl] [ 40]     result += mat4(-0.0232342, 0.07299799, -0.18038079, -0.13672702, -0.108305976, 0.15024792, -0.19531927, 0.0870979, -0.26488534, 0.19481428, 0.10737945, -0.14573483, -0.33094683, 0.24155116, -0.09850332, 0.2797003) * go_0(1.0, 0.0);
[   8.521][d][vo/gpu/opengl] [ 41]     result += mat4(-0.24089853, 0.19506595, 0.4799156, -0.058313113, 0.36212957, -0.44844806, 0.23864488, 0.15477742, -0.07795971, -0.0033861927, -0.11216164, 0.033454563, -0.25893036, 0.23793478, -0.15769425, -0.00033481256) * go_0(1.0, 1.0);
[   8.521][d][vo/gpu/opengl] [ 42]     result += mat4(0.05772507, -0.1640253, -0.13499664, -0.20460358, -0.024399966, 0.14966168, -0.090857334, -0.039677754, 0.00036956606, -0.24236615, -0.053542696, -0.0049544116, 0.026651502, 0.39019194, -0.2742246, -0.061242323) * go_1(-1.0, -1.0);
[   8.521][d][vo/gpu/opengl] [ 43]     result += mat4(-0.016323274, -0.036179908, 0.029965919, 0.11151491, -0.00016685206, -0.29573023, 0.17996423, -0.20145437, 0.1324275, -0.18442132, -0.24618152, 0.061780427, -0.02770517, 0.28452995, 0.39804098, -0.1174389) * go_1(-1.0, 0.0);
[   8.521][d][vo/gpu/opengl] [ 44]     result += mat4(-0.025068847, -0.053328387, -0.27053785, 0.26866457, -0.09866204, 0.057677213, 0.01850112, -0.18014707, -0.13319959, -0.14411181, -0.26355243, -0.022209354, -0.05062645, -0.036771543, 0.13294417, -0.18458557) * go_1(-1.0, 1.0);
[   8.521][d][vo/gpu/opengl] [ 45]     result += mat4(-0.046194963, 0.038230438, -0.08993043, -0.07236354, 0.11031123, -0.16504908, -0.09517036, -0.16459833, -0.5279925, 0.12686682, -0.05726125, 0.055361677, 0.31593755, 0.027328093, 0.001839602, 0.30581662) * go_1(0.0, -1.0);
[   8.521][d][vo/gpu/opengl] [ 46]     result += mat4(0.08608678, 0.03168437, 0.007713377, -0.26140293, -0.1268983, 0.13395861, -0.069848835, -0.24080403, 0.018839337, -0.049821075, -0.21461345, -0.14168301, -0.0872339, 0.47096667, 0.022512507, 0.14860632) * go_1(0.0, 0.0);
[   8.521][d][vo/gpu/opengl] [ 47]     result += mat4(0.06293673, 0.22462969, 0.045494985, 0.021673543, 0.18227446, -0.2956555, 0.08010543, -0.01919729, -0.012190269, 0.241983, -0.046537094, -0.40094566, -0.3853647, 0.1081711, -0.16926058, 0.16138376) * go_1(0.0, 1.0);
[   8.521][d][vo/gpu/opengl] [ 48]     result += mat4(-0.14854589, -0.17625804, -0.10849075, 0.221543, 0.099971965, 0.13901573, 0.29464146, 0.020068526, 0.054358527, -0.10351705, -0.0062914286, 0.24127026, -0.16914125, 0.12729423, -0.18377453, -0.6452375) * go_1(1.0, -1.0);
[   8.521][d][vo/gpu/opengl] [ 49]     result += mat4(0.12603393, -0.10986093, 0.2314103, 0.16915044, -0.13619255, -0.09349073, 0.20594226, -0.34507084, 0.19077192, 0.052500796, 0.07185645, 0.029082738, -0.015576321, 0.08254907, -0.5501743, -0.38495848) * go_1(1.0, 0.0);
[   8.521][d][vo/gpu/opengl] [ 50]     result += mat4(0.09300796, -0.079218306, 0.46825135, -0.08735625, 0.06321122, 0.16234867, 0.042932414, -0.013057422, 0.09697148, 0.23457524, 0.19417483, -0.16804664, 0.18379296, 0.17770062, -0.050235, -0.059676602) * go_1(1.0, 1.0);
[   8.521][d][vo/gpu/opengl] [ 51]     result += vec4(0.011169491, 0.032399546, 0.138099, 0.023857072);
[   8.521][d][vo/gpu/opengl] [ 52]     return result;
[   8.521][d][vo/gpu/opengl] [ 53] }
[   8.521][d][vo/gpu/opengl] [ 54] void main() {
[   8.521][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.521][d][vo/gpu/opengl] [ 56] color = hook();
[   8.521][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.521][d][vo/gpu/opengl] [ 58] }
[   8.522][d][vo/gpu/opengl] shader link log (status=1): 
[   8.522][d][vo/gpu] Resizing texture: 1280x720
[   8.524][d][vo/gpu/opengl] vertex shader source:
[   8.524][d][vo/gpu/opengl] [  1] #version 440
[   8.524][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.524][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.524][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.524][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.524][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.524][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.524][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.524][d][vo/gpu/opengl] [  9] void main() {
[   8.524][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.524][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.524][d][vo/gpu/opengl] [ 12] }
[   8.524][d][vo/gpu/opengl] fragment shader source:
[   8.524][d][vo/gpu/opengl] [  1] #version 440
[   8.524][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.524][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.524][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.524][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.524][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.524][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.524][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.524][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.524][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.524][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.524][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.524][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.524][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.524][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.524][d][vo/gpu/opengl] [ 16] };
[   8.524][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.524][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.524][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.524][d][vo/gpu/opengl] [ 20] #define conv2d_5_tf_raw texture0
[   8.524][d][vo/gpu/opengl] [ 21] #define conv2d_5_tf_pos texcoord0
[   8.524][d][vo/gpu/opengl] [ 22] #define conv2d_5_tf_size texture_size0
[   8.524][d][vo/gpu/opengl] [ 23] #define conv2d_5_tf_rot texture_rot0
[   8.524][d][vo/gpu/opengl] [ 24] #define conv2d_5_tf_off texture_off0
[   8.524][d][vo/gpu/opengl] [ 25] #define conv2d_5_tf_pt pixel_size0
[   8.524][d][vo/gpu/opengl] [ 26] #define conv2d_5_tf_map texmap0
[   8.524][d][vo/gpu/opengl] [ 27] #define conv2d_5_tf_mul 1.000000
[   8.524][d][vo/gpu/opengl] [ 28] #define conv2d_5_tf_tex(pos) (conv2d_5_tf_mul * vec4(texture(conv2d_5_tf_raw, pos)).rgba)
[   8.524][d][vo/gpu/opengl] [ 29] #define conv2d_5_tf_texOff(off) conv2d_5_tf_tex(conv2d_5_tf_pos + conv2d_5_tf_pt * vec2(off))
[   8.524][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_5_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.524][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_5_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.524][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.524][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.22753362, -0.08612073, 0.33140692, 0.08699529, -0.18788953, -0.056579117, -0.12905197, -0.06694621, 0.054559365, 0.15031597, -0.13430363, 0.021646025, 0.14884405, -0.0694291, 0.26149413, 0.11270503) * go_0(-1.0, -1.0);
[   8.524][d][vo/gpu/opengl] [ 34]     result += mat4(0.17876762, -0.09637848, 0.11285323, 0.2004893, 0.1317187, -0.036162686, 0.17958368, -0.069625, 0.28760737, -0.12505141, 0.12760694, 0.047717955, -0.16811855, -0.16340709, 0.13278298, -0.08403954) * go_0(-1.0, 0.0);
[   8.524][d][vo/gpu/opengl] [ 35]     result += mat4(-0.21917523, 0.079711854, -0.28642535, 0.2822416, 0.03001489, -0.014772918, -0.3487396, 0.10597145, -0.013841082, 0.17034237, 0.10810282, -0.08089695, -0.22184245, -0.59067357, 0.44113398, 0.13045649) * go_0(-1.0, 1.0);
[   8.524][d][vo/gpu/opengl] [ 36]     result += mat4(-0.29906932, 0.013923749, 0.2031124, -0.11846688, -0.13953634, 0.08003455, -0.10164494, -0.21218559, 0.10563715, 0.31033117, -0.075903505, 0.047310907, -0.37824214, -0.14506383, 0.11866701, -0.21384487) * go_0(0.0, -1.0);
[   8.524][d][vo/gpu/opengl] [ 37]     result += mat4(-0.1353849, 0.19258606, 0.063908584, -0.2043788, 0.27244982, 0.1665306, -0.29357895, -0.22441709, 0.18514316, -0.17840464, 0.20986097, 0.14351055, -0.057732623, 0.42166704, -0.23182064, -0.4957248) * go_0(0.0, 0.0);
[   8.524][d][vo/gpu/opengl] [ 38]     result += mat4(-0.34830126, 0.109066755, -0.28285867, -0.048280068, -0.12290918, 0.04291651, -0.047484186, -0.03702595, 0.23047262, 0.09398974, 0.022467108, 0.08271034, 0.3066665, -0.54077, 0.057771873, 0.23194093) * go_0(0.0, 1.0);
[   8.524][d][vo/gpu/opengl] [ 39]     result += mat4(-0.17731948, -0.3175927, 0.1452728, 0.09396786, -0.16433562, -0.01833653, -0.22345604, -0.04161193, -0.14827462, 0.18544114, -0.15544125, -0.06179007, 0.16989979, -0.20985202, 0.16391534, -0.09447268) * go_0(1.0, -1.0);
[   8.524][d][vo/gpu/opengl] [ 40]     result += mat4(-0.053878862, -0.21034616, 0.023831524, 0.19772215, 0.31647214, 0.0126534775, -0.19130844, -0.049282108, -0.21446131, 0.067189045, 0.09117449, -0.25548774, 0.12109098, 0.22009392, -0.3924665, -0.13340388) * go_0(1.0, 0.0);
[   8.524][d][vo/gpu/opengl] [ 41]     result += mat4(-0.16096684, -0.18495405, 0.10410178, 0.0015673033, -0.00183498, -0.044303037, -0.062745355, -0.090802394, 0.043269135, 0.06924481, -0.21367405, -0.14619029, 0.11555763, -0.20292862, 0.5799557, 0.14739846) * go_0(1.0, 1.0);
[   8.524][d][vo/gpu/opengl] [ 42]     result += mat4(-0.21030277, -0.09578802, 0.013482288, -0.21484336, 0.12995781, 0.40431052, -0.3347856, -0.18183486, 0.15550353, -0.04402301, 0.4603779, 0.14874357, -0.07694621, -0.053523075, -0.19607326, -0.10850742) * go_1(-1.0, -1.0);
[   8.524][d][vo/gpu/opengl] [ 43]     result += mat4(-0.2347211, 0.2697403, -0.0634794, -0.17925987, 0.17231455, 0.24999185, -0.5208536, -0.10491828, -0.233575, 0.52950364, 0.0038063182, -0.1380038, 0.022935199, 0.19369157, 0.14586553, 0.1938704) * go_1(-1.0, 0.0);
[   8.524][d][vo/gpu/opengl] [ 44]     result += mat4(-0.10245223, 0.34150192, 0.25862157, -0.20165509, 0.5597771, 0.114510864, -0.122526556, -0.04010975, 0.1704679, -0.23335956, -0.16771887, -0.03783455, -0.056995615, 0.24153493, -0.08082429, -0.24210933) * go_1(-1.0, 1.0);
[   8.524][d][vo/gpu/opengl] [ 45]     result += mat4(-0.103466526, 0.15278348, -0.30526164, -0.080755696, 0.103505425, 0.15862796, 0.14696524, -0.008358076, -0.09180311, -0.12505089, 0.28052542, -0.13551563, 0.07528779, -0.09636086, -0.10369617, 0.23656134) * go_1(0.0, -1.0);
[   8.524][d][vo/gpu/opengl] [ 46]     result += mat4(-0.25752836, 0.099439755, -0.30716348, 0.035077725, 0.023509016, 0.23106368, 0.05277125, 0.34910464, 0.088015385, 0.26995596, 0.1390645, -0.40671825, 0.18096298, -0.100688554, 0.5492049, 0.2482101) * go_1(0.0, 0.0);
[   8.524][d][vo/gpu/opengl] [ 47]     result += mat4(0.41411775, -0.107200556, -0.13813478, 0.13768874, 0.27137747, 0.06313619, -0.08522967, 0.03218302, -0.03166121, -0.3415683, -0.52242, -0.1741813, -0.36956537, 0.179129, -0.09742935, -0.11696616) * go_1(0.0, 1.0);
[   8.524][d][vo/gpu/opengl] [ 48]     result += mat4(-0.07975504, 0.17964838, 0.37122533, 0.16064765, 0.14309953, 0.29473078, 0.0926391, -0.22333665, 0.34612748, -0.3387473, 0.0077308523, -0.07239449, 0.18522519, -0.21297298, 0.11493978, 0.16117814) * go_1(1.0, -1.0);
[   8.524][d][vo/gpu/opengl] [ 49]     result += mat4(-0.17402779, 0.10023144, 0.11712206, 0.031971734, 0.18713303, 0.08736295, 0.013007052, -0.06943139, -0.20102951, -0.010721135, -0.2562522, 0.34877458, -0.13732676, -0.40258047, 0.25824392, 0.15720639) * go_1(1.0, 0.0);
[   8.524][d][vo/gpu/opengl] [ 50]     result += mat4(0.044494305, 0.3296108, 0.0017603852, 0.09362289, 0.38839245, 0.40015858, -0.13395199, -0.044521853, -0.56266373, 0.251378, 0.5005789, -0.13106057, -0.18491416, -0.046887, 0.067797676, -0.14694957) * go_1(1.0, 1.0);
[   8.524][d][vo/gpu/opengl] [ 51]     result += vec4(0.013687534, -0.08185164, -0.04755438, 0.290178);
[   8.524][d][vo/gpu/opengl] [ 52]     return result;
[   8.524][d][vo/gpu/opengl] [ 53] }
[   8.524][d][vo/gpu/opengl] [ 54] void main() {
[   8.524][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.524][d][vo/gpu/opengl] [ 56] color = hook();
[   8.524][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.524][d][vo/gpu/opengl] [ 58] }
[   8.525][d][vo/gpu/opengl] shader link log (status=1): 
[   8.525][d][vo/gpu] Resizing texture: 1280x720
[   8.527][d][vo/gpu/opengl] vertex shader source:
[   8.527][d][vo/gpu/opengl] [  1] #version 440
[   8.527][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.527][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.527][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.527][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.527][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.527][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.527][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.527][d][vo/gpu/opengl] [  9] in vec2 vertex_texcoord1;
[   8.527][d][vo/gpu/opengl] [ 10] out vec2 texcoord1;
[   8.527][d][vo/gpu/opengl] [ 11] in vec2 vertex_texcoord2;
[   8.527][d][vo/gpu/opengl] [ 12] out vec2 texcoord2;
[   8.527][d][vo/gpu/opengl] [ 13] in vec2 vertex_texcoord3;
[   8.527][d][vo/gpu/opengl] [ 14] out vec2 texcoord3;
[   8.527][d][vo/gpu/opengl] [ 15] in vec2 vertex_texcoord4;
[   8.527][d][vo/gpu/opengl] [ 16] out vec2 texcoord4;
[   8.527][d][vo/gpu/opengl] [ 17] in vec2 vertex_texcoord5;
[   8.527][d][vo/gpu/opengl] [ 18] out vec2 texcoord5;
[   8.527][d][vo/gpu/opengl] [ 19] in vec2 vertex_texcoord6;
[   8.527][d][vo/gpu/opengl] [ 20] out vec2 texcoord6;
[   8.527][d][vo/gpu/opengl] [ 21] in vec2 vertex_texcoord7;
[   8.527][d][vo/gpu/opengl] [ 22] out vec2 texcoord7;
[   8.527][d][vo/gpu/opengl] [ 23] void main() {
[   8.527][d][vo/gpu/opengl] [ 24] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.527][d][vo/gpu/opengl] [ 25] texcoord0 = vertex_texcoord0;
[   8.527][d][vo/gpu/opengl] [ 26] texcoord1 = vertex_texcoord1;
[   8.527][d][vo/gpu/opengl] [ 27] texcoord2 = vertex_texcoord2;
[   8.527][d][vo/gpu/opengl] [ 28] texcoord3 = vertex_texcoord3;
[   8.527][d][vo/gpu/opengl] [ 29] texcoord4 = vertex_texcoord4;
[   8.527][d][vo/gpu/opengl] [ 30] texcoord5 = vertex_texcoord5;
[   8.527][d][vo/gpu/opengl] [ 31] texcoord6 = vertex_texcoord6;
[   8.527][d][vo/gpu/opengl] [ 32] texcoord7 = vertex_texcoord7;
[   8.527][d][vo/gpu/opengl] [ 33] }
[   8.527][d][vo/gpu/opengl] fragment shader source:
[   8.527][d][vo/gpu/opengl] [  1] #version 440
[   8.527][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.527][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.527][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.527][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.527][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.527][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.527][d][vo/gpu/opengl] [  8] in vec2 texcoord1;
[   8.527][d][vo/gpu/opengl] [  9] in vec2 texcoord2;
[   8.527][d][vo/gpu/opengl] [ 10] in vec2 texcoord3;
[   8.527][d][vo/gpu/opengl] [ 11] in vec2 texcoord4;
[   8.527][d][vo/gpu/opengl] [ 12] in vec2 texcoord5;
[   8.527][d][vo/gpu/opengl] [ 13] in vec2 texcoord6;
[   8.527][d][vo/gpu/opengl] [ 14] in vec2 texcoord7;
[   8.527][d][vo/gpu/opengl] [ 15] layout(std140, binding=0) uniform UBO {
[   8.527][d][vo/gpu/opengl] [ 16] layout(offset=0) vec2 input_size;
[   8.527][d][vo/gpu/opengl] [ 17] layout(offset=8) vec2 target_size;
[   8.527][d][vo/gpu/opengl] [ 18] layout(offset=16) vec2 tex_offset;
[   8.527][d][vo/gpu/opengl] [ 19] layout(offset=24) vec2 texture_size0;
[   8.527][d][vo/gpu/opengl] [ 20] layout(offset=32) mat2 texture_rot0;
[   8.527][d][vo/gpu/opengl] [ 21] layout(offset=64) vec2 texture_off0;
[   8.527][d][vo/gpu/opengl] [ 22] layout(offset=72) vec2 pixel_size0;
[   8.527][d][vo/gpu/opengl] [ 23] layout(offset=80) vec2 texture_size1;
[   8.527][d][vo/gpu/opengl] [ 24] layout(offset=96) mat2 texture_rot1;
[   8.527][d][vo/gpu/opengl] [ 25] layout(offset=128) vec2 texture_off1;
[   8.527][d][vo/gpu/opengl] [ 26] layout(offset=136) vec2 pixel_size1;
[   8.527][d][vo/gpu/opengl] [ 27] layout(offset=144) vec2 texture_size2;
[   8.527][d][vo/gpu/opengl] [ 28] layout(offset=160) mat2 texture_rot2;
[   8.527][d][vo/gpu/opengl] [ 29] layout(offset=192) vec2 texture_off2;
[   8.527][d][vo/gpu/opengl] [ 30] layout(offset=200) vec2 pixel_size2;
[   8.527][d][vo/gpu/opengl] [ 31] layout(offset=208) vec2 texture_size3;
[   8.527][d][vo/gpu/opengl] [ 32] layout(offset=224) mat2 texture_rot3;
[   8.527][d][vo/gpu/opengl] [ 33] layout(offset=256) vec2 texture_off3;
[   8.527][d][vo/gpu/opengl] [ 34] layout(offset=264) vec2 pixel_size3;
[   8.527][d][vo/gpu/opengl] [ 35] layout(offset=272) vec2 texture_size4;
[   8.527][d][vo/gpu/opengl] [ 36] layout(offset=288) mat2 texture_rot4;
[   8.527][d][vo/gpu/opengl] [ 37] layout(offset=320) vec2 texture_off4;
[   8.527][d][vo/gpu/opengl] [ 38] layout(offset=328) vec2 pixel_size4;
[   8.527][d][vo/gpu/opengl] [ 39] layout(offset=336) vec2 texture_size5;
[   8.527][d][vo/gpu/opengl] [ 40] layout(offset=352) mat2 texture_rot5;
[   8.527][d][vo/gpu/opengl] [ 41] layout(offset=384) vec2 texture_off5;
[   8.527][d][vo/gpu/opengl] [ 42] layout(offset=392) vec2 pixel_size5;
[   8.527][d][vo/gpu/opengl] [ 43] layout(offset=400) vec2 texture_size6;
[   8.527][d][vo/gpu/opengl] [ 44] layout(offset=416) mat2 texture_rot6;
[   8.527][d][vo/gpu/opengl] [ 45] layout(offset=448) vec2 texture_off6;
[   8.527][d][vo/gpu/opengl] [ 46] layout(offset=456) vec2 pixel_size6;
[   8.527][d][vo/gpu/opengl] [ 47] layout(offset=464) vec2 texture_size7;
[   8.527][d][vo/gpu/opengl] [ 48] layout(offset=480) mat2 texture_rot7;
[   8.527][d][vo/gpu/opengl] [ 49] layout(offset=512) vec2 texture_off7;
[   8.527][d][vo/gpu/opengl] [ 50] layout(offset=520) vec2 pixel_size7;
[   8.527][d][vo/gpu/opengl] [ 51] };
[   8.527][d][vo/gpu/opengl] [ 52] uniform float random;
[   8.527][d][vo/gpu/opengl] [ 53] uniform int frame;
[   8.527][d][vo/gpu/opengl] [ 54] uniform sampler2D texture0;
[   8.527][d][vo/gpu/opengl] [ 55] uniform sampler2D texture1;
[   8.527][d][vo/gpu/opengl] [ 56] uniform sampler2D texture2;
[   8.527][d][vo/gpu/opengl] [ 57] uniform sampler2D texture3;
[   8.527][d][vo/gpu/opengl] [ 58] uniform sampler2D texture4;
[   8.527][d][vo/gpu/opengl] [ 59] uniform sampler2D texture5;
[   8.527][d][vo/gpu/opengl] [ 60] uniform sampler2D texture6;
[   8.527][d][vo/gpu/opengl] [ 61] uniform sampler2D texture7;
[   8.527][d][vo/gpu/opengl] [ 62] #define MAIN_raw texture0
[   8.527][d][vo/gpu/opengl] [ 63] #define MAIN_pos texcoord0
[   8.527][d][vo/gpu/opengl] [ 64] #define MAIN_size texture_size0
[   8.527][d][vo/gpu/opengl] [ 65] #define MAIN_rot texture_rot0
[   8.527][d][vo/gpu/opengl] [ 66] #define MAIN_off texture_off0
[   8.527][d][vo/gpu/opengl] [ 67] #define MAIN_pt pixel_size0
[   8.528][d][vo/gpu/opengl] [ 68] #define MAIN_map texmap0
[   8.528][d][vo/gpu/opengl] [ 69] #define MAIN_mul 1.000000
[   8.528][d][vo/gpu/opengl] [ 70] #define MAIN_tex(pos) (MAIN_mul * vec4(texture(MAIN_raw, pos)).rgba)
[   8.528][d][vo/gpu/opengl] [ 71] #define MAIN_texOff(off) MAIN_tex(MAIN_pos + MAIN_pt * vec2(off))
[   8.528][d][vo/gpu/opengl] [ 72] #define conv2d_tf_raw texture1
[   8.528][d][vo/gpu/opengl] [ 73] #define conv2d_tf_pos texcoord1
[   8.528][d][vo/gpu/opengl] [ 74] #define conv2d_tf_size texture_size1
[   8.528][d][vo/gpu/opengl] [ 75] #define conv2d_tf_rot texture_rot1
[   8.528][d][vo/gpu/opengl] [ 76] #define conv2d_tf_off texture_off1
[   8.528][d][vo/gpu/opengl] [ 77] #define conv2d_tf_pt pixel_size1
[   8.528][d][vo/gpu/opengl] [ 78] #define conv2d_tf_map texmap1
[   8.528][d][vo/gpu/opengl] [ 79] #define conv2d_tf_mul 1.000000
[   8.528][d][vo/gpu/opengl] [ 80] #define conv2d_tf_tex(pos) (conv2d_tf_mul * vec4(texture(conv2d_tf_raw, pos)).rgba)
[   8.528][d][vo/gpu/opengl] [ 81] #define conv2d_tf_texOff(off) conv2d_tf_tex(conv2d_tf_pos + conv2d_tf_pt * vec2(off))
[   8.528][d][vo/gpu/opengl] [ 82] #define conv2d_1_tf_raw texture2
[   8.528][d][vo/gpu/opengl] [ 83] #define conv2d_1_tf_pos texcoord2
[   8.528][d][vo/gpu/opengl] [ 84] #define conv2d_1_tf_size texture_size2
[   8.528][d][vo/gpu/opengl] [ 85] #define conv2d_1_tf_rot texture_rot2
[   8.528][d][vo/gpu/opengl] [ 86] #define conv2d_1_tf_off texture_off2
[   8.528][d][vo/gpu/opengl] [ 87] #define conv2d_1_tf_pt pixel_size2
[   8.528][d][vo/gpu/opengl] [ 88] #define conv2d_1_tf_map texmap2
[   8.528][d][vo/gpu/opengl] [ 89] #define conv2d_1_tf_mul 1.000000
[   8.528][d][vo/gpu/opengl] [ 90] #define conv2d_1_tf_tex(pos) (conv2d_1_tf_mul * vec4(texture(conv2d_1_tf_raw, pos)).rgba)
[   8.528][d][vo/gpu/opengl] [ 91] #define conv2d_1_tf_texOff(off) conv2d_1_tf_tex(conv2d_1_tf_pos + conv2d_1_tf_pt * vec2(off))
[   8.528][d][vo/gpu/opengl] [ 92] #define conv2d_2_tf_raw texture3
[   8.528][d][vo/gpu/opengl] [ 93] #define conv2d_2_tf_pos texcoord3
[   8.528][d][vo/gpu/opengl] [ 94] #define conv2d_2_tf_size texture_size3
[   8.528][d][vo/gpu/opengl] [ 95] #define conv2d_2_tf_rot texture_rot3
[   8.528][d][vo/gpu/opengl] [ 96] #define conv2d_2_tf_off texture_off3
[   8.528][d][vo/gpu/opengl] [ 97] #define conv2d_2_tf_pt pixel_size3
[   8.528][d][vo/gpu/opengl] [ 98] #define conv2d_2_tf_map texmap3
[   8.528][d][vo/gpu/opengl] [ 99] #define conv2d_2_tf_mul 1.000000
[   8.528][d][vo/gpu/opengl] [100] #define conv2d_2_tf_tex(pos) (conv2d_2_tf_mul * vec4(texture(conv2d_2_tf_raw, pos)).rgba)
[   8.528][d][vo/gpu/opengl] [101] #define conv2d_2_tf_texOff(off) conv2d_2_tf_tex(conv2d_2_tf_pos + conv2d_2_tf_pt * vec2(off))
[   8.528][d][vo/gpu/opengl] [102] #define conv2d_3_tf_raw texture4
[   8.528][d][vo/gpu/opengl] [103] #define conv2d_3_tf_pos texcoord4
[   8.528][d][vo/gpu/opengl] [104] #define conv2d_3_tf_size texture_size4
[   8.528][d][vo/gpu/opengl] [105] #define conv2d_3_tf_rot texture_rot4
[   8.528][d][vo/gpu/opengl] [106] #define conv2d_3_tf_off texture_off4
[   8.528][d][vo/gpu/opengl] [107] #define conv2d_3_tf_pt pixel_size4
[   8.528][d][vo/gpu/opengl] [108] #define conv2d_3_tf_map texmap4
[   8.528][d][vo/gpu/opengl] [109] #define conv2d_3_tf_mul 1.000000
[   8.528][d][vo/gpu/opengl] [110] #define conv2d_3_tf_tex(pos) (conv2d_3_tf_mul * vec4(texture(conv2d_3_tf_raw, pos)).rgba)
[   8.528][d][vo/gpu/opengl] [111] #define conv2d_3_tf_texOff(off) conv2d_3_tf_tex(conv2d_3_tf_pos + conv2d_3_tf_pt * vec2(off))
[   8.528][d][vo/gpu/opengl] [112] #define conv2d_4_tf_raw texture5
[   8.528][d][vo/gpu/opengl] [113] #define conv2d_4_tf_pos texcoord5
[   8.528][d][vo/gpu/opengl] [114] #define conv2d_4_tf_size texture_size5
[   8.528][d][vo/gpu/opengl] [115] #define conv2d_4_tf_rot texture_rot5
[   8.528][d][vo/gpu/opengl] [116] #define conv2d_4_tf_off texture_off5
[   8.528][d][vo/gpu/opengl] [117] #define conv2d_4_tf_pt pixel_size5
[   8.528][d][vo/gpu/opengl] [118] #define conv2d_4_tf_map texmap5
[   8.528][d][vo/gpu/opengl] [119] #define conv2d_4_tf_mul 1.000000
[   8.528][d][vo/gpu/opengl] [120] #define conv2d_4_tf_tex(pos) (conv2d_4_tf_mul * vec4(texture(conv2d_4_tf_raw, pos)).rgba)
[   8.528][d][vo/gpu/opengl] [121] #define conv2d_4_tf_texOff(off) conv2d_4_tf_tex(conv2d_4_tf_pos + conv2d_4_tf_pt * vec2(off))
[   8.528][d][vo/gpu/opengl] [122] #define conv2d_5_tf_raw texture6
[   8.528][d][vo/gpu/opengl] [123] #define conv2d_5_tf_pos texcoord6
[   8.528][d][vo/gpu/opengl] [124] #define conv2d_5_tf_size texture_size6
[   8.528][d][vo/gpu/opengl] [125] #define conv2d_5_tf_rot texture_rot6
[   8.528][d][vo/gpu/opengl] [126] #define conv2d_5_tf_off texture_off6
[   8.528][d][vo/gpu/opengl] [127] #define conv2d_5_tf_pt pixel_size6
[   8.528][d][vo/gpu/opengl] [128] #define conv2d_5_tf_map texmap6
[   8.528][d][vo/gpu/opengl] [129] #define conv2d_5_tf_mul 1.000000
[   8.528][d][vo/gpu/opengl] [130] #define conv2d_5_tf_tex(pos) (conv2d_5_tf_mul * vec4(texture(conv2d_5_tf_raw, pos)).rgba)
[   8.528][d][vo/gpu/opengl] [131] #define conv2d_5_tf_texOff(off) conv2d_5_tf_tex(conv2d_5_tf_pos + conv2d_5_tf_pt * vec2(off))
[   8.528][d][vo/gpu/opengl] [132] #define conv2d_6_tf_raw texture7
[   8.528][d][vo/gpu/opengl] [133] #define conv2d_6_tf_pos texcoord7
[   8.528][d][vo/gpu/opengl] [134] #define conv2d_6_tf_size texture_size7
[   8.528][d][vo/gpu/opengl] [135] #define conv2d_6_tf_rot texture_rot7
[   8.528][d][vo/gpu/opengl] [136] #define conv2d_6_tf_off texture_off7
[   8.528][d][vo/gpu/opengl] [137] #define conv2d_6_tf_pt pixel_size7
[   8.528][d][vo/gpu/opengl] [138] #define conv2d_6_tf_map texmap7
[   8.528][d][vo/gpu/opengl] [139] #define conv2d_6_tf_mul 1.000000
[   8.528][d][vo/gpu/opengl] [140] #define conv2d_6_tf_tex(pos) (conv2d_6_tf_mul * vec4(texture(conv2d_6_tf_raw, pos)).rgba)
[   8.528][d][vo/gpu/opengl] [141] #define conv2d_6_tf_texOff(off) conv2d_6_tf_tex(conv2d_6_tf_pos + conv2d_6_tf_pt * vec2(off))
[   8.528][d][vo/gpu/opengl] [142] #define g_0 (max((conv2d_tf_tex(conv2d_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [143] #define g_1 (max(-(conv2d_tf_tex(conv2d_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [144] #define g_2 (max((conv2d_1_tf_tex(conv2d_1_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [145] #define g_3 (max(-(conv2d_1_tf_tex(conv2d_1_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [146] #define g_4 (max((conv2d_2_tf_tex(conv2d_2_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [147] #define g_5 (max(-(conv2d_2_tf_tex(conv2d_2_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [148] #define g_6 (max((conv2d_3_tf_tex(conv2d_3_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [149] #define g_7 (max(-(conv2d_3_tf_tex(conv2d_3_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [150] #define g_8 (max((conv2d_4_tf_tex(conv2d_4_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [151] #define g_9 (max(-(conv2d_4_tf_tex(conv2d_4_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [152] #define g_10 (max((conv2d_5_tf_tex(conv2d_5_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [153] #define g_11 (max(-(conv2d_5_tf_tex(conv2d_5_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [154] #define g_12 (max((conv2d_6_tf_tex(conv2d_6_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [155] #define g_13 (max(-(conv2d_6_tf_tex(conv2d_6_tf_pos)), 0.0))
[   8.528][d][vo/gpu/opengl] [156] vec4 hook() {
[   8.528][d][vo/gpu/opengl] [157]     vec4 result = mat4(-0.08837163, -0.065234736, -0.034704313, 0.0, 0.021405501, 0.013663729, 0.019249594, 0.0, 0.05328863, 0.03580334, 0.046457592, 0.0, -0.12216048, 0.022547891, 0.016400825, 0.0) * g_0;
[   8.528][d][vo/gpu/opengl] [158]     result += mat4(0.061996464, 0.05631466, 0.06808407, 0.0, -0.005013109, -0.0044589997, -0.032367796, 0.0, 0.016481603, 0.13721058, 0.14924648, 0.0, 0.020035887, -0.07250003, -0.08034037, 0.0) * g_1;
[   8.528][d][vo/gpu/opengl] [159]     result += mat4(0.24078514, 0.081361525, 0.053420708, 0.0, -0.009353794, -0.051077116, -0.058007747, 0.0, -0.14071098, 0.01035966, 0.005308949, 0.0, -0.1489842, -0.06711817, -0.05552926, 0.0) * g_2;
[   8.528][d][vo/gpu/opengl] [160]     result += mat4(-0.13002375, 0.012733757, 0.017821986, 0.0, 0.17767483, 0.20204604, 0.1751779, 0.0, 0.12804912, 0.07381453, 0.05655911, 0.0, 0.17044514, 0.07301451, 0.06523978, 0.0) * g_3;
[   8.528][d][vo/gpu/opengl] [161]     result += mat4(-0.1170986, -0.05130371, -0.027939914, 0.0, -0.16645707, -0.121526904, -0.09471366, 0.0, -0.04143118, 0.026693767, 0.034615446, 0.0, -0.084318705, -0.064990036, -0.054324172, 0.0) * g_4;
[   8.528][d][vo/gpu/opengl] [162]     result += mat4(0.12094524, 0.09518409, 0.07387219, 0.0, 0.062216382, 0.053228356, 0.031372335, 0.0, 0.072797105, 0.026258165, 0.009804673, 0.0, 0.120719045, 0.073281154, 0.056623302, 0.0) * g_5;
[   8.528][d][vo/gpu/opengl] [163]     result += mat4(-0.11141495, -0.11566289, -0.10398725, 0.0, -0.0651895, -0.06820691, -0.054204144, 0.0, -0.032746475, -0.008849683, -0.007610222, 0.0, -0.024655705, -0.048778858, -0.041144755, 0.0) * g_6;
[   8.528][d][vo/gpu/opengl] [164]     result += mat4(0.058090195, 0.07538767, 0.059722915, 0.0, 0.044788487, 0.04212742, 0.027502589, 0.0, 0.04892866, 0.015416752, 0.008312418, 0.0, -0.011864114, -0.0074752793, -0.0060824654, 0.0) * g_7;
[   8.528][d][vo/gpu/opengl] [165]     result += mat4(0.043446552, 0.061971307, 0.05758086, 0.0, -0.06379154, -0.053758245, -0.047204215, 0.0, 0.016307736, 0.03423424, 0.030179083, 0.0, 0.041445345, 0.03843772, 0.033059113, 0.0) * g_8;
[   8.528][d][vo/gpu/opengl] [166]     result += mat4(-0.003803544, 0.0008906116, -0.00059585314, 0.0, 0.102071285, 0.11485224, 0.10007254, 0.0, -0.074306004, -0.08803551, -0.07972321, 0.0, -0.030704215, -0.021514274, -0.009049376, 0.0) * g_9;
[   8.528][d][vo/gpu/opengl] [167]     result += mat4(0.0066058086, 0.0011408008, 0.0016199006, 0.0, -0.03916473, -0.042929266, -0.04018418, 0.0, -0.03153446, -0.039413508, -0.034767237, 0.0, 0.113516055, 0.12577052, 0.113335624, 0.0) * g_10;
[   8.528][d][vo/gpu/opengl] [168]     result += mat4(0.02655948, 0.041905303, 0.03861737, 0.0, 0.048471425, 0.049788587, 0.050447535, 0.0, 0.12092813, 0.13564217, 0.12613249, 0.0, -0.0023508538, 0.0012828974, 0.0028730957, 0.0) * g_11;
[   8.528][d][vo/gpu/opengl] [169]     result += mat4(0.0084758485, 0.008800083, 0.008206044, 0.0, -0.056123603, -0.06610845, -0.060320783, 0.0, -0.081793964, -0.101638645, -0.096699014, 0.0, -0.04402356, -0.04177539, -0.03829645, 0.0) * g_12;
[   8.528][d][vo/gpu/opengl] [170]     result += mat4(0.10676299, 0.118409514, 0.10618478, 0.0, -0.05880252, -0.06488367, -0.06432695, 0.0, 0.019221924, 0.017602798, 0.017413978, 0.0, -0.07512528, -0.080483615, -0.066218294, 0.0) * g_13;
[   8.528][d][vo/gpu/opengl] [171]     result += vec4(-0.010478934, -0.008364784, -0.010246552, 0.0);
[   8.528][d][vo/gpu/opengl] [172]     return result + MAIN_tex(MAIN_pos);
[   8.528][d][vo/gpu/opengl] [173] }
[   8.528][d][vo/gpu/opengl] [174] void main() {
[   8.528][d][vo/gpu/opengl] [175] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.528][d][vo/gpu/opengl] [176] color = hook();
[   8.528][d][vo/gpu/opengl] [177] color.a = 1.000000;
[   8.528][d][vo/gpu/opengl] [178] out_color = color;
[   8.528][d][vo/gpu/opengl] [179] }
[   8.528][d][vo/gpu/opengl] shader link log (status=1): 
[   8.528][d][vo/gpu] Resizing texture: 1280x720
[   8.530][d][vo/gpu/opengl] vertex shader source:
[   8.530][d][vo/gpu/opengl] [  1] #version 440
[   8.530][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.530][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.530][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.530][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.530][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.530][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.530][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.530][d][vo/gpu/opengl] [  9] void main() {
[   8.530][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.530][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.530][d][vo/gpu/opengl] [ 12] }
[   8.530][d][vo/gpu/opengl] fragment shader source:
[   8.530][d][vo/gpu/opengl] [  1] #version 440
[   8.530][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.530][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.530][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.530][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.530][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.530][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.530][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.530][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.530][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.530][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.530][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.530][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.530][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.530][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.530][d][vo/gpu/opengl] [ 16] };
[   8.530][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.531][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.531][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.531][d][vo/gpu/opengl] [ 20] #define MAIN_raw texture0
[   8.531][d][vo/gpu/opengl] [ 21] #define MAIN_pos texcoord0
[   8.531][d][vo/gpu/opengl] [ 22] #define MAIN_size texture_size0
[   8.531][d][vo/gpu/opengl] [ 23] #define MAIN_rot texture_rot0
[   8.531][d][vo/gpu/opengl] [ 24] #define MAIN_off texture_off0
[   8.531][d][vo/gpu/opengl] [ 25] #define MAIN_pt pixel_size0
[   8.531][d][vo/gpu/opengl] [ 26] #define MAIN_map texmap0
[   8.531][d][vo/gpu/opengl] [ 27] #define MAIN_mul 1.000000
[   8.531][d][vo/gpu/opengl] [ 28] #define MAIN_tex(pos) (MAIN_mul * vec4(texture(MAIN_raw, pos)).rgba)
[   8.531][d][vo/gpu/opengl] [ 29] #define MAIN_texOff(off) MAIN_tex(MAIN_pos + MAIN_pt * vec2(off))
[   8.531][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (MAIN_texOff(vec2(x_off, y_off)))
[   8.531][d][vo/gpu/opengl] [ 31] vec4 hook() {
[   8.531][d][vo/gpu/opengl] [ 32]     vec4 result = mat4(-0.010995803, 0.077095956, -0.043992598, 0.06048717, 0.1164834, -0.11689607, 0.072985925, -0.078805886, 0.01182932, 0.054985743, -0.09018186, 0.044907484, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, -1.0);
[   8.531][d][vo/gpu/opengl] [ 33]     result += mat4(0.1813623, -0.14752422, 0.025720436, -0.17639883, 0.15697388, 0.10445984, -0.1843076, 0.5264643, 0.047516696, -0.097305484, 0.09740847, -0.29619336, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 0.0);
[   8.531][d][vo/gpu/opengl] [ 34]     result += mat4(-0.014534763, 0.09486465, 0.046173926, 0.039391946, 0.09609376, -0.060574662, 0.042200956, -0.3269777, 0.051006425, 0.059818447, 0.04366627, 0.17699827, 0.0, 0.0, 0.0, 0.0) * go_0(-1.0, 1.0);
[   8.531][d][vo/gpu/opengl] [ 35]     result += mat4(0.04268535, -0.08152529, 0.10577459, -0.036936995, -0.051562306, 0.054872766, 0.09194519, 0.0025066638, -0.01073954, 0.00064474024, 0.10038221, 0.02131141, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, -1.0);
[   8.531][d][vo/gpu/opengl] [ 36]     result += mat4(-0.51751363, -0.40028602, 0.3469574, 0.5933738, -0.91357684, -0.67692596, 0.57815677, 0.39809322, -0.16341521, -0.27169713, 0.12232366, 0.4318641, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 0.0);
[   8.531][d][vo/gpu/opengl] [ 37]     result += mat4(0.12601124, -0.06263236, -0.45907676, -0.41514075, 0.3330334, -0.1929565, -0.6333532, -0.6552794, -0.045809917, 0.046351526, -0.26173338, -0.30252662, 0.0, 0.0, 0.0, 0.0) * go_0(0.0, 1.0);
[   8.531][d][vo/gpu/opengl] [ 38]     result += mat4(0.0030332592, 0.012103107, 0.010537323, -0.02038607, 0.095558085, 0.097704545, 0.083433494, 0.026790185, 0.01943357, -0.061712462, -0.00015703632, -0.032268334, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, -1.0);
[   8.531][d][vo/gpu/opengl] [ 39]     result += mat4(0.016870102, 0.5215812, -0.11525501, 0.027527615, -0.09045733, 0.61310345, -0.1575268, 0.1905386, 0.020172214, 0.3503187, -0.08209157, -0.051328037, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 0.0);
[   8.531][d][vo/gpu/opengl] [ 40]     result += mat4(0.005494087, -0.010656317, 0.07682753, -0.08116042, -0.03934524, 0.16589017, 0.101483546, -0.066603065, 0.03494657, -0.07885597, 0.074227594, 0.0016264897, 0.0, 0.0, 0.0, 0.0) * go_0(1.0, 1.0);
[   8.531][d][vo/gpu/opengl] [ 41]     result += vec4(0.014463938, -0.0031906287, 0.007015422, -0.003888468);
[   8.531][d][vo/gpu/opengl] [ 42]     return result;
[   8.531][d][vo/gpu/opengl] [ 43] }
[   8.531][d][vo/gpu/opengl] [ 44] void main() {
[   8.531][d][vo/gpu/opengl] [ 45] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.531][d][vo/gpu/opengl] [ 46] color = hook();
[   8.531][d][vo/gpu/opengl] [ 47] out_color = color;
[   8.531][d][vo/gpu/opengl] [ 48] }
[   8.531][d][vo/gpu/opengl] shader link log (status=1): 
[   8.531][d][vo/gpu] Resizing texture: 1280x720
[   8.533][d][vo/gpu/opengl] vertex shader source:
[   8.533][d][vo/gpu/opengl] [  1] #version 440
[   8.533][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.533][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.533][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.533][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.533][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.533][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.533][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.533][d][vo/gpu/opengl] [  9] void main() {
[   8.533][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.533][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.533][d][vo/gpu/opengl] [ 12] }
[   8.533][d][vo/gpu/opengl] fragment shader source:
[   8.533][d][vo/gpu/opengl] [  1] #version 440
[   8.533][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.533][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.533][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.533][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.533][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.533][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.533][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.533][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.533][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.533][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.533][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.533][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.533][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.533][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.533][d][vo/gpu/opengl] [ 16] };
[   8.533][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.533][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.533][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.533][d][vo/gpu/opengl] [ 20] #define conv2d_tf_raw texture0
[   8.533][d][vo/gpu/opengl] [ 21] #define conv2d_tf_pos texcoord0
[   8.533][d][vo/gpu/opengl] [ 22] #define conv2d_tf_size texture_size0
[   8.533][d][vo/gpu/opengl] [ 23] #define conv2d_tf_rot texture_rot0
[   8.533][d][vo/gpu/opengl] [ 24] #define conv2d_tf_off texture_off0
[   8.533][d][vo/gpu/opengl] [ 25] #define conv2d_tf_pt pixel_size0
[   8.533][d][vo/gpu/opengl] [ 26] #define conv2d_tf_map texmap0
[   8.533][d][vo/gpu/opengl] [ 27] #define conv2d_tf_mul 1.000000
[   8.533][d][vo/gpu/opengl] [ 28] #define conv2d_tf_tex(pos) (conv2d_tf_mul * vec4(texture(conv2d_tf_raw, pos)).rgba)
[   8.533][d][vo/gpu/opengl] [ 29] #define conv2d_tf_texOff(off) conv2d_tf_tex(conv2d_tf_pos + conv2d_tf_pt * vec2(off))
[   8.533][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.533][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.533][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.533][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.08532478, -0.14302494, -0.017921071, -0.0032664281, -0.09841952, 0.024187077, 0.10701477, 0.14110753, -0.05714981, -0.10897174, 0.073803626, 0.103992954, 0.07914382, 0.032193683, -0.18346278, -0.09723936) * go_0(-1.0, -1.0);
[   8.533][d][vo/gpu/opengl] [ 34]     result += mat4(-0.034482613, -0.10742312, -0.047286414, -0.08641124, -0.33896688, -0.036533825, -0.48337597, 0.034040943, -0.13598205, -0.080917805, 0.08540263, -0.012667689, -0.009171425, -0.120026454, -0.20536867, -0.032149274) * go_0(-1.0, 0.0);
[   8.533][d][vo/gpu/opengl] [ 35]     result += mat4(0.18687321, 0.066278316, 0.024327392, 0.08816582, -0.08017908, 0.09488853, 0.26018232, -0.101504356, 0.17487666, 0.31057635, 0.14785016, -0.09622089, -0.07537452, -0.13844088, -0.05810814, 0.09907489) * go_0(-1.0, 1.0);
[   8.533][d][vo/gpu/opengl] [ 36]     result += mat4(-0.04183032, 0.15207712, 0.005002397, 0.32277516, -0.16169126, -0.119836345, -0.04068436, -0.096728764, 0.11943901, 0.1789597, -0.20412198, 0.19009817, 0.36630696, 0.06946421, -0.5254373, -0.11896399) * go_0(0.0, -1.0);
[   8.533][d][vo/gpu/opengl] [ 37]     result += mat4(-0.31916487, -0.98911583, 1.0728644, -0.39280394, 0.33458877, -0.17325239, -0.645045, -0.28524077, -0.14512783, 0.24996442, -0.09837877, 0.05468934, 0.31559715, -0.020504637, -0.026724018, 0.24507573) * go_0(0.0, 0.0);
[   8.533][d][vo/gpu/opengl] [ 38]     result += mat4(-0.23759829, -0.08530173, -0.16665787, -0.22463752, 0.109896734, 0.13446991, -0.049552456, -0.02385489, -0.01245375, 0.3833208, 0.05758832, 0.1528937, 0.0501858, -0.19651426, 0.0076587177, -0.03297025) * go_0(0.0, 1.0);
[   8.533][d][vo/gpu/opengl] [ 39]     result += mat4(0.14554465, -0.01826686, 0.10284085, -0.19152659, -0.017585073, -0.05511482, 0.06362406, 0.023924058, -0.0018977845, -0.103172876, 0.03287086, -0.20085956, 0.36062446, 0.10749464, -0.20984372, 0.018256644) * go_0(1.0, -1.0);
[   8.533][d][vo/gpu/opengl] [ 40]     result += mat4(-0.005534592, 0.3709197, -0.18287498, 0.1720451, 0.030155553, -0.023265475, 0.0058617783, -0.031765483, 0.037328955, -0.2730994, 0.35090837, -0.3269043, -0.028477207, 0.32756507, -0.15989502, 0.12158258) * go_0(1.0, 0.0);
[   8.533][d][vo/gpu/opengl] [ 41]     result += mat4(0.10873739, 0.19583772, 0.060394943, 0.09410379, -0.04739245, 0.026561242, 0.022990001, 0.1093272, -0.01071349, -0.022938967, -0.046423864, 0.2385325, -0.0319821, 0.046962265, 0.09081178, -0.11001857) * go_0(1.0, 1.0);
[   8.533][d][vo/gpu/opengl] [ 42]     result += mat4(0.13012704, 0.112289295, 0.030790284, -0.050499484, 0.11784853, 0.08107028, -0.07556717, -0.15643, 0.015249331, 0.015299608, 0.07748125, 0.054485757, 0.044857923, 0.12161275, -0.048292994, -0.033995003) * go_1(-1.0, -1.0);
[   8.533][d][vo/gpu/opengl] [ 43]     result += mat4(0.12931514, 0.15114146, 0.070513315, 0.11246343, 0.4142387, 0.213479, -0.5439916, 0.07776645, 0.13109331, 0.2021147, 0.25932786, -0.22157331, 0.02377734, -0.014970623, -0.1943276, 0.18440372) * go_1(-1.0, 0.0);
[   8.533][d][vo/gpu/opengl] [ 44]     result += mat4(-0.22365458, -0.19829084, -0.06881161, -0.06468993, 0.17202774, 0.0048758537, -0.09235021, 0.18941896, 0.064125344, -0.09067088, 0.09748182, 0.13561936, -0.05876288, -0.0122420965, -0.054380875, -0.17743628) * go_1(-1.0, 1.0);
[   8.533][d][vo/gpu/opengl] [ 45]     result += mat4(0.18582906, -0.09263032, -0.08210888, -0.20515606, 0.11484005, 0.08557595, 0.0009253741, -0.051202174, -0.18535301, -0.1529345, -0.13092944, 0.03770747, -0.020947013, 0.19187425, -0.15494856, -0.048979875) * go_1(0.0, -1.0);
[   8.533][d][vo/gpu/opengl] [ 46]     result += mat4(-0.38131633, 0.4278787, 0.19763695, 0.27655518, -0.08711912, 0.07374453, -0.064803004, 0.5983854, 0.2361923, -0.057221692, -0.37138999, -0.24259573, 0.13890724, 0.25706333, -0.54021406, 0.08095518) * go_1(0.0, 0.0);
[   8.533][d][vo/gpu/opengl] [ 47]     result += mat4(0.0991328, -0.022651536, -0.029148921, -0.009812537, -0.09523686, -0.15704902, 0.052389514, 0.21561539, 0.1950314, -0.08572602, 0.0016523858, 0.14125621, -0.030999828, 0.12009709, 0.0373512, -0.105043754) * go_1(0.0, 1.0);
[   8.533][d][vo/gpu/opengl] [ 48]     result += mat4(-0.11251988, 0.12106985, 0.011923068, 0.3662747, 0.004800994, 0.017972551, 0.004761366, -0.07934206, -0.13755941, -0.022852683, 0.1502225, 0.009758547, -0.16964264, 0.00984782, 0.07855833, 0.035730787) * go_1(1.0, -1.0);
[   8.533][d][vo/gpu/opengl] [ 49]     result += mat4(0.01964957, -0.27226487, 0.033933397, -0.117632054, -0.009058229, 0.047830686, -0.01125145, 0.136628, 0.0056388285, 0.3028781, -0.12286517, 0.23498532, -0.009319075, -0.444048, 0.16174883, -0.06367683) * go_1(1.0, 0.0);
[   8.533][d][vo/gpu/opengl] [ 50]     result += mat4(0.02343933, -0.010915871, -0.058680378, -0.21886891, -0.010750894, -0.06671997, 0.0602906, -0.07903071, 0.066891186, 0.06650588, 0.14362891, -0.101870626, 0.02264628, -0.06940821, -0.077616625, 0.110911585) * go_1(1.0, 1.0);
[   8.533][d][vo/gpu/opengl] [ 51]     result += vec4(0.032014452, -0.020821465, 0.0826416, -0.002838458);
[   8.533][d][vo/gpu/opengl] [ 52]     return result;
[   8.533][d][vo/gpu/opengl] [ 53] }
[   8.533][d][vo/gpu/opengl] [ 54] void main() {
[   8.533][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.533][d][vo/gpu/opengl] [ 56] color = hook();
[   8.533][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.533][d][vo/gpu/opengl] [ 58] }
[   8.534][d][vo/gpu/opengl] shader link log (status=1): 
[   8.534][d][vo/gpu] Resizing texture: 1280x720
[   8.536][d][vo/gpu/opengl] vertex shader source:
[   8.536][d][vo/gpu/opengl] [  1] #version 440
[   8.536][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.536][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.536][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.536][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.536][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.536][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.536][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.536][d][vo/gpu/opengl] [  9] void main() {
[   8.536][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.536][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.536][d][vo/gpu/opengl] [ 12] }
[   8.536][d][vo/gpu/opengl] fragment shader source:
[   8.536][d][vo/gpu/opengl] [  1] #version 440
[   8.536][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.536][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.536][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.536][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.536][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.536][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.536][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.536][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.536][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.536][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.536][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.536][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.536][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.536][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.536][d][vo/gpu/opengl] [ 16] };
[   8.536][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.536][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.536][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.536][d][vo/gpu/opengl] [ 20] #define conv2d_1_tf_raw texture0
[   8.536][d][vo/gpu/opengl] [ 21] #define conv2d_1_tf_pos texcoord0
[   8.536][d][vo/gpu/opengl] [ 22] #define conv2d_1_tf_size texture_size0
[   8.536][d][vo/gpu/opengl] [ 23] #define conv2d_1_tf_rot texture_rot0
[   8.536][d][vo/gpu/opengl] [ 24] #define conv2d_1_tf_off texture_off0
[   8.536][d][vo/gpu/opengl] [ 25] #define conv2d_1_tf_pt pixel_size0
[   8.536][d][vo/gpu/opengl] [ 26] #define conv2d_1_tf_map texmap0
[   8.536][d][vo/gpu/opengl] [ 27] #define conv2d_1_tf_mul 1.000000
[   8.536][d][vo/gpu/opengl] [ 28] #define conv2d_1_tf_tex(pos) (conv2d_1_tf_mul * vec4(texture(conv2d_1_tf_raw, pos)).rgba)
[   8.536][d][vo/gpu/opengl] [ 29] #define conv2d_1_tf_texOff(off) conv2d_1_tf_tex(conv2d_1_tf_pos + conv2d_1_tf_pt * vec2(off))
[   8.536][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_1_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.536][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_1_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.536][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.536][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.06963679, -0.07560548, -0.069522075, 0.0038078027, -0.08002613, 0.13671301, 0.084461786, -0.039376218, 0.19136548, -0.123174496, 0.26566333, -0.16583005, -0.18664864, -0.023539122, -0.21928434, -0.026818147) * go_0(-1.0, -1.0);
[   8.536][d][vo/gpu/opengl] [ 34]     result += mat4(0.16660932, -0.18558703, 0.37230486, 0.118128106, -0.14098641, 0.14659132, -0.22217897, 0.12952235, -0.4139033, -0.04308319, 0.12885277, -0.17986743, -0.23556231, -0.08351981, -0.43240538, 0.019033253) * go_0(-1.0, 0.0);
[   8.536][d][vo/gpu/opengl] [ 35]     result += mat4(-0.18008037, -0.04448665, 0.011906908, -0.023056917, 0.18136618, -0.04723555, -0.0050158803, -0.14823224, -0.2105281, 0.023047728, -0.14040631, -0.03178526, -0.13477588, -0.01820428, 0.058358394, 0.23792502) * go_0(-1.0, 1.0);
[   8.536][d][vo/gpu/opengl] [ 36]     result += mat4(0.07363309, -0.061728477, 0.03573137, -0.0050971056, -0.012813505, -0.17236637, 0.1697835, 0.055788577, -0.22263195, 0.10324512, 0.58971673, -0.4872246, -0.1555681, 0.032747746, -0.096495196, 0.070196226) * go_0(0.0, -1.0);
[   8.536][d][vo/gpu/opengl] [ 37]     result += mat4(0.14174286, 0.099460006, -0.088765986, 0.58350676, -0.025177564, -0.46004987, 0.37007022, -0.11437029, -0.5164534, -0.60465246, 0.38859612, -0.32846406, 0.050266482, -0.20334712, 0.18316261, -0.19327633) * go_0(0.0, 0.0);
[   8.536][d][vo/gpu/opengl] [ 38]     result += mat4(-0.09377763, -0.0012762006, -0.028991895, -0.26523829, 0.20173682, 0.037923716, -0.03174243, 0.07103378, -0.10764164, -0.30752546, 0.20556998, -0.1892279, 0.08115748, -0.023550175, -0.07627362, 0.11746628) * go_0(0.0, 1.0);
[   8.536][d][vo/gpu/opengl] [ 39]     result += mat4(-0.06998859, -0.017997518, 0.069938794, -0.14943017, -0.14179112, 0.16643842, -0.110231474, 0.08895815, -0.24074875, 0.3277253, -0.07435203, -0.23452802, 0.039962552, -0.07145652, -0.022511544, -0.04571222) * go_0(1.0, -1.0);
[   8.536][d][vo/gpu/opengl] [ 40]     result += mat4(-0.059785757, -0.23771374, -0.030571314, 0.25222278, 0.106601834, 0.34398326, 0.14511436, -0.03867526, -0.38982397, -0.11944689, 0.12997924, -0.13079585, 0.005729482, 0.012653905, -0.063693404, 0.09632285) * go_0(1.0, 0.0);
[   8.536][d][vo/gpu/opengl] [ 41]     result += mat4(-0.04933823, 0.0547175, 0.050636575, -0.10060694, 0.1344485, 0.19752938, -0.100068115, -0.028829506, -0.14096203, -0.079092234, 0.092109434, 0.011606209, -0.04052607, -0.008347507, 0.06956573, -0.028109524) * go_0(1.0, 1.0);
[   8.536][d][vo/gpu/opengl] [ 42]     result += mat4(0.21918017, -0.11115073, 0.2262453, -0.06889667, -0.11256312, -0.07438075, -0.088454485, 0.13672407, -0.06905764, 0.08128395, 0.016103368, 0.050190717, 0.09691516, 0.05845721, 0.4886816, 0.041121427) * go_1(-1.0, -1.0);
[   8.536][d][vo/gpu/opengl] [ 43]     result += mat4(-0.3449472, 0.09711974, -0.13881907, -0.018265123, 0.27855873, -0.07030004, 0.29545054, 0.37216932, 0.08657718, 0.099066615, -0.10574013, -0.17667885, -0.14855732, -0.11351448, 0.66945946, 0.11312157) * go_1(-1.0, 0.0);
[   8.536][d][vo/gpu/opengl] [ 44]     result += mat4(0.2526151, -0.04594331, -0.06606611, 0.09104881, 0.06857995, -0.075284235, -0.17664689, 0.21578754, 0.0696524, 0.09142951, 0.080997564, -0.0682772, -0.0011445724, -0.11736295, 0.2519232, -0.101926275) * go_1(-1.0, 1.0);
[   8.536][d][vo/gpu/opengl] [ 45]     result += mat4(-0.12913518, 0.058357026, 0.195421, -0.15651494, 0.2877076, 0.0033844314, -0.07831594, 0.052855384, -0.031295884, 0.03301088, -0.18408822, 0.06732994, 0.23742151, -0.12568143, 0.22810535, -0.11545694) * go_1(0.0, -1.0);
[   8.536][d][vo/gpu/opengl] [ 46]     result += mat4(-0.49203303, -0.22656603, 0.1723193, -0.51250046, -0.09742038, 0.758559, -0.3387505, -0.6193586, 0.14136684, 0.27679884, -0.050113205, 0.31041816, -0.36475047, -0.48746544, 0.3233227, 0.4579754) * go_1(0.0, 0.0);
[   8.536][d][vo/gpu/opengl] [ 47]     result += mat4(0.46636763, 0.1507748, -0.2581362, 0.15413165, -0.17160143, 0.14256273, -0.074575804, -0.099299066, -0.0017214464, 0.13778336, -0.07378213, -0.15489665, -0.10533715, -0.0011083825, 0.39584312, 0.0023906573) * go_1(0.0, 1.0);
[   8.536][d][vo/gpu/opengl] [ 48]     result += mat4(0.026959421, -0.06391859, 0.0034752619, 0.14521928, -0.0010877338, -0.032619733, 0.005375293, -0.018952755, 0.03381545, -0.007652831, 0.034141563, 0.046016496, 0.11219674, 0.030913852, 0.077403754, 0.17192438) * go_1(1.0, -1.0);
[   8.536][d][vo/gpu/opengl] [ 49]     result += mat4(0.040326044, 0.17290725, -0.1220239, -0.09594783, -0.025229257, 0.17913155, -0.26623353, -0.033396784, -0.03075146, 0.009143897, -0.0136083895, -0.13886899, 0.075683735, -0.11584183, 0.22182357, 0.19350322) * go_1(1.0, 0.0);
[   8.536][d][vo/gpu/opengl] [ 50]     result += mat4(0.15726025, -0.10215694, -0.060057458, 0.26487043, -0.04075552, -0.016496127, 0.0015382086, 0.108562306, 0.026795091, 0.0441233, -0.08754318, -0.0460157, 0.048422016, 0.14107347, 0.07986661, 0.1047697) * go_1(1.0, 1.0);
[   8.536][d][vo/gpu/opengl] [ 51]     result += vec4(0.0766796, 0.08115133, -0.05703058, 0.14025708);
[   8.536][d][vo/gpu/opengl] [ 52]     return result;
[   8.536][d][vo/gpu/opengl] [ 53] }
[   8.536][d][vo/gpu/opengl] [ 54] void main() {
[   8.536][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.536][d][vo/gpu/opengl] [ 56] color = hook();
[   8.536][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.536][d][vo/gpu/opengl] [ 58] }
[   8.537][d][vo/gpu/opengl] shader link log (status=1): 
[   8.537][d][vo/gpu] Resizing texture: 1280x720
[   8.539][d][vo/gpu/opengl] vertex shader source:
[   8.539][d][vo/gpu/opengl] [  1] #version 440
[   8.539][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.539][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.539][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.539][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.539][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.539][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.539][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.539][d][vo/gpu/opengl] [  9] void main() {
[   8.539][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.539][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.539][d][vo/gpu/opengl] [ 12] }
[   8.539][d][vo/gpu/opengl] fragment shader source:
[   8.539][d][vo/gpu/opengl] [  1] #version 440
[   8.539][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.539][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.539][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.539][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.539][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.539][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.539][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.539][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.539][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.539][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.539][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.539][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.539][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.539][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.539][d][vo/gpu/opengl] [ 16] };
[   8.539][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.539][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.539][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.539][d][vo/gpu/opengl] [ 20] #define conv2d_2_tf_raw texture0
[   8.539][d][vo/gpu/opengl] [ 21] #define conv2d_2_tf_pos texcoord0
[   8.539][d][vo/gpu/opengl] [ 22] #define conv2d_2_tf_size texture_size0
[   8.539][d][vo/gpu/opengl] [ 23] #define conv2d_2_tf_rot texture_rot0
[   8.539][d][vo/gpu/opengl] [ 24] #define conv2d_2_tf_off texture_off0
[   8.539][d][vo/gpu/opengl] [ 25] #define conv2d_2_tf_pt pixel_size0
[   8.539][d][vo/gpu/opengl] [ 26] #define conv2d_2_tf_map texmap0
[   8.539][d][vo/gpu/opengl] [ 27] #define conv2d_2_tf_mul 1.000000
[   8.539][d][vo/gpu/opengl] [ 28] #define conv2d_2_tf_tex(pos) (conv2d_2_tf_mul * vec4(texture(conv2d_2_tf_raw, pos)).rgba)
[   8.539][d][vo/gpu/opengl] [ 29] #define conv2d_2_tf_texOff(off) conv2d_2_tf_tex(conv2d_2_tf_pos + conv2d_2_tf_pt * vec2(off))
[   8.539][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_2_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.539][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_2_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.539][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.539][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.18038331, 0.21830973, -0.10019419, -0.022745568, -0.14944611, -0.15669158, 0.46361133, -0.07289843, 0.02976627, -0.09000817, 0.113060996, 0.05635241, 0.012762965, -0.022688959, 0.01629751, 0.061114635) * go_0(-1.0, -1.0);
[   8.539][d][vo/gpu/opengl] [ 34]     result += mat4(0.024338024, -0.10004009, -0.13709056, -0.0851965, 0.23927099, -0.024349794, -0.16574804, 0.084686354, -0.047885604, 0.09688507, -0.12733915, 0.06980246, 0.11480734, 0.014669346, -0.07505829, 0.04676309) * go_0(-1.0, 0.0);
[   8.539][d][vo/gpu/opengl] [ 35]     result += mat4(0.054203495, 0.011881634, -0.036115017, -0.0686298, -0.13682245, -0.15678032, 0.057050128, -0.03368558, 0.13011025, 0.033391044, -0.09841339, -0.027057761, -0.18701133, 0.20852546, -0.13660902, 0.0005817616) * go_0(-1.0, 1.0);
[   8.539][d][vo/gpu/opengl] [ 36]     result += mat4(-0.08077834, 0.35952288, -0.07647382, -0.0033230998, 0.13929126, -0.09155619, 0.14128102, 0.16005981, 0.18161216, -0.09485738, 0.0029118075, 0.052682754, 0.03242074, 0.08299826, 0.073796146, -0.06446532) * go_0(0.0, -1.0);
[   8.539][d][vo/gpu/opengl] [ 37]     result += mat4(-0.36655015, 0.4606936, 0.19073649, 0.31655258, -0.006838053, -0.579939, 0.089126326, -0.14021218, -0.3437716, 0.16714323, 0.17705944, -0.22418492, -0.3883696, -0.2302651, 0.2581861, 0.21983066) * go_0(0.0, 0.0);
[   8.539][d][vo/gpu/opengl] [ 38]     result += mat4(0.0992383, -0.014257871, -0.023896435, 0.19868234, 0.0408007, 0.07995299, 0.16102871, -0.11668251, 0.22458278, -0.05587917, 0.19373615, -0.016202094, -0.25106144, 0.15634494, 0.11624891, -0.2930768) * go_0(0.0, 1.0);
[   8.539][d][vo/gpu/opengl] [ 39]     result += mat4(0.024616942, 0.36248252, -0.14779098, -0.019894283, -0.007111256, 0.010641561, -0.09541178, 0.21236233, 0.009501827, 0.08132797, -0.13983901, 0.027207611, 0.038444366, -0.013995817, -0.16242191, 0.03294123) * go_0(1.0, -1.0);
[   8.539][d][vo/gpu/opengl] [ 40]     result += mat4(0.0131698875, -0.18124102, -0.13503514, -0.06099072, 0.07422735, -0.20906176, -0.049005672, 0.08739405, -0.031758767, -0.1978915, 0.23094437, 0.54512614, 0.21338555, -0.011205669, -0.23727885, -0.29533875) * go_0(1.0, 0.0);
[   8.539][d][vo/gpu/opengl] [ 41]     result += mat4(-0.0010255767, -0.07168225, -0.033568826, 0.22161655, -0.087293416, 0.11350447, 0.13653576, 0.061226424, -0.13074352, 0.058425818, 0.038460605, 0.2749964, -0.012814839, 0.085885845, -0.038151987, -0.17960808) * go_0(1.0, 1.0);
[   8.539][d][vo/gpu/opengl] [ 42]     result += mat4(0.19728905, -0.040724937, -0.18270236, 0.046735186, 0.03507326, 0.119867206, -0.12691991, 0.18119748, -0.052895024, 0.11348764, -0.043787055, 0.004703516, 0.006752757, -0.06939761, -0.009801806, -0.075640485) * go_1(-1.0, -1.0);
[   8.539][d][vo/gpu/opengl] [ 43]     result += mat4(0.051735226, 0.1732299, -0.10672899, 0.0320877, -0.4913656, 0.2102274, 0.43920282, 0.059108034, 0.08349019, -0.16517872, 0.15436842, -0.1075667, 0.022741623, -0.26693836, 0.3645307, 0.017874828) * go_1(-1.0, 0.0);
[   8.539][d][vo/gpu/opengl] [ 44]     result += mat4(0.034464058, 0.014929155, 0.054227423, 0.14167373, -0.0023630706, -0.08904212, 0.11918041, -0.034539603, 0.06048089, -0.06807333, 0.14447778, 0.035260547, 0.09979546, -0.1924939, 0.14596114, -0.12069667) * go_1(-1.0, 1.0);
[   8.539][d][vo/gpu/opengl] [ 45]     result += mat4(-0.04427228, -0.23673469, 0.010357103, -0.2907043, -0.06845721, -0.078984015, 0.06867713, -0.058163825, -0.12154615, 0.08430951, 0.1922373, 0.030108064, -0.43081748, -0.38715646, -0.022240646, -0.15403675) * go_1(0.0, -1.0);
[   8.539][d][vo/gpu/opengl] [ 46]     result += mat4(0.46885306, -0.33421394, -0.6695223, -0.41841158, 0.30317923, 0.24244753, -0.1047785, -0.18656285, 0.06261881, -0.4405616, 0.24233986, 0.40070608, 0.81440526, 0.11305212, -0.8826317, -0.023478031) * go_1(0.0, 0.0);
[   8.539][d][vo/gpu/opengl] [ 47]     result += mat4(-0.07879348, -0.024378026, -0.041883785, -0.17030984, 0.23229122, -0.011237109, 0.12058088, 0.20766267, -0.36519575, 0.09599417, -0.1271098, 0.06990154, 0.21161246, 0.041002538, -0.36046275, 0.007304667) * go_1(0.0, 1.0);
[   8.539][d][vo/gpu/opengl] [ 48]     result += mat4(0.10873893, 0.003872542, -0.13476561, -0.036068805, -0.054637462, 0.02304618, 0.04707738, -0.2856381, 0.07124422, 0.010866545, 0.20484549, -0.008342406, -0.43660247, -0.041055538, 0.33536008, -0.060022205) * go_1(1.0, -1.0);
[   8.539][d][vo/gpu/opengl] [ 49]     result += mat4(0.1966458, 0.0016302796, -0.25712642, -0.09639119, -0.006955351, 0.10882133, 0.1107341, 0.062697805, -0.1074494, 0.17361663, 0.6429869, -0.39846307, -0.26302996, 0.048710946, 0.40387508, 0.4299715) * go_1(1.0, 0.0);
[   8.539][d][vo/gpu/opengl] [ 50]     result += mat4(0.18948616, 0.24086732, -0.064474985, -0.11069709, 0.1279659, -0.13438123, -0.028438117, 0.125883, 0.018153818, -0.21942288, 0.020390838, -0.22797634, -0.10821287, -0.17175092, 0.122016855, 0.20699544) * go_1(1.0, 1.0);
[   8.539][d][vo/gpu/opengl] [ 51]     result += vec4(-0.05101961, -0.060740646, -0.024465766, 0.058471628);
[   8.539][d][vo/gpu/opengl] [ 52]     return result;
[   8.539][d][vo/gpu/opengl] [ 53] }
[   8.539][d][vo/gpu/opengl] [ 54] void main() {
[   8.539][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.539][d][vo/gpu/opengl] [ 56] color = hook();
[   8.539][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.539][d][vo/gpu/opengl] [ 58] }
[   8.540][d][vo/gpu/opengl] shader link log (status=1): 
[   8.540][d][vo/gpu] Resizing texture: 1280x720
[   8.542][d][vo/gpu/opengl] vertex shader source:
[   8.542][d][vo/gpu/opengl] [  1] #version 440
[   8.542][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.542][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.542][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.542][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.542][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.542][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.542][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.542][d][vo/gpu/opengl] [  9] void main() {
[   8.542][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.542][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.542][d][vo/gpu/opengl] [ 12] }
[   8.542][d][vo/gpu/opengl] fragment shader source:
[   8.542][d][vo/gpu/opengl] [  1] #version 440
[   8.542][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.542][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.542][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.542][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.542][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.542][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.542][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.542][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.542][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.542][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.542][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.542][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.542][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.542][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.542][d][vo/gpu/opengl] [ 16] };
[   8.542][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.542][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.542][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.542][d][vo/gpu/opengl] [ 20] #define conv2d_3_tf_raw texture0
[   8.542][d][vo/gpu/opengl] [ 21] #define conv2d_3_tf_pos texcoord0
[   8.542][d][vo/gpu/opengl] [ 22] #define conv2d_3_tf_size texture_size0
[   8.542][d][vo/gpu/opengl] [ 23] #define conv2d_3_tf_rot texture_rot0
[   8.542][d][vo/gpu/opengl] [ 24] #define conv2d_3_tf_off texture_off0
[   8.542][d][vo/gpu/opengl] [ 25] #define conv2d_3_tf_pt pixel_size0
[   8.542][d][vo/gpu/opengl] [ 26] #define conv2d_3_tf_map texmap0
[   8.542][d][vo/gpu/opengl] [ 27] #define conv2d_3_tf_mul 1.000000
[   8.542][d][vo/gpu/opengl] [ 28] #define conv2d_3_tf_tex(pos) (conv2d_3_tf_mul * vec4(texture(conv2d_3_tf_raw, pos)).rgba)
[   8.542][d][vo/gpu/opengl] [ 29] #define conv2d_3_tf_texOff(off) conv2d_3_tf_tex(conv2d_3_tf_pos + conv2d_3_tf_pt * vec2(off))
[   8.542][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_3_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.542][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_3_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.542][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.542][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.14533128, 0.07266841, 0.13238011, -0.23328504, 0.031516243, 0.058471266, -0.06394412, 0.090752736, -0.0042359144, 0.12357294, -0.04377495, 0.0011743477, 0.05412243, -0.08146249, 0.04002749, -0.032876283) * go_0(-1.0, -1.0);
[   8.542][d][vo/gpu/opengl] [ 34]     result += mat4(-0.036972385, -0.15238069, -0.3453321, -0.36025128, 0.07597202, -0.02368151, -0.3889606, 0.34607083, 0.3133179, -0.21712309, -0.4210954, 0.21450534, 0.15226828, 0.25326282, 0.45327064, -0.3350824) * go_0(-1.0, 0.0);
[   8.542][d][vo/gpu/opengl] [ 35]     result += mat4(0.019018406, -0.33060563, -0.092601225, 0.14970545, 0.1441509, -0.19228427, -0.032771986, 0.26331595, 0.052981265, -0.06627376, -0.08634131, 0.038706224, 0.13403937, -4.4842476e-05, 0.049002815, -0.12719193) * go_0(-1.0, 1.0);
[   8.542][d][vo/gpu/opengl] [ 36]     result += mat4(0.17527401, -0.0035254909, -0.047959115, -0.4526988, -0.07510284, 0.0013256798, -0.07539148, 0.24220634, -0.08708839, -0.14494033, -0.17085724, -0.099797316, 0.0068515535, -0.08918779, 0.27164719, -0.1702649) * go_0(0.0, -1.0);
[   8.542][d][vo/gpu/opengl] [ 37]     result += mat4(0.31848368, 0.48983255, -0.44140294, -0.65174145, -0.004199057, 0.19494705, 0.5196497, -0.027118586, 0.032509074, -0.23900363, -0.14489244, 0.36314297, -0.23168536, -0.20960593, 0.61471456, 0.12401275) * go_0(0.0, 0.0);
[   8.542][d][vo/gpu/opengl] [ 38]     result += mat4(-0.24317405, 0.21560913, 0.15564032, 0.11606844, -0.15039803, -0.59578896, 0.14100945, -0.026194477, 0.37237462, -0.49472088, -0.15215331, -0.38820064, -0.25089455, -0.29643852, -0.09513793, 0.019779462) * go_0(0.0, 1.0);
[   8.542][d][vo/gpu/opengl] [ 39]     result += mat4(0.12498539, 0.0710632, -0.25012368, -0.2272255, -0.08647026, 0.12277892, 0.011025097, -0.12168395, -0.13489573, 0.016708186, -0.15583871, -0.057124946, 0.1216943, 0.019803725, 0.06952334, -0.032985855) * go_0(1.0, -1.0);
[   8.542][d][vo/gpu/opengl] [ 40]     result += mat4(0.28794885, 0.33783793, -0.14469545, -0.081780486, -0.50320613, -0.067601606, -0.06847453, -0.021648854, -0.34295765, 0.15071863, -0.06619896, -0.084465064, 0.31909832, 0.015414661, 0.14930317, -0.11295768) * go_0(1.0, 0.0);
[   8.542][d][vo/gpu/opengl] [ 41]     result += mat4(0.24530606, 0.25526014, 0.09971985, -0.07749641, -0.2361951, -0.07997673, 0.03617294, 0.02959561, -0.4498983, -0.014073485, -0.20587012, 0.06396779, 0.1262825, 0.027433183, 0.14469334, 0.011538011) * go_0(1.0, 1.0);
[   8.542][d][vo/gpu/opengl] [ 42]     result += mat4(-0.038572453, -0.023108613, -0.039481267, -0.012160024, -0.004521989, -0.028665857, 0.04295255, 0.10580258, 0.05439479, -0.072261885, 0.11030243, 0.08934696, 0.09133867, 0.017547369, 0.097613186, 0.05491059) * go_1(-1.0, -1.0);
[   8.542][d][vo/gpu/opengl] [ 43]     result += mat4(-0.09972817, 0.057730395, 0.12665828, 0.32861367, -0.16186063, 0.0745509, 0.2394045, -0.08687853, -0.034404907, -0.05843572, 0.0684561, -0.1355754, 0.19248672, -0.60372186, 0.12583947, 0.4388962) * go_1(-1.0, 0.0);
[   8.542][d][vo/gpu/opengl] [ 44]     result += mat4(0.10341107, 0.061113223, 0.08773817, -0.082504354, -0.16612078, 0.2681751, 0.019737698, -0.17122322, -0.135949, 0.3048101, 0.087803006, 0.11373851, 0.013192192, -0.27022064, 0.35529897, -0.15321451) * go_1(-1.0, 1.0);
[   8.542][d][vo/gpu/opengl] [ 45]     result += mat4(-0.032835662, 0.11123062, -0.11322452, -0.17300649, 0.04680824, 0.12849288, 0.17269878, -0.048671383, 0.05189037, -0.009078046, 0.22105052, 0.013008137, -0.009738674, 0.15391739, 0.20969556, 0.14189166) * go_1(0.0, -1.0);
[   8.542][d][vo/gpu/opengl] [ 46]     result += mat4(-0.47377753, 0.3038031, 0.18604809, 0.1931698, -0.2964668, -0.12287907, -0.7107761, 0.26619422, -0.33923018, 0.19200724, 0.013786281, -0.17496964, 0.079325035, -0.3694445, 0.0054486147, -0.33018264) * go_1(0.0, 0.0);
[   8.542][d][vo/gpu/opengl] [ 47]     result += mat4(0.14903802, -0.028043179, 1.5238678e-05, 0.021232028, 0.16025065, 0.14746875, -0.22831628, -0.12177345, 0.038778774, 0.32188168, -0.042017702, 0.27155936, 0.17920609, 0.04099755, 0.28527525, 0.074623376) * go_1(0.0, 1.0);
[   8.542][d][vo/gpu/opengl] [ 48]     result += mat4(0.057019282, -0.112741895, 0.030361209, 0.14567861, 0.056265317, -0.01573537, -0.06707608, 0.016657263, 0.09829025, -0.026795063, 0.023042196, 0.09438241, -0.025483066, -0.052787006, 0.19730279, 0.021218104) * go_1(1.0, -1.0);
[   8.542][d][vo/gpu/opengl] [ 49]     result += mat4(0.19868211, -0.01531125, 0.108596824, -0.035456363, 0.0033609823, 0.057961613, -0.013726211, 0.101742364, 0.33357215, 0.14468077, 0.29711527, -0.24662566, -0.119014986, -0.1899639, 0.11246697, -0.0035374009) * go_1(1.0, 0.0);
[   8.542][d][vo/gpu/opengl] [ 50]     result += mat4(-0.05602109, -0.15539522, 0.010730943, 0.057116497, -0.02037749, 0.084210664, -0.028235348, 0.10574697, 0.056925274, 0.07922333, -0.090088, 0.1615985, -0.0044301567, -0.089945644, 0.024176618, -0.041844133) * go_1(1.0, 1.0);
[   8.542][d][vo/gpu/opengl] [ 51]     result += vec4(0.0015292584, -0.043625206, -0.09429898, -0.06280405);
[   8.542][d][vo/gpu/opengl] [ 52]     return result;
[   8.542][d][vo/gpu/opengl] [ 53] }
[   8.542][d][vo/gpu/opengl] [ 54] void main() {
[   8.542][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.542][d][vo/gpu/opengl] [ 56] color = hook();
[   8.542][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.542][d][vo/gpu/opengl] [ 58] }
[   8.543][d][vo/gpu/opengl] shader link log (status=1): 
[   8.543][d][vo/gpu] Resizing texture: 1280x720
[   8.545][d][vo/gpu/opengl] vertex shader source:
[   8.545][d][vo/gpu/opengl] [  1] #version 440
[   8.545][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.545][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.545][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.545][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.545][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.545][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.545][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.545][d][vo/gpu/opengl] [  9] void main() {
[   8.545][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.545][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.545][d][vo/gpu/opengl] [ 12] }
[   8.545][d][vo/gpu/opengl] fragment shader source:
[   8.545][d][vo/gpu/opengl] [  1] #version 440
[   8.545][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.545][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.545][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.545][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.545][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.545][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.545][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.545][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.545][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.545][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.545][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.545][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.545][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.545][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.545][d][vo/gpu/opengl] [ 16] };
[   8.545][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.545][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.545][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.545][d][vo/gpu/opengl] [ 20] #define conv2d_4_tf_raw texture0
[   8.545][d][vo/gpu/opengl] [ 21] #define conv2d_4_tf_pos texcoord0
[   8.545][d][vo/gpu/opengl] [ 22] #define conv2d_4_tf_size texture_size0
[   8.545][d][vo/gpu/opengl] [ 23] #define conv2d_4_tf_rot texture_rot0
[   8.545][d][vo/gpu/opengl] [ 24] #define conv2d_4_tf_off texture_off0
[   8.545][d][vo/gpu/opengl] [ 25] #define conv2d_4_tf_pt pixel_size0
[   8.545][d][vo/gpu/opengl] [ 26] #define conv2d_4_tf_map texmap0
[   8.545][d][vo/gpu/opengl] [ 27] #define conv2d_4_tf_mul 1.000000
[   8.545][d][vo/gpu/opengl] [ 28] #define conv2d_4_tf_tex(pos) (conv2d_4_tf_mul * vec4(texture(conv2d_4_tf_raw, pos)).rgba)
[   8.545][d][vo/gpu/opengl] [ 29] #define conv2d_4_tf_texOff(off) conv2d_4_tf_tex(conv2d_4_tf_pos + conv2d_4_tf_pt * vec2(off))
[   8.545][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_4_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.545][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_4_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.545][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.545][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(0.06051604, -0.028152643, -0.21418124, 0.13032125, 0.42565975, -0.09571944, -0.34494513, 0.30004, -0.073245734, -0.028659137, 0.0032105136, -0.05009555, -0.048971225, 0.04814533, 0.002843805, -0.046224426) * go_0(-1.0, -1.0);
[   8.545][d][vo/gpu/opengl] [ 34]     result += mat4(-0.07495975, 0.018714864, 0.21229684, -0.13614887, 0.79988647, -0.0697328, 0.38232988, 0.24165109, 0.25947478, -0.0009418982, -0.17369923, 0.10007766, 0.024117598, 0.028611807, 0.15090801, -0.06344829) * go_0(-1.0, 0.0);
[   8.545][d][vo/gpu/opengl] [ 35]     result += mat4(-0.07982219, 0.0900347, 0.007609254, -0.0034791247, 0.013611781, -0.13560618, 0.09685799, 0.06276075, 0.134693, -0.14370437, -0.25175703, -0.0016138123, -0.0075672898, -0.13325731, -0.061100446, 0.0059743375) * go_0(-1.0, 1.0);
[   8.545][d][vo/gpu/opengl] [ 36]     result += mat4(-0.039018434, -0.19668463, -0.43018532, 0.31886247, 0.4965479, 0.114569925, 0.19110382, 0.27343535, 0.0707728, -0.11877004, -0.25827697, 0.37012872, 0.1474777, 0.07056952, -0.14965728, 0.061595406) * go_0(0.0, -1.0);
[   8.545][d][vo/gpu/opengl] [ 37]     result += mat4(0.506543, -0.16268773, 0.455319, -0.0702646, 0.70102173, -0.14041683, 0.70184857, 0.4817842, -0.3389246, -0.14463086, 0.13763213, -1.1259074, 0.47722015, 0.38352612, -0.04293366, -0.5604627) * go_0(0.0, 0.0);
[   8.545][d][vo/gpu/opengl] [ 38]     result += mat4(0.17606944, 0.15897374, 0.13499324, 0.29241478, -0.032824475, 0.11128662, -0.22204424, -0.051803727, 0.013195331, -0.42040786, -0.3950585, 0.70745844, 0.38646924, -0.19080774, -0.15171832, -0.10742828) * go_0(0.0, 1.0);
[   8.545][d][vo/gpu/opengl] [ 39]     result += mat4(-0.039278325, 0.18421806, -0.044948544, 0.07902063, -0.2149251, 0.09913459, -0.09743655, -0.26899317, -0.002695496, -0.07554527, -0.22373366, 0.17830558, -0.047994815, -0.06789183, -0.06755918, -0.104452066) * go_0(1.0, -1.0);
[   8.545][d][vo/gpu/opengl] [ 40]     result += mat4(-0.0493473, -0.30411786, -0.056439694, -0.06582185, -0.21309847, 0.100670904, -0.22966193, -0.045954112, 0.12728062, -0.25081897, -0.094699375, -0.4036555, 0.060854495, -0.64373237, -0.21522263, -0.6683476) * go_0(1.0, 0.0);
[   8.545][d][vo/gpu/opengl] [ 41]     result += mat4(0.063481025, 0.11744312, -0.043330096, 0.33817932, -0.06679828, -0.23207302, -0.10188898, -0.10590511, 0.058780864, 0.047292337, -0.11834696, 0.10076128, -0.036641665, 0.30200714, -0.0002892557, -0.10303763) * go_0(1.0, 1.0);
[   8.545][d][vo/gpu/opengl] [ 42]     result += mat4(-0.10842604, 0.042055763, 0.29702973, -0.07409644, -0.030164458, -0.012098744, -0.06396587, -0.08787527, 0.051854923, 0.12997511, 0.11468497, 0.15022379, 0.007814715, 0.014517445, 0.025484756, 0.01078619) * go_1(-1.0, -1.0);
[   8.545][d][vo/gpu/opengl] [ 43]     result += mat4(-0.29229385, 0.040265664, -0.15376821, 0.075579196, -0.05593569, -0.045405343, 0.12099204, 0.1571252, 0.17841713, 0.04673325, 0.14550509, 0.08603346, -0.049786013, 0.06121843, -0.16273825, -0.13857752) * go_1(-1.0, 0.0);
[   8.545][d][vo/gpu/opengl] [ 44]     result += mat4(0.06903744, 0.2628764, -0.13582836, -0.35678583, -0.13821034, -0.019381443, -0.19570538, -0.09298511, 0.08965436, 0.09745909, 0.20055099, 0.024967568, 0.08144204, 0.004633625, 0.12809834, -0.009431525) * go_1(-1.0, 1.0);
[   8.545][d][vo/gpu/opengl] [ 45]     result += mat4(0.09784006, 0.010729353, 0.046643205, -0.110926524, -0.21556224, 0.00016300633, 0.122175336, 0.15004392, 0.013864355, 0.24767809, 0.13865592, 0.0155424485, -0.1450483, -0.15688781, -0.06195043, -0.13745981) * go_1(0.0, -1.0);
[   8.545][d][vo/gpu/opengl] [ 46]     result += mat4(0.018991318, 0.55401963, 0.11709872, -0.028442185, -0.46035343, -0.10215539, -0.60193926, 0.47882316, -0.23346989, 0.037200127, 0.22814943, -0.08231696, -0.36430013, -0.011152757, 0.48752213, 0.29796222) * go_1(0.0, 0.0);
[   8.545][d][vo/gpu/opengl] [ 47]     result += mat4(-0.07258066, -0.023222538, 0.23230423, -0.30317304, 0.03942911, -0.06899803, 0.23778579, 0.07418621, -0.17443737, 0.33387753, 0.007354842, -0.123447575, -0.1745315, 0.11071779, -0.11949625, -0.22832453) * go_1(0.0, 1.0);
[   8.545][d][vo/gpu/opengl] [ 48]     result += mat4(-0.024909232, -0.0308135, 0.12170621, -0.13298757, 0.045828197, -0.1532345, -0.06633672, 0.23591088, 0.04964077, 0.14091493, 0.038343724, -0.029780807, 0.05762822, -0.048930667, -0.02434709, 0.07109019) * go_1(1.0, -1.0);
[   8.545][d][vo/gpu/opengl] [ 49]     result += mat4(-0.16039175, 0.3004474, -0.17278233, 0.13677922, 0.18838613, 0.15054552, 0.32901475, -0.1288333, 0.26378244, -0.05119892, 0.34533516, 0.25180495, 0.19452183, 0.0843233, -0.08029368, 0.39877903) * go_1(1.0, 0.0);
[   8.545][d][vo/gpu/opengl] [ 50]     result += mat4(-0.07097129, -0.26492423, -0.055032317, -0.093516104, -0.11795062, 0.04086253, -0.07989471, 0.059686553, 0.09378249, 0.45851848, 0.2510942, 0.19599153, 0.019765077, -0.02920918, -0.04125142, -0.13859107) * go_1(1.0, 1.0);
[   8.545][d][vo/gpu/opengl] [ 51]     result += vec4(0.04400571, -0.04015565, 0.0140529545, 0.05474095);
[   8.545][d][vo/gpu/opengl] [ 52]     return result;
[   8.545][d][vo/gpu/opengl] [ 53] }
[   8.545][d][vo/gpu/opengl] [ 54] void main() {
[   8.545][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.545][d][vo/gpu/opengl] [ 56] color = hook();
[   8.545][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.545][d][vo/gpu/opengl] [ 58] }
[   8.546][d][vo/gpu/opengl] shader link log (status=1): 
[   8.546][d][vo/gpu] Resizing texture: 1280x720
[   8.548][d][vo/gpu/opengl] vertex shader source:
[   8.548][d][vo/gpu/opengl] [  1] #version 440
[   8.548][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.548][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.548][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.548][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.548][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.548][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.548][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.548][d][vo/gpu/opengl] [  9] void main() {
[   8.548][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.548][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.548][d][vo/gpu/opengl] [ 12] }
[   8.548][d][vo/gpu/opengl] fragment shader source:
[   8.548][d][vo/gpu/opengl] [  1] #version 440
[   8.548][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.548][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.548][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.548][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.548][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.548][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.548][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.548][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 input_size;
[   8.548][d][vo/gpu/opengl] [ 10] layout(offset=8) vec2 target_size;
[   8.548][d][vo/gpu/opengl] [ 11] layout(offset=16) vec2 tex_offset;
[   8.548][d][vo/gpu/opengl] [ 12] layout(offset=24) vec2 texture_size0;
[   8.548][d][vo/gpu/opengl] [ 13] layout(offset=32) mat2 texture_rot0;
[   8.548][d][vo/gpu/opengl] [ 14] layout(offset=64) vec2 texture_off0;
[   8.548][d][vo/gpu/opengl] [ 15] layout(offset=72) vec2 pixel_size0;
[   8.548][d][vo/gpu/opengl] [ 16] };
[   8.548][d][vo/gpu/opengl] [ 17] uniform float random;
[   8.548][d][vo/gpu/opengl] [ 18] uniform int frame;
[   8.548][d][vo/gpu/opengl] [ 19] uniform sampler2D texture0;
[   8.548][d][vo/gpu/opengl] [ 20] #define conv2d_5_tf_raw texture0
[   8.548][d][vo/gpu/opengl] [ 21] #define conv2d_5_tf_pos texcoord0
[   8.548][d][vo/gpu/opengl] [ 22] #define conv2d_5_tf_size texture_size0
[   8.548][d][vo/gpu/opengl] [ 23] #define conv2d_5_tf_rot texture_rot0
[   8.548][d][vo/gpu/opengl] [ 24] #define conv2d_5_tf_off texture_off0
[   8.548][d][vo/gpu/opengl] [ 25] #define conv2d_5_tf_pt pixel_size0
[   8.548][d][vo/gpu/opengl] [ 26] #define conv2d_5_tf_map texmap0
[   8.548][d][vo/gpu/opengl] [ 27] #define conv2d_5_tf_mul 1.000000
[   8.548][d][vo/gpu/opengl] [ 28] #define conv2d_5_tf_tex(pos) (conv2d_5_tf_mul * vec4(texture(conv2d_5_tf_raw, pos)).rgba)
[   8.548][d][vo/gpu/opengl] [ 29] #define conv2d_5_tf_texOff(off) conv2d_5_tf_tex(conv2d_5_tf_pos + conv2d_5_tf_pt * vec2(off))
[   8.548][d][vo/gpu/opengl] [ 30] #define go_0(x_off, y_off) (max((conv2d_5_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.548][d][vo/gpu/opengl] [ 31] #define go_1(x_off, y_off) (max(-(conv2d_5_tf_texOff(vec2(x_off, y_off))), 0.0))
[   8.548][d][vo/gpu/opengl] [ 32] vec4 hook() {
[   8.548][d][vo/gpu/opengl] [ 33]     vec4 result = mat4(-0.014236042, -0.0031431736, -0.1551387, 0.12515116, -0.28528872, 0.36161992, 0.15750743, -0.17111474, 0.13792591, -0.0657419, -0.17471549, 0.14650472, 0.034169197, -0.019157575, 0.23520657, -0.20358163) * go_0(-1.0, -1.0);
[   8.548][d][vo/gpu/opengl] [ 34]     result += mat4(0.02015035, 0.12993371, 0.11199667, -0.09854378, 0.5001741, 0.03462961, 0.24919736, 0.08505297, -0.20902094, -0.24141377, -0.15360375, 0.049974803, -0.037157424, -0.048510186, 0.20106035, -0.118480384) * go_0(-1.0, 0.0);
[   8.548][d][vo/gpu/opengl] [ 35]     result += mat4(0.086798504, -0.009607818, 0.034812123, -0.005187592, 0.0351509, 0.021755, -0.04996161, -0.041231696, 0.0020545553, 0.015730752, -0.07507172, 0.018597523, -0.02393343, 0.07624775, 0.03892451, -0.0025574185) * go_0(-1.0, 1.0);
[   8.548][d][vo/gpu/opengl] [ 36]     result += mat4(0.035725456, 0.06809103, 0.51926994, -0.39983147, -0.16402833, -0.1243394, -0.25922915, 0.28285915, 0.15959994, -0.2351732, 0.2650535, -0.30193794, -0.11468332, 0.050777763, -0.51894253, 0.4408367) * go_0(0.0, -1.0);
[   8.548][d][vo/gpu/opengl] [ 37]     result += mat4(-0.27042082, 0.22243942, 0.14902467, 0.38428563, 0.46612173, 0.5169912, -0.22330502, -0.11300288, -0.36141354, 0.0668681, 0.2984152, 0.1275798, -0.24121419, 0.2952039, -0.45109174, -0.3822957) * go_0(0.0, 0.0);
[   8.548][d][vo/gpu/opengl] [ 38]     result += mat4(0.26543504, -0.05742226, -0.052103903, -0.013124308, -0.14358385, -0.04024543, 0.07665455, -0.012301872, -0.18752757, -0.03913891, 0.038205814, -0.006583095, -0.25550908, -0.25725332, -0.12454206, -0.0058936924) * go_0(0.0, 1.0);
[   8.548][d][vo/gpu/opengl] [ 39]     result += mat4(-0.0018946569, 0.019746022, -0.13080788, 0.11450627, -0.013743845, -0.027179785, -0.14425103, 0.07109661, 0.023703793, 0.086905524, 0.03151253, 0.0132474145, 0.041018624, 0.04548913, 0.2718715, -0.20008296) * go_0(1.0, -1.0);
[   8.548][d][vo/gpu/opengl] [ 40]     result += mat4(-0.076830454, 0.11652955, 0.5068201, -0.3082819, 0.058615055, -0.006765798, -0.057522714, 0.049981344, -0.006897243, -0.21763432, 0.16896053, -0.21176189, -0.061227098, 0.03566485, 0.08901554, -0.050980624) * go_0(1.0, 0.0);
[   8.548][d][vo/gpu/opengl] [ 41]     result += mat4(0.02327798, 0.07662976, 0.034811985, -0.03238033, -0.0021881019, -0.030997375, -0.069672935, 0.04040273, -0.1217442, 0.104173124, 0.09862539, 0.020557549, -0.022286594, 0.10287763, -0.021694934, 0.07542515) * go_0(1.0, 1.0);
[   8.548][d][vo/gpu/opengl] [ 42]     result += mat4(0.124069154, -0.08579466, -0.07816314, 0.11332851, -0.034682628, -0.11038275, 0.04750615, -0.096100725, 0.039588403, -0.15149672, -0.05529172, 0.034304325, -0.022520235, -0.05023852, -0.2674731, 0.21886522) * go_1(-1.0, -1.0);
[   8.548][d][vo/gpu/opengl] [ 43]     result += mat4(-0.1948599, -0.14946899, -0.39548838, 0.18042913, -0.007919619, 0.19826505, 0.23789087, 0.009140256, 0.11857748, 0.18215668, 0.13606293, -0.09209675, -0.080678545, -0.020431137, -0.07728839, -0.051353537) * go_1(-1.0, 0.0);
[   8.548][d][vo/gpu/opengl] [ 44]     result += mat4(-0.07616472, -0.0032800382, -0.045657665, -0.039144326, -0.37786487, -0.08877774, 0.053579114, -0.070886396, 0.011311804, 0.107276045, 0.013236154, 0.009832061, 0.08292063, 0.12258811, 0.0005569043, -0.009806432) * go_1(-1.0, 1.0);
[   8.548][d][vo/gpu/opengl] [ 45]     result += mat4(-0.28062925, 0.15946878, -0.1021801, -0.06471589, -0.26999477, 0.21230288, -0.14243907, 0.2555922, -0.09608517, 0.26339412, 0.20891234, -0.23538485, 0.33958244, -0.12569186, 0.43289876, -0.33462036) * go_1(0.0, -1.0);
[   8.548][d][vo/gpu/opengl] [ 46]     result += mat4(0.16265294, 0.2625464, -0.34452894, 0.2233622, 0.13850005, -0.42999864, -0.5385177, -0.11035979, 0.51662, -0.78238726, -0.09422375, 0.83759475, 0.44468537, 0.14301361, 0.108906105, 1.1596143) * go_1(0.0, 0.0);
[   8.548][d][vo/gpu/opengl] [ 47]     result += mat4(-0.73757625, -0.12369605, 0.23523071, 0.006587637, -0.15445381, 0.22757277, 0.052819528, 0.10183905, -0.07912228, -0.16998893, -0.13360223, 0.014348178, -0.17778571, -0.41047302, 0.10241381, -0.08526306) * go_1(0.0, 1.0);
[   8.548][d][vo/gpu/opengl] [ 48]     result += mat4(0.14712952, 0.048995696, 0.05299946, -0.06817572, 0.1498064, -0.079825334, 0.40354064, -0.31789717, -0.1998377, 0.00955295, -0.32318407, 0.30898204, -0.039571725, -0.026203401, -0.16292085, 0.08574385) * go_1(1.0, -1.0);
[   8.548][d][vo/gpu/opengl] [ 49]     result += mat4(-0.6353329, -0.56000775, -0.17279743, 0.18198174, -0.19555812, 0.056538377, 0.34365895, -0.07799055, 0.19011354, -0.13952748, 0.029196098, -0.19596763, -0.069196045, -0.17402656, 0.07948411, -0.016226962) * go_1(1.0, 0.0);
[   8.548][d][vo/gpu/opengl] [ 50]     result += mat4(0.25592864, 0.083498634, -0.28515807, 0.10789751, 0.0043962947, 0.07085363, 0.048724182, -0.025131436, -0.0049440865, -0.033094388, -0.032935806, 0.04266025, 0.20026933, 0.0927841, -0.006839351, -0.013012285) * go_1(1.0, 1.0);
[   8.548][d][vo/gpu/opengl] [ 51]     result += vec4(0.02021373, 0.0014037411, 0.0012718709, 0.017278494);
[   8.548][d][vo/gpu/opengl] [ 52]     return result;
[   8.548][d][vo/gpu/opengl] [ 53] }
[   8.548][d][vo/gpu/opengl] [ 54] void main() {
[   8.548][d][vo/gpu/opengl] [ 55] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.548][d][vo/gpu/opengl] [ 56] color = hook();
[   8.548][d][vo/gpu/opengl] [ 57] out_color = color;
[   8.548][d][vo/gpu/opengl] [ 58] }
[   8.548][d][vo/gpu/opengl] shader link log (status=1): 
[   8.548][d][vo/gpu] Resizing texture: 1280x720
[   8.550][d][vo/gpu/opengl] vertex shader source:
[   8.550][d][vo/gpu/opengl] [  1] #version 440
[   8.550][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.550][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.551][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.551][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.551][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.551][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.551][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.551][d][vo/gpu/opengl] [  9] in vec2 vertex_texcoord1;
[   8.551][d][vo/gpu/opengl] [ 10] out vec2 texcoord1;
[   8.551][d][vo/gpu/opengl] [ 11] in vec2 vertex_texcoord2;
[   8.551][d][vo/gpu/opengl] [ 12] out vec2 texcoord2;
[   8.551][d][vo/gpu/opengl] [ 13] in vec2 vertex_texcoord3;
[   8.551][d][vo/gpu/opengl] [ 14] out vec2 texcoord3;
[   8.551][d][vo/gpu/opengl] [ 15] in vec2 vertex_texcoord4;
[   8.551][d][vo/gpu/opengl] [ 16] out vec2 texcoord4;
[   8.551][d][vo/gpu/opengl] [ 17] in vec2 vertex_texcoord5;
[   8.551][d][vo/gpu/opengl] [ 18] out vec2 texcoord5;
[   8.551][d][vo/gpu/opengl] [ 19] in vec2 vertex_texcoord6;
[   8.551][d][vo/gpu/opengl] [ 20] out vec2 texcoord6;
[   8.551][d][vo/gpu/opengl] [ 21] void main() {
[   8.551][d][vo/gpu/opengl] [ 22] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.551][d][vo/gpu/opengl] [ 23] texcoord0 = vertex_texcoord0;
[   8.551][d][vo/gpu/opengl] [ 24] texcoord1 = vertex_texcoord1;
[   8.551][d][vo/gpu/opengl] [ 25] texcoord2 = vertex_texcoord2;
[   8.551][d][vo/gpu/opengl] [ 26] texcoord3 = vertex_texcoord3;
[   8.551][d][vo/gpu/opengl] [ 27] texcoord4 = vertex_texcoord4;
[   8.551][d][vo/gpu/opengl] [ 28] texcoord5 = vertex_texcoord5;
[   8.551][d][vo/gpu/opengl] [ 29] texcoord6 = vertex_texcoord6;
[   8.551][d][vo/gpu/opengl] [ 30] }
[   8.551][d][vo/gpu/opengl] fragment shader source:
[   8.551][d][vo/gpu/opengl] [  1] #version 440
[   8.551][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.551][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.551][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.551][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.551][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.551][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.551][d][vo/gpu/opengl] [  8] in vec2 texcoord1;
[   8.551][d][vo/gpu/opengl] [  9] in vec2 texcoord2;
[   8.551][d][vo/gpu/opengl] [ 10] in vec2 texcoord3;
[   8.551][d][vo/gpu/opengl] [ 11] in vec2 texcoord4;
[   8.551][d][vo/gpu/opengl] [ 12] in vec2 texcoord5;
[   8.551][d][vo/gpu/opengl] [ 13] in vec2 texcoord6;
[   8.551][d][vo/gpu/opengl] [ 14] layout(std140, binding=0) uniform UBO {
[   8.551][d][vo/gpu/opengl] [ 15] layout(offset=0) vec2 input_size;
[   8.551][d][vo/gpu/opengl] [ 16] layout(offset=8) vec2 target_size;
[   8.551][d][vo/gpu/opengl] [ 17] layout(offset=16) vec2 tex_offset;
[   8.551][d][vo/gpu/opengl] [ 18] layout(offset=24) vec2 texture_size0;
[   8.551][d][vo/gpu/opengl] [ 19] layout(offset=32) mat2 texture_rot0;
[   8.551][d][vo/gpu/opengl] [ 20] layout(offset=64) vec2 texture_off0;
[   8.551][d][vo/gpu/opengl] [ 21] layout(offset=72) vec2 pixel_size0;
[   8.551][d][vo/gpu/opengl] [ 22] layout(offset=80) vec2 texture_size1;
[   8.551][d][vo/gpu/opengl] [ 23] layout(offset=96) mat2 texture_rot1;
[   8.551][d][vo/gpu/opengl] [ 24] layout(offset=128) vec2 texture_off1;
[   8.551][d][vo/gpu/opengl] [ 25] layout(offset=136) vec2 pixel_size1;
[   8.551][d][vo/gpu/opengl] [ 26] layout(offset=144) vec2 texture_size2;
[   8.551][d][vo/gpu/opengl] [ 27] layout(offset=160) mat2 texture_rot2;
[   8.551][d][vo/gpu/opengl] [ 28] layout(offset=192) vec2 texture_off2;
[   8.551][d][vo/gpu/opengl] [ 29] layout(offset=200) vec2 pixel_size2;
[   8.551][d][vo/gpu/opengl] [ 30] layout(offset=208) vec2 texture_size3;
[   8.551][d][vo/gpu/opengl] [ 31] layout(offset=224) mat2 texture_rot3;
[   8.551][d][vo/gpu/opengl] [ 32] layout(offset=256) vec2 texture_off3;
[   8.551][d][vo/gpu/opengl] [ 33] layout(offset=264) vec2 pixel_size3;
[   8.551][d][vo/gpu/opengl] [ 34] layout(offset=272) vec2 texture_size4;
[   8.551][d][vo/gpu/opengl] [ 35] layout(offset=288) mat2 texture_rot4;
[   8.551][d][vo/gpu/opengl] [ 36] layout(offset=320) vec2 texture_off4;
[   8.551][d][vo/gpu/opengl] [ 37] layout(offset=328) vec2 pixel_size4;
[   8.551][d][vo/gpu/opengl] [ 38] layout(offset=336) vec2 texture_size5;
[   8.551][d][vo/gpu/opengl] [ 39] layout(offset=352) mat2 texture_rot5;
[   8.551][d][vo/gpu/opengl] [ 40] layout(offset=384) vec2 texture_off5;
[   8.551][d][vo/gpu/opengl] [ 41] layout(offset=392) vec2 pixel_size5;
[   8.551][d][vo/gpu/opengl] [ 42] layout(offset=400) vec2 texture_size6;
[   8.551][d][vo/gpu/opengl] [ 43] layout(offset=416) mat2 texture_rot6;
[   8.551][d][vo/gpu/opengl] [ 44] layout(offset=448) vec2 texture_off6;
[   8.551][d][vo/gpu/opengl] [ 45] layout(offset=456) vec2 pixel_size6;
[   8.551][d][vo/gpu/opengl] [ 46] };
[   8.551][d][vo/gpu/opengl] [ 47] uniform float random;
[   8.551][d][vo/gpu/opengl] [ 48] uniform int frame;
[   8.551][d][vo/gpu/opengl] [ 49] uniform sampler2D texture0;
[   8.551][d][vo/gpu/opengl] [ 50] uniform sampler2D texture1;
[   8.551][d][vo/gpu/opengl] [ 51] uniform sampler2D texture2;
[   8.551][d][vo/gpu/opengl] [ 52] uniform sampler2D texture3;
[   8.551][d][vo/gpu/opengl] [ 53] uniform sampler2D texture4;
[   8.551][d][vo/gpu/opengl] [ 54] uniform sampler2D texture5;
[   8.551][d][vo/gpu/opengl] [ 55] uniform sampler2D texture6;
[   8.551][d][vo/gpu/opengl] [ 56] #define conv2d_tf_raw texture0
[   8.551][d][vo/gpu/opengl] [ 57] #define conv2d_tf_pos texcoord0
[   8.551][d][vo/gpu/opengl] [ 58] #define conv2d_tf_size texture_size0
[   8.551][d][vo/gpu/opengl] [ 59] #define conv2d_tf_rot texture_rot0
[   8.551][d][vo/gpu/opengl] [ 60] #define conv2d_tf_off texture_off0
[   8.551][d][vo/gpu/opengl] [ 61] #define conv2d_tf_pt pixel_size0
[   8.551][d][vo/gpu/opengl] [ 62] #define conv2d_tf_map texmap0
[   8.551][d][vo/gpu/opengl] [ 63] #define conv2d_tf_mul 1.000000
[   8.551][d][vo/gpu/opengl] [ 64] #define conv2d_tf_tex(pos) (conv2d_tf_mul * vec4(texture(conv2d_tf_raw, pos)).rgba)
[   8.551][d][vo/gpu/opengl] [ 65] #define conv2d_tf_texOff(off) conv2d_tf_tex(conv2d_tf_pos + conv2d_tf_pt * vec2(off))
[   8.551][d][vo/gpu/opengl] [ 66] #define conv2d_1_tf_raw texture1
[   8.551][d][vo/gpu/opengl] [ 67] #define conv2d_1_tf_pos texcoord1
[   8.551][d][vo/gpu/opengl] [ 68] #define conv2d_1_tf_size texture_size1
[   8.551][d][vo/gpu/opengl] [ 69] #define conv2d_1_tf_rot texture_rot1
[   8.551][d][vo/gpu/opengl] [ 70] #define conv2d_1_tf_off texture_off1
[   8.551][d][vo/gpu/opengl] [ 71] #define conv2d_1_tf_pt pixel_size1
[   8.551][d][vo/gpu/opengl] [ 72] #define conv2d_1_tf_map texmap1
[   8.551][d][vo/gpu/opengl] [ 73] #define conv2d_1_tf_mul 1.000000
[   8.551][d][vo/gpu/opengl] [ 74] #define conv2d_1_tf_tex(pos) (conv2d_1_tf_mul * vec4(texture(conv2d_1_tf_raw, pos)).rgba)
[   8.551][d][vo/gpu/opengl] [ 75] #define conv2d_1_tf_texOff(off) conv2d_1_tf_tex(conv2d_1_tf_pos + conv2d_1_tf_pt * vec2(off))
[   8.551][d][vo/gpu/opengl] [ 76] #define conv2d_2_tf_raw texture2
[   8.551][d][vo/gpu/opengl] [ 77] #define conv2d_2_tf_pos texcoord2
[   8.551][d][vo/gpu/opengl] [ 78] #define conv2d_2_tf_size texture_size2
[   8.551][d][vo/gpu/opengl] [ 79] #define conv2d_2_tf_rot texture_rot2
[   8.551][d][vo/gpu/opengl] [ 80] #define conv2d_2_tf_off texture_off2
[   8.551][d][vo/gpu/opengl] [ 81] #define conv2d_2_tf_pt pixel_size2
[   8.551][d][vo/gpu/opengl] [ 82] #define conv2d_2_tf_map texmap2
[   8.551][d][vo/gpu/opengl] [ 83] #define conv2d_2_tf_mul 1.000000
[   8.551][d][vo/gpu/opengl] [ 84] #define conv2d_2_tf_tex(pos) (conv2d_2_tf_mul * vec4(texture(conv2d_2_tf_raw, pos)).rgba)
[   8.551][d][vo/gpu/opengl] [ 85] #define conv2d_2_tf_texOff(off) conv2d_2_tf_tex(conv2d_2_tf_pos + conv2d_2_tf_pt * vec2(off))
[   8.551][d][vo/gpu/opengl] [ 86] #define conv2d_3_tf_raw texture3
[   8.551][d][vo/gpu/opengl] [ 87] #define conv2d_3_tf_pos texcoord3
[   8.551][d][vo/gpu/opengl] [ 88] #define conv2d_3_tf_size texture_size3
[   8.551][d][vo/gpu/opengl] [ 89] #define conv2d_3_tf_rot texture_rot3
[   8.551][d][vo/gpu/opengl] [ 90] #define conv2d_3_tf_off texture_off3
[   8.551][d][vo/gpu/opengl] [ 91] #define conv2d_3_tf_pt pixel_size3
[   8.551][d][vo/gpu/opengl] [ 92] #define conv2d_3_tf_map texmap3
[   8.551][d][vo/gpu/opengl] [ 93] #define conv2d_3_tf_mul 1.000000
[   8.551][d][vo/gpu/opengl] [ 94] #define conv2d_3_tf_tex(pos) (conv2d_3_tf_mul * vec4(texture(conv2d_3_tf_raw, pos)).rgba)
[   8.551][d][vo/gpu/opengl] [ 95] #define conv2d_3_tf_texOff(off) conv2d_3_tf_tex(conv2d_3_tf_pos + conv2d_3_tf_pt * vec2(off))
[   8.551][d][vo/gpu/opengl] [ 96] #define conv2d_4_tf_raw texture4
[   8.551][d][vo/gpu/opengl] [ 97] #define conv2d_4_tf_pos texcoord4
[   8.551][d][vo/gpu/opengl] [ 98] #define conv2d_4_tf_size texture_size4
[   8.551][d][vo/gpu/opengl] [ 99] #define conv2d_4_tf_rot texture_rot4
[   8.551][d][vo/gpu/opengl] [100] #define conv2d_4_tf_off texture_off4
[   8.551][d][vo/gpu/opengl] [101] #define conv2d_4_tf_pt pixel_size4
[   8.551][d][vo/gpu/opengl] [102] #define conv2d_4_tf_map texmap4
[   8.551][d][vo/gpu/opengl] [103] #define conv2d_4_tf_mul 1.000000
[   8.551][d][vo/gpu/opengl] [104] #define conv2d_4_tf_tex(pos) (conv2d_4_tf_mul * vec4(texture(conv2d_4_tf_raw, pos)).rgba)
[   8.551][d][vo/gpu/opengl] [105] #define conv2d_4_tf_texOff(off) conv2d_4_tf_tex(conv2d_4_tf_pos + conv2d_4_tf_pt * vec2(off))
[   8.551][d][vo/gpu/opengl] [106] #define conv2d_5_tf_raw texture5
[   8.551][d][vo/gpu/opengl] [107] #define conv2d_5_tf_pos texcoord5
[   8.551][d][vo/gpu/opengl] [108] #define conv2d_5_tf_size texture_size5
[   8.551][d][vo/gpu/opengl] [109] #define conv2d_5_tf_rot texture_rot5
[   8.551][d][vo/gpu/opengl] [110] #define conv2d_5_tf_off texture_off5
[   8.551][d][vo/gpu/opengl] [111] #define conv2d_5_tf_pt pixel_size5
[   8.551][d][vo/gpu/opengl] [112] #define conv2d_5_tf_map texmap5
[   8.551][d][vo/gpu/opengl] [113] #define conv2d_5_tf_mul 1.000000
[   8.551][d][vo/gpu/opengl] [114] #define conv2d_5_tf_tex(pos) (conv2d_5_tf_mul * vec4(texture(conv2d_5_tf_raw, pos)).rgba)
[   8.551][d][vo/gpu/opengl] [115] #define conv2d_5_tf_texOff(off) conv2d_5_tf_tex(conv2d_5_tf_pos + conv2d_5_tf_pt * vec2(off))
[   8.551][d][vo/gpu/opengl] [116] #define conv2d_6_tf_raw texture6
[   8.551][d][vo/gpu/opengl] [117] #define conv2d_6_tf_pos texcoord6
[   8.551][d][vo/gpu/opengl] [118] #define conv2d_6_tf_size texture_size6
[   8.551][d][vo/gpu/opengl] [119] #define conv2d_6_tf_rot texture_rot6
[   8.551][d][vo/gpu/opengl] [120] #define conv2d_6_tf_off texture_off6
[   8.551][d][vo/gpu/opengl] [121] #define conv2d_6_tf_pt pixel_size6
[   8.551][d][vo/gpu/opengl] [122] #define conv2d_6_tf_map texmap6
[   8.551][d][vo/gpu/opengl] [123] #define conv2d_6_tf_mul 1.000000
[   8.551][d][vo/gpu/opengl] [124] #define conv2d_6_tf_tex(pos) (conv2d_6_tf_mul * vec4(texture(conv2d_6_tf_raw, pos)).rgba)
[   8.551][d][vo/gpu/opengl] [125] #define conv2d_6_tf_texOff(off) conv2d_6_tf_tex(conv2d_6_tf_pos + conv2d_6_tf_pt * vec2(off))
[   8.551][d][vo/gpu/opengl] [126] #define g_0 (max((conv2d_tf_tex(conv2d_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [127] #define g_1 (max(-(conv2d_tf_tex(conv2d_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [128] #define g_2 (max((conv2d_1_tf_tex(conv2d_1_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [129] #define g_3 (max(-(conv2d_1_tf_tex(conv2d_1_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [130] #define g_4 (max((conv2d_2_tf_tex(conv2d_2_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [131] #define g_5 (max(-(conv2d_2_tf_tex(conv2d_2_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [132] #define g_6 (max((conv2d_3_tf_tex(conv2d_3_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [133] #define g_7 (max(-(conv2d_3_tf_tex(conv2d_3_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [134] #define g_8 (max((conv2d_4_tf_tex(conv2d_4_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [135] #define g_9 (max(-(conv2d_4_tf_tex(conv2d_4_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [136] #define g_10 (max((conv2d_5_tf_tex(conv2d_5_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [137] #define g_11 (max(-(conv2d_5_tf_tex(conv2d_5_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [138] #define g_12 (max((conv2d_6_tf_tex(conv2d_6_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [139] #define g_13 (max(-(conv2d_6_tf_tex(conv2d_6_tf_pos)), 0.0))
[   8.551][d][vo/gpu/opengl] [140] vec4 hook() {
[   8.551][d][vo/gpu/opengl] [141]     vec4 result = mat4(-0.0067711817, 0.08160003, 0.0247279, 0.03084815, -0.026977416, -0.02120602, -0.025078611, -0.029852165, -0.011627478, -0.012742972, 0.022736797, -0.0028815821, -0.007515677, 0.0172887, -0.023259213, 0.009608947) * g_0;
[   8.551][d][vo/gpu/opengl] [142]     result += mat4(-0.028660107, -0.014015208, -0.027838672, -0.013171922, 0.0029435428, 0.027047642, -0.017478354, 0.022834882, -0.037572853, -0.0034044068, -0.0149029335, -0.013362301, 0.009827443, -0.015742151, -0.0074795415, -0.0022266617) * g_1;
[   8.551][d][vo/gpu/opengl] [143]     result += mat4(-0.07579662, -0.039754186, -0.066026606, -0.046816852, 0.1099032, 0.043956704, 0.073109835, 0.04680284, -0.06896613, -0.008838632, -0.044584926, -0.01319039, -0.0021152915, -0.04503326, 0.027061926, -0.028334105) * g_2;
[   8.551][d][vo/gpu/opengl] [144]     result += mat4(0.15458213, 0.059769996, 0.09327123, -0.028782733, 0.023459995, -0.15390377, -0.13432898, -0.1127775, 0.072764635, -0.0020463336, 0.034736466, -0.0012086042, -0.05847183, -0.029952323, 0.052969377, 0.09590908) * g_3;
[   8.551][d][vo/gpu/opengl] [145]     result += mat4(-0.07476772, -0.016574614, 0.04131183, 0.017335678, 0.009654406, 0.072183535, -0.002266456, 0.086873695, 9.310129e-05, 0.0056416965, -0.004188391, 0.023132093, -0.05183336, -0.025825873, -0.03684392, -0.0075729224) * g_4;
[   8.551][d][vo/gpu/opengl] [146]     result += mat4(0.00878842, 0.03869637, -0.035759524, 0.003345386, -0.064184256, -0.034568302, -0.06672922, -0.0686381, -0.06794392, -0.10685906, 0.04679947, -0.012535639, 0.006932529, -0.007783515, 0.109123886, 0.13804391) * g_5;
[   8.551][d][vo/gpu/opengl] [147]     result += mat4(-0.03160699, 0.050473, -0.09030729, 0.0649397, 0.11466501, 0.17912874, -0.0081851315, 0.052244574, 0.051632743, 0.061941486, 0.06546816, 0.12174249, -0.05104755, -0.018193979, -0.032196652, -0.035292786) * g_6;
[   8.551][d][vo/gpu/opengl] [148]     result += mat4(0.013612735, -0.0024100312, -0.068611205, -0.07369285, -0.019647537, -0.066944756, -0.010012875, -0.06785739, -0.062246565, -0.087313406, -0.044278186, -0.09368995, 0.052555013, 0.13604961, 0.05645059, 0.08763303) * g_7;
[   8.551][d][vo/gpu/opengl] [149]     result += mat4(0.04218486, -0.05028401, 0.059086576, -0.03545452, 0.027737848, 0.0043074046, 0.0011001764, -0.073026665, -0.04094988, 0.044061556, -0.009812515, 0.06841999, -0.06612581, 0.037223976, -0.07759491, -0.04356598) * g_8;
[   8.551][d][vo/gpu/opengl] [150]     result += mat4(-0.027558247, 0.014248466, -0.019813016, -0.058107473, -0.016717663, -0.020424338, 0.0053625097, -0.009917319, 0.013678771, 0.0113340765, 0.0061787106, -0.036083996, -0.020179711, -0.011310535, 0.054827053, -0.0008278952) * g_9;
[   8.551][d][vo/gpu/opengl] [151]     result += mat4(0.028690035, -0.012079616, 0.11931408, -0.048533775, 0.069336995, 0.0049852817, 0.013774468, 0.035233382, -0.07384821, 0.0003354423, -0.0059171803, -0.04503906, 0.08727279, 0.005138857, -0.17724465, 0.055782065) * g_10;
[   8.551][d][vo/gpu/opengl] [152]     result += mat4(-0.20744391, 0.24348328, -0.3145766, 0.17026486, -0.022870807, -0.01648648, -0.05912279, -0.012555373, -0.066004686, 0.03182394, 0.16285324, -0.1221846, -0.31816196, 0.007928748, 0.43180224, -0.015949022) * g_11;
[   8.551][d][vo/gpu/opengl] [153]     result += mat4(0.16363169, 0.14781676, -0.2377973, -0.1571377, -0.09038187, 0.0046504294, 0.033955004, -0.051421452, 0.046735536, 0.006827522, -0.121338, 0.12671822, 0.15833299, -0.1858712, -0.1942371, 0.17336044) * g_12;
[   8.551][d][vo/gpu/opengl] [154]     result += mat4(-0.018145572, -0.015550516, 0.044410378, 0.046016492, 0.084021375, 0.05327457, -0.008270992, -0.045435544, 0.07185879, -0.131923, 0.26721445, -0.26745328, -0.07093472, 0.042701527, 0.13793674, -0.095621444) * g_13;
[   8.551][d][vo/gpu/opengl] [155]     result += vec4(0.016836504, 0.010161949, 0.021351453, 0.01278978);
[   8.551][d][vo/gpu/opengl] [156]     return result;
[   8.551][d][vo/gpu/opengl] [157] }
[   8.551][d][vo/gpu/opengl] [158] void main() {
[   8.551][d][vo/gpu/opengl] [159] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.551][d][vo/gpu/opengl] [160] color = hook();
[   8.551][d][vo/gpu/opengl] [161] out_color = color;
[   8.551][d][vo/gpu/opengl] [162] }
[   8.552][d][vo/gpu/opengl] shader link log (status=1): 
[   8.552][d][vo/gpu] Resizing texture: 2560x1440
[   8.575][d][vo/gpu/opengl] vertex shader source:
[   8.575][d][vo/gpu/opengl] [  1] #version 440
[   8.575][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.575][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.575][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.575][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.575][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.575][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.575][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.575][d][vo/gpu/opengl] [  9] in vec2 vertex_texcoord1;
[   8.575][d][vo/gpu/opengl] [ 10] out vec2 texcoord1;
[   8.575][d][vo/gpu/opengl] [ 11] void main() {
[   8.575][d][vo/gpu/opengl] [ 12] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.575][d][vo/gpu/opengl] [ 13] texcoord0 = vertex_texcoord0;
[   8.575][d][vo/gpu/opengl] [ 14] texcoord1 = vertex_texcoord1;
[   8.575][d][vo/gpu/opengl] [ 15] }
[   8.575][d][vo/gpu/opengl] fragment shader source:
[   8.575][d][vo/gpu/opengl] [  1] #version 440
[   8.575][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.575][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.575][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.575][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.575][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.575][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.575][d][vo/gpu/opengl] [  8] in vec2 texcoord1;
[   8.575][d][vo/gpu/opengl] [  9] layout(std140, binding=0) uniform UBO {
[   8.575][d][vo/gpu/opengl] [ 10] layout(offset=0) vec2 input_size;
[   8.575][d][vo/gpu/opengl] [ 11] layout(offset=8) vec2 target_size;
[   8.575][d][vo/gpu/opengl] [ 12] layout(offset=16) vec2 tex_offset;
[   8.575][d][vo/gpu/opengl] [ 13] layout(offset=24) vec2 texture_size0;
[   8.575][d][vo/gpu/opengl] [ 14] layout(offset=32) mat2 texture_rot0;
[   8.575][d][vo/gpu/opengl] [ 15] layout(offset=64) vec2 texture_off0;
[   8.575][d][vo/gpu/opengl] [ 16] layout(offset=72) vec2 pixel_size0;
[   8.575][d][vo/gpu/opengl] [ 17] layout(offset=80) vec2 texture_size1;
[   8.575][d][vo/gpu/opengl] [ 18] layout(offset=96) mat2 texture_rot1;
[   8.575][d][vo/gpu/opengl] [ 19] layout(offset=128) vec2 texture_off1;
[   8.575][d][vo/gpu/opengl] [ 20] layout(offset=136) vec2 pixel_size1;
[   8.575][d][vo/gpu/opengl] [ 21] };
[   8.575][d][vo/gpu/opengl] [ 22] uniform float random;
[   8.575][d][vo/gpu/opengl] [ 23] uniform int frame;
[   8.575][d][vo/gpu/opengl] [ 24] uniform sampler2D texture0;
[   8.575][d][vo/gpu/opengl] [ 25] uniform sampler2D texture1;
[   8.575][d][vo/gpu/opengl] [ 26] #define MAIN_raw texture0
[   8.575][d][vo/gpu/opengl] [ 27] #define MAIN_pos texcoord0
[   8.575][d][vo/gpu/opengl] [ 28] #define MAIN_size texture_size0
[   8.575][d][vo/gpu/opengl] [ 29] #define MAIN_rot texture_rot0
[   8.575][d][vo/gpu/opengl] [ 30] #define MAIN_off texture_off0
[   8.575][d][vo/gpu/opengl] [ 31] #define MAIN_pt pixel_size0
[   8.575][d][vo/gpu/opengl] [ 32] #define MAIN_map texmap0
[   8.575][d][vo/gpu/opengl] [ 33] #define MAIN_mul 1.000000
[   8.575][d][vo/gpu/opengl] [ 34] #define MAIN_tex(pos) (MAIN_mul * vec4(texture(MAIN_raw, pos)).rgba)
[   8.576][d][vo/gpu/opengl] [ 35] #define MAIN_texOff(off) MAIN_tex(MAIN_pos + MAIN_pt * vec2(off))
[   8.576][d][vo/gpu/opengl] [ 36] #define conv2d_last_tf_raw texture1
[   8.576][d][vo/gpu/opengl] [ 37] #define conv2d_last_tf_pos texcoord1
[   8.576][d][vo/gpu/opengl] [ 38] #define conv2d_last_tf_size texture_size1
[   8.576][d][vo/gpu/opengl] [ 39] #define conv2d_last_tf_rot texture_rot1
[   8.576][d][vo/gpu/opengl] [ 40] #define conv2d_last_tf_off texture_off1
[   8.576][d][vo/gpu/opengl] [ 41] #define conv2d_last_tf_pt pixel_size1
[   8.576][d][vo/gpu/opengl] [ 42] #define conv2d_last_tf_map texmap1
[   8.576][d][vo/gpu/opengl] [ 43] #define conv2d_last_tf_mul 1.000000
[   8.576][d][vo/gpu/opengl] [ 44] #define conv2d_last_tf_tex(pos) (conv2d_last_tf_mul * vec4(texture(conv2d_last_tf_raw, pos)).rgba)
[   8.576][d][vo/gpu/opengl] [ 45] #define conv2d_last_tf_texOff(off) conv2d_last_tf_tex(conv2d_last_tf_pos + conv2d_last_tf_pt * vec2(off))
[   8.576][d][vo/gpu/opengl] [ 46] vec4 hook() {
[   8.576][d][vo/gpu/opengl] [ 47]     vec2 f0 = fract(conv2d_last_tf_pos * conv2d_last_tf_size);
[   8.576][d][vo/gpu/opengl] [ 48]     ivec2 i0 = ivec2(f0 * vec2(2.0));
[   8.576][d][vo/gpu/opengl] [ 49]     float c0 = conv2d_last_tf_tex((vec2(0.5) - f0) * conv2d_last_tf_pt + conv2d_last_tf_pos)[i0.y * 2 + i0.x];
[   8.576][d][vo/gpu/opengl] [ 50]     float c1 = c0;
[   8.576][d][vo/gpu/opengl] [ 51]     float c2 = c1;
[   8.576][d][vo/gpu/opengl] [ 52]     float c3 = c2;
[   8.576][d][vo/gpu/opengl] [ 53]     return vec4(c0, c1, c2, c3) + MAIN_tex(MAIN_pos);
[   8.576][d][vo/gpu/opengl] [ 54] }
[   8.576][d][vo/gpu/opengl] [ 55] void main() {
[   8.576][d][vo/gpu/opengl] [ 56] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.576][d][vo/gpu/opengl] [ 57] color = hook();
[   8.576][d][vo/gpu/opengl] [ 58] color.a = 1.000000;
[   8.576][d][vo/gpu/opengl] [ 59] out_color = color;
[   8.576][d][vo/gpu/opengl] [ 60] }
[   8.576][d][vo/gpu/opengl] shader link log (status=1): 
[   8.576][d][vo/gpu] Resizing texture: 1920x1080
[   8.588][d][vo/gpu/opengl] vertex shader source:
[   8.589][d][vo/gpu/opengl] [  1] #version 440
[   8.589][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.589][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.589][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.589][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.589][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.589][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.589][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.589][d][vo/gpu/opengl] [  9] in vec2 vertex_texcoord1;
[   8.589][d][vo/gpu/opengl] [ 10] out vec2 texcoord1;
[   8.589][d][vo/gpu/opengl] [ 11] void main() {
[   8.589][d][vo/gpu/opengl] [ 12] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.589][d][vo/gpu/opengl] [ 13] texcoord0 = vertex_texcoord0;
[   8.589][d][vo/gpu/opengl] [ 14] texcoord1 = vertex_texcoord1;
[   8.589][d][vo/gpu/opengl] [ 15] }
[   8.589][d][vo/gpu/opengl] fragment shader source:
[   8.589][d][vo/gpu/opengl] [  1] #version 440
[   8.589][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.589][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.589][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.589][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.589][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.589][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.589][d][vo/gpu/opengl] [  8] in vec2 texcoord1;
[   8.589][d][vo/gpu/opengl] [  9] layout(std140, binding=0) uniform UBO {
[   8.589][d][vo/gpu/opengl] [ 10] layout(offset=0) vec2 input_size;
[   8.589][d][vo/gpu/opengl] [ 11] layout(offset=8) vec2 target_size;
[   8.589][d][vo/gpu/opengl] [ 12] layout(offset=16) vec2 tex_offset;
[   8.589][d][vo/gpu/opengl] [ 13] layout(offset=24) vec2 texture_size0;
[   8.589][d][vo/gpu/opengl] [ 14] layout(offset=32) mat2 texture_rot0;
[   8.589][d][vo/gpu/opengl] [ 15] layout(offset=64) vec2 texture_off0;
[   8.589][d][vo/gpu/opengl] [ 16] layout(offset=72) vec2 pixel_size0;
[   8.589][d][vo/gpu/opengl] [ 17] layout(offset=80) vec2 texture_size1;
[   8.589][d][vo/gpu/opengl] [ 18] layout(offset=96) mat2 texture_rot1;
[   8.589][d][vo/gpu/opengl] [ 19] layout(offset=128) vec2 texture_off1;
[   8.589][d][vo/gpu/opengl] [ 20] layout(offset=136) vec2 pixel_size1;
[   8.589][d][vo/gpu/opengl] [ 21] };
[   8.589][d][vo/gpu/opengl] [ 22] uniform float random;
[   8.589][d][vo/gpu/opengl] [ 23] uniform int frame;
[   8.589][d][vo/gpu/opengl] [ 24] uniform sampler2D texture0;
[   8.589][d][vo/gpu/opengl] [ 25] uniform sampler2D texture1;
[   8.589][d][vo/gpu/opengl] [ 26] #define HOOKED_raw texture0
[   8.589][d][vo/gpu/opengl] [ 27] #define HOOKED_pos texcoord0
[   8.589][d][vo/gpu/opengl] [ 28] #define HOOKED_size texture_size0
[   8.589][d][vo/gpu/opengl] [ 29] #define HOOKED_rot texture_rot0
[   8.589][d][vo/gpu/opengl] [ 30] #define HOOKED_off texture_off0
[   8.589][d][vo/gpu/opengl] [ 31] #define HOOKED_pt pixel_size0
[   8.589][d][vo/gpu/opengl] [ 32] #define HOOKED_map texmap0
[   8.589][d][vo/gpu/opengl] [ 33] #define HOOKED_mul 1.000000
[   8.589][d][vo/gpu/opengl] [ 34] #define HOOKED_tex(pos) (HOOKED_mul * vec4(texture(HOOKED_raw, pos)).rgba)
[   8.589][d][vo/gpu/opengl] [ 35] #define HOOKED_texOff(off) HOOKED_tex(HOOKED_pos + HOOKED_pt * vec2(off))
[   8.589][d][vo/gpu/opengl] [ 36] #define MAIN_raw texture0
[   8.589][d][vo/gpu/opengl] [ 37] #define MAIN_pos texcoord0
[   8.589][d][vo/gpu/opengl] [ 38] #define MAIN_size texture_size0
[   8.589][d][vo/gpu/opengl] [ 39] #define MAIN_rot texture_rot0
[   8.589][d][vo/gpu/opengl] [ 40] #define MAIN_off texture_off0
[   8.589][d][vo/gpu/opengl] [ 41] #define MAIN_pt pixel_size0
[   8.589][d][vo/gpu/opengl] [ 42] #define MAIN_map texmap0
[   8.589][d][vo/gpu/opengl] [ 43] #define MAIN_mul 1.000000
[   8.589][d][vo/gpu/opengl] [ 44] #define MAIN_tex(pos) (MAIN_mul * vec4(texture(MAIN_raw, pos)).rgba)
[   8.589][d][vo/gpu/opengl] [ 45] #define MAIN_texOff(off) MAIN_tex(MAIN_pos + MAIN_pt * vec2(off))
[   8.589][d][vo/gpu/opengl] [ 46] #define NATIVE_raw texture1
[   8.589][d][vo/gpu/opengl] [ 47] #define NATIVE_pos texcoord1
[   8.589][d][vo/gpu/opengl] [ 48] #define NATIVE_size texture_size1
[   8.589][d][vo/gpu/opengl] [ 49] #define NATIVE_rot texture_rot1
[   8.589][d][vo/gpu/opengl] [ 50] #define NATIVE_off texture_off1
[   8.589][d][vo/gpu/opengl] [ 51] #define NATIVE_pt pixel_size1
[   8.589][d][vo/gpu/opengl] [ 52] #define NATIVE_map texmap1
[   8.589][d][vo/gpu/opengl] [ 53] #define NATIVE_mul 1.000000
[   8.589][d][vo/gpu/opengl] [ 54] #define NATIVE_tex(pos) (NATIVE_mul * vec4(texture(NATIVE_raw, pos)).rgba)
[   8.589][d][vo/gpu/opengl] [ 55] #define NATIVE_texOff(off) NATIVE_tex(NATIVE_pos + NATIVE_pt * vec2(off))
[   8.589][d][vo/gpu/opengl] [ 56] 
[   8.589][d][vo/gpu/opengl] [ 57] vec4 hook() {
[   8.589][d][vo/gpu/opengl] [ 58] 	return HOOKED_tex(HOOKED_pos);
[   8.589][d][vo/gpu/opengl] [ 59] }
[   8.589][d][vo/gpu/opengl] [ 60] void main() {
[   8.589][d][vo/gpu/opengl] [ 61] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.589][d][vo/gpu/opengl] [ 62] color = hook();
[   8.589][d][vo/gpu/opengl] [ 63] color.a = 1.000000;
[   8.589][d][vo/gpu/opengl] [ 64] out_color = color;
[   8.589][d][vo/gpu/opengl] [ 65] }
[   8.589][d][vo/gpu/opengl] shader link log (status=1): 
[   8.589][d][vo/gpu] Resizing texture: 1920x1080
[   8.594][d][vo/gpu/opengl] vertex shader source:
[   8.594][d][vo/gpu/opengl] [  1] #version 440
[   8.594][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.594][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.594][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.594][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.594][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.594][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.594][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.594][d][vo/gpu/opengl] [  9] void main() {
[   8.594][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.594][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.594][d][vo/gpu/opengl] [ 12] }
[   8.594][d][vo/gpu/opengl] fragment shader source:
[   8.594][d][vo/gpu/opengl] [  1] #version 440
[   8.594][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.594][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.594][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.594][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.594][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.594][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.594][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.594][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 texture_size0;
[   8.594][d][vo/gpu/opengl] [ 10] layout(offset=16) mat2 texture_rot0;
[   8.594][d][vo/gpu/opengl] [ 11] layout(offset=48) vec2 texture_off0;
[   8.594][d][vo/gpu/opengl] [ 12] layout(offset=56) vec2 pixel_size0;
[   8.594][d][vo/gpu/opengl] [ 13] };
[   8.594][d][vo/gpu/opengl] [ 14] uniform sampler2D texture0;
[   8.594][d][vo/gpu/opengl] [ 15] void main() {
[   8.594][d][vo/gpu/opengl] [ 16] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.594][d][vo/gpu/opengl] [ 17] color.rgb = 1.000000 * vec4(texture(texture0, texcoord0)).rgb;
[   8.594][d][vo/gpu/opengl] [ 18] // scaler pre-conversion
[   8.594][d][vo/gpu/opengl] [ 19] out_color = color;
[   8.594][d][vo/gpu/opengl] [ 20] }
[   8.594][d][vo/gpu/opengl] shader link log (status=1): 
[   8.594][d][vo/gpu] Resizing texture: 1920x1080
[   8.599][d][vo/gpu/opengl] vertex shader source:
[   8.599][d][vo/gpu/opengl] [  1] #version 440
[   8.599][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.599][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.599][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.599][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.599][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.599][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.599][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.599][d][vo/gpu/opengl] [  9] in vec2 vertex_texcoord1;
[   8.599][d][vo/gpu/opengl] [ 10] out vec2 texcoord1;
[   8.599][d][vo/gpu/opengl] [ 11] void main() {
[   8.599][d][vo/gpu/opengl] [ 12] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.599][d][vo/gpu/opengl] [ 13] texcoord0 = vertex_texcoord0;
[   8.599][d][vo/gpu/opengl] [ 14] texcoord1 = vertex_texcoord1;
[   8.599][d][vo/gpu/opengl] [ 15] }
[   8.599][d][vo/gpu/opengl] fragment shader source:
[   8.599][d][vo/gpu/opengl] [  1] #version 440
[   8.599][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.599][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.599][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.599][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.599][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.599][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.599][d][vo/gpu/opengl] [  8] in vec2 texcoord1;
[   8.599][d][vo/gpu/opengl] [  9] layout(std140, binding=0) uniform UBO {
[   8.599][d][vo/gpu/opengl] [ 10] layout(offset=0) vec2 input_size;
[   8.599][d][vo/gpu/opengl] [ 11] layout(offset=8) vec2 target_size;
[   8.599][d][vo/gpu/opengl] [ 12] layout(offset=16) vec2 tex_offset;
[   8.599][d][vo/gpu/opengl] [ 13] layout(offset=24) vec2 texture_size0;
[   8.599][d][vo/gpu/opengl] [ 14] layout(offset=32) mat2 texture_rot0;
[   8.599][d][vo/gpu/opengl] [ 15] layout(offset=64) vec2 texture_off0;
[   8.599][d][vo/gpu/opengl] [ 16] layout(offset=72) vec2 pixel_size0;
[   8.599][d][vo/gpu/opengl] [ 17] layout(offset=80) vec2 texture_size1;
[   8.599][d][vo/gpu/opengl] [ 18] layout(offset=96) mat2 texture_rot1;
[   8.599][d][vo/gpu/opengl] [ 19] layout(offset=128) vec2 texture_off1;
[   8.599][d][vo/gpu/opengl] [ 20] layout(offset=136) vec2 pixel_size1;
[   8.599][d][vo/gpu/opengl] [ 21] };
[   8.599][d][vo/gpu/opengl] [ 22] uniform float random;
[   8.599][d][vo/gpu/opengl] [ 23] uniform int frame;
[   8.599][d][vo/gpu/opengl] [ 24] uniform sampler2D texture0;
[   8.599][d][vo/gpu/opengl] [ 25] uniform sampler2D texture1;
[   8.599][d][vo/gpu/opengl] [ 26] #define HOOKED_raw texture0
[   8.599][d][vo/gpu/opengl] [ 27] #define HOOKED_pos texcoord0
[   8.599][d][vo/gpu/opengl] [ 28] #define HOOKED_size texture_size0
[   8.599][d][vo/gpu/opengl] [ 29] #define HOOKED_rot texture_rot0
[   8.599][d][vo/gpu/opengl] [ 30] #define HOOKED_off texture_off0
[   8.599][d][vo/gpu/opengl] [ 31] #define HOOKED_pt pixel_size0
[   8.599][d][vo/gpu/opengl] [ 32] #define HOOKED_map texmap0
[   8.599][d][vo/gpu/opengl] [ 33] #define HOOKED_mul 1.000000
[   8.599][d][vo/gpu/opengl] [ 34] #define HOOKED_tex(pos) (HOOKED_mul * vec4(texture(HOOKED_raw, pos)).rgba)
[   8.599][d][vo/gpu/opengl] [ 35] #define HOOKED_texOff(off) HOOKED_tex(HOOKED_pos + HOOKED_pt * vec2(off))
[   8.599][d][vo/gpu/opengl] [ 36] #define PREKERNEL_raw texture0
[   8.599][d][vo/gpu/opengl] [ 37] #define PREKERNEL_pos texcoord0
[   8.599][d][vo/gpu/opengl] [ 38] #define PREKERNEL_size texture_size0
[   8.599][d][vo/gpu/opengl] [ 39] #define PREKERNEL_rot texture_rot0
[   8.599][d][vo/gpu/opengl] [ 40] #define PREKERNEL_off texture_off0
[   8.599][d][vo/gpu/opengl] [ 41] #define PREKERNEL_pt pixel_size0
[   8.599][d][vo/gpu/opengl] [ 42] #define PREKERNEL_map texmap0
[   8.599][d][vo/gpu/opengl] [ 43] #define PREKERNEL_mul 1.000000
[   8.599][d][vo/gpu/opengl] [ 44] #define PREKERNEL_tex(pos) (PREKERNEL_mul * vec4(texture(PREKERNEL_raw, pos)).rgba)
[   8.599][d][vo/gpu/opengl] [ 45] #define PREKERNEL_texOff(off) PREKERNEL_tex(PREKERNEL_pos + PREKERNEL_pt * vec2(off))
[   8.599][d][vo/gpu/opengl] [ 46] #define STATSMAX_raw texture1
[   8.599][d][vo/gpu/opengl] [ 47] #define STATSMAX_pos texcoord1
[   8.599][d][vo/gpu/opengl] [ 48] #define STATSMAX_size texture_size1
[   8.599][d][vo/gpu/opengl] [ 49] #define STATSMAX_rot texture_rot1
[   8.599][d][vo/gpu/opengl] [ 50] #define STATSMAX_off texture_off1
[   8.599][d][vo/gpu/opengl] [ 51] #define STATSMAX_pt pixel_size1
[   8.600][d][vo/gpu/opengl] [ 52] #define STATSMAX_map texmap1
[   8.600][d][vo/gpu/opengl] [ 53] #define STATSMAX_mul 1.000000
[   8.600][d][vo/gpu/opengl] [ 54] #define STATSMAX_tex(pos) (STATSMAX_mul * vec4(texture(STATSMAX_raw, pos)).rgba)
[   8.600][d][vo/gpu/opengl] [ 55] #define STATSMAX_texOff(off) STATSMAX_tex(STATSMAX_pos + STATSMAX_pt * vec2(off))
[   8.600][d][vo/gpu/opengl] [ 56] 
[   8.600][d][vo/gpu/opengl] [ 57] float get_luma(vec4 rgba) {
[   8.600][d][vo/gpu/opengl] [ 58] 	return dot(vec4(0.299, 0.587, 0.114, 0.0), rgba);
[   8.600][d][vo/gpu/opengl] [ 59] }
[   8.600][d][vo/gpu/opengl] [ 60] 
[   8.600][d][vo/gpu/opengl] [ 61] vec4 hook() {
[   8.600][d][vo/gpu/opengl] [ 62] 
[   8.600][d][vo/gpu/opengl] [ 63] 	float current_luma = get_luma(HOOKED_tex(HOOKED_pos));
[   8.600][d][vo/gpu/opengl] [ 64] 	float new_luma = min(current_luma, STATSMAX_tex(HOOKED_pos).x);
[   8.600][d][vo/gpu/opengl] [ 65] 	
[   8.600][d][vo/gpu/opengl] [ 66] 	//This trick is only possible if the inverse Y->RGB matrix has 1 for every row... (which is the case for BT.709)
[   8.600][d][vo/gpu/opengl] [ 67] 	//Otherwise we would need to convert RGB to YUV, modify Y then convert back to RGB.
[   8.600][d][vo/gpu/opengl] [ 68]     return HOOKED_tex(HOOKED_pos) - (current_luma - new_luma); 
[   8.600][d][vo/gpu/opengl] [ 69] }void main() {
[   8.600][d][vo/gpu/opengl] [ 70] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.600][d][vo/gpu/opengl] [ 71] color = hook();
[   8.600][d][vo/gpu/opengl] [ 72] color.a = 1.000000;
[   8.600][d][vo/gpu/opengl] [ 73] out_color = color;
[   8.600][d][vo/gpu/opengl] [ 74] }
[   8.600][d][vo/gpu/opengl] shader link log (status=1): 
[   8.600][d][vo/gpu] Resizing texture: 1920x1080
[   8.605][d][vo/gpu/opengl] vertex shader source:
[   8.605][d][vo/gpu/opengl] [  1] #version 440
[   8.605][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.605][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.605][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.605][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.605][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.605][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.605][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.605][d][vo/gpu/opengl] [  9] void main() {
[   8.605][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.605][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.605][d][vo/gpu/opengl] [ 12] }
[   8.605][d][vo/gpu/opengl] fragment shader source:
[   8.605][d][vo/gpu/opengl] [  1] #version 440
[   8.605][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.605][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.605][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.605][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.605][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.605][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.605][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.605][d][vo/gpu/opengl] [  9] layout(offset=0) vec2 texture_size0;
[   8.605][d][vo/gpu/opengl] [ 10] layout(offset=16) mat2 texture_rot0;
[   8.605][d][vo/gpu/opengl] [ 11] layout(offset=48) vec2 texture_off0;
[   8.605][d][vo/gpu/opengl] [ 12] layout(offset=56) vec2 pixel_size0;
[   8.605][d][vo/gpu/opengl] [ 13] };
[   8.605][d][vo/gpu/opengl] [ 14] uniform sampler2D texture0;
[   8.605][d][vo/gpu/opengl] [ 15] void main() {
[   8.605][d][vo/gpu/opengl] [ 16] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.605][d][vo/gpu/opengl] [ 17] color.rgb = 1.000000 * vec4(texture(texture0, texcoord0)).rgb;
[   8.605][d][vo/gpu/opengl] [ 18] // main scaling
[   8.605][d][vo/gpu/opengl] [ 19] out_color = color;
[   8.605][d][vo/gpu/opengl] [ 20] }
[   8.605][d][vo/gpu/opengl] shader link log (status=1): 
[   8.606][d][vo/gpu/opengl] vertex shader source:
[   8.606][d][vo/gpu/opengl] [  1] #version 440
[   8.606][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.606][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.606][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.606][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.606][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.606][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.606][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.606][d][vo/gpu/opengl] [  9] void main() {
[   8.606][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.606][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.606][d][vo/gpu/opengl] [ 12] }
[   8.606][d][vo/gpu/opengl] fragment shader source:
[   8.606][d][vo/gpu/opengl] [  1] #version 440
[   8.606][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.606][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.606][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.606][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.606][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.606][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.606][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.606][d][vo/gpu/opengl] [  9] layout(offset=0) vec3 src_luma;
[   8.606][d][vo/gpu/opengl] [ 10] layout(offset=16) vec3 dst_luma;
[   8.606][d][vo/gpu/opengl] [ 11] layout(offset=32) vec2 texture_size0;
[   8.606][d][vo/gpu/opengl] [ 12] layout(offset=48) mat2 texture_rot0;
[   8.606][d][vo/gpu/opengl] [ 13] layout(offset=80) vec2 texture_off0;
[   8.606][d][vo/gpu/opengl] [ 14] layout(offset=88) vec2 pixel_size0;
[   8.606][d][vo/gpu/opengl] [ 15] };
[   8.606][d][vo/gpu/opengl] [ 16] uniform sampler2D texture0;
[   8.606][d][vo/gpu/opengl] [ 17] void main() {
[   8.606][d][vo/gpu/opengl] [ 18] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.606][d][vo/gpu/opengl] [ 19] #undef tex
[   8.606][d][vo/gpu/opengl] [ 20] #undef texmap
[   8.606][d][vo/gpu/opengl] [ 21] #define tex texture0
[   8.606][d][vo/gpu/opengl] [ 22] #define texmap texmap0
[   8.606][d][vo/gpu/opengl] [ 23] vec2 pos = texcoord0;
[   8.606][d][vo/gpu/opengl] [ 24] vec2 size = texture_size0;
[   8.606][d][vo/gpu/opengl] [ 25] vec2 pt = pixel_size0;
[   8.606][d][vo/gpu/opengl] [ 26] color = texture(tex, pos);
[   8.606][d][vo/gpu/opengl] [ 27] color *= 1.000000;
[   8.606][d][vo/gpu/opengl] [ 28] color.a = 1.000000;
[   8.606][d][vo/gpu/opengl] [ 29] // scaler post-conversion
[   8.606][d][vo/gpu/opengl] [ 30] // color mapping
[   8.606][d][vo/gpu/opengl] [ 31] color.rgb *= vec3(1.000000);
[   8.606][d][vo/gpu/opengl] [ 32] color.rgb *= vec3(1.000000);
[   8.606][d][vo/gpu/opengl] [ 33] out_color = color;
[   8.606][d][vo/gpu/opengl] [ 34] }
[   8.606][d][vo/gpu/opengl] shader link log (status=1): 
[   8.626][v][cplayer] first video frame after restart shown
[   8.631][d][vo/gpu] Resizing texture: 1920x1080
[   8.637][d][vo/gpu/opengl] vertex shader source:
[   8.637][d][vo/gpu/opengl] [  1] #version 440
[   8.637][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.637][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.637][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.637][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.637][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   8.637][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord0;
[   8.637][d][vo/gpu/opengl] [  8] out vec2 texcoord0;
[   8.637][d][vo/gpu/opengl] [  9] void main() {
[   8.637][d][vo/gpu/opengl] [ 10] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   8.637][d][vo/gpu/opengl] [ 11] texcoord0 = vertex_texcoord0;
[   8.637][d][vo/gpu/opengl] [ 12] }
[   8.637][d][vo/gpu/opengl] fragment shader source:
[   8.637][d][vo/gpu/opengl] [  1] #version 440
[   8.637][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   8.637][d][vo/gpu/opengl] [  3] #define tex1D texture
[   8.637][d][vo/gpu/opengl] [  4] #define tex3D texture
[   8.637][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   8.637][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   8.637][d][vo/gpu/opengl] [  7] in vec2 texcoord0;
[   8.637][d][vo/gpu/opengl] [  8] layout(std140, binding=0) uniform UBO {
[   8.637][d][vo/gpu/opengl] [  9] layout(offset=0) vec3 src_luma;
[   8.637][d][vo/gpu/opengl] [ 10] layout(offset=16) vec3 dst_luma;
[   8.637][d][vo/gpu/opengl] [ 11] layout(offset=32) vec2 texture_size0;
[   8.637][d][vo/gpu/opengl] [ 12] layout(offset=48) mat2 texture_rot0;
[   8.637][d][vo/gpu/opengl] [ 13] layout(offset=80) vec2 texture_off0;
[   8.637][d][vo/gpu/opengl] [ 14] layout(offset=88) vec2 pixel_size0;
[   8.637][d][vo/gpu/opengl] [ 15] };
[   8.637][d][vo/gpu/opengl] [ 16] uniform sampler2D texture0;
[   8.637][d][vo/gpu/opengl] [ 17] void main() {
[   8.637][d][vo/gpu/opengl] [ 18] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   8.637][d][vo/gpu/opengl] [ 19] #undef tex
[   8.637][d][vo/gpu/opengl] [ 20] #undef texmap
[   8.637][d][vo/gpu/opengl] [ 21] #define tex texture0
[   8.637][d][vo/gpu/opengl] [ 22] #define texmap texmap0
[   8.638][d][vo/gpu/opengl] [ 23] vec2 pos = texcoord0;
[   8.638][d][vo/gpu/opengl] [ 24] vec2 size = texture_size0;
[   8.638][d][vo/gpu/opengl] [ 25] vec2 pt = pixel_size0;
[   8.638][d][vo/gpu/opengl] [ 26] color = texture(tex, pos);
[   8.638][d][vo/gpu/opengl] [ 27] color *= 1.000000;
[   8.638][d][vo/gpu/opengl] [ 28] color.a = 1.000000;
[   8.638][d][vo/gpu/opengl] [ 29] // scaler post-conversion
[   8.638][d][vo/gpu/opengl] [ 30] // color mapping
[   8.638][d][vo/gpu/opengl] [ 31] color.rgb *= vec3(1.000000);
[   8.638][d][vo/gpu/opengl] [ 32] color.rgb *= vec3(1.000000);
[   8.638][d][vo/gpu/opengl] [ 33] out_color = color;
[   8.638][d][vo/gpu/opengl] [ 34] }
[   8.638][d][vo/gpu/opengl] shader link log (status=1): 
[   8.655][v][vo/gpu/wayland] Given DND offer with mime type text/plain;charset=utf-8
[   8.655][v][vo/gpu/wayland] Surface entered output AUO 0x2992 (0x4), scale = 1
[   8.655][v][vo/gpu] Assuming 60.201000 FPS for display sync.
[   8.655][v][cplayer] audio ready
[   8.655][d][osc] osc_init 
[   8.655][d][cplayer] starting video playback
[   8.655][v][cplayer] starting audio playback
[   8.655][i][term-msg] 
[   8.655][i][term-msg] 	Title: Taylor Swift Jerk Off Challenge March 2023
[   8.655][i][term-msg] 
[   8.655][v][cplayer] playback restart complete @ 182.666000, audio=playing, video=playing
[   8.655][v][ao/pulse] starting AO
[   8.658][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   8.659][v][cplayer] Set property: shared-script-properties -> 1
[   8.659][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   8.659][d][osc] osc_init 
[   8.659][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   8.660][v][cplayer] Set property: shared-script-properties -> 1
[   8.660][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   8.691][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   8.734][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   8.768][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   8.877][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.016][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.065][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.096][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.126][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.157][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.188][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.218][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.249][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.280][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.310][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.341][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.371][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.402][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.433][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.466][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[   9.496][d][cplayer] Run command: script-binding, flags=73, args=[name="osc/__keybinding4"]
[   9.527][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[   9.527][v][cplayer] Set property: shared-script-properties -> 1
[   9.527][d][cplayer] Run command: enable-section, flags=64, args=[name="input", flags=""]
[   9.527][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.542][v][osd/libass] fontselect: (sans-serif, 400, 0) -> /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf, 0, DejaVuSans
[   9.543][v][osd/libass] fontselect: (mpv-osd-symbols, 400, 0) -> mpv-osd-symbols-Regular, 0, mpv-osd-symbols-Regular
[   9.547][v][vo/gpu] Reallocating OSD texture to 2048x512.
[   9.550][d][vo/gpu/opengl] vertex shader source:
[   9.551][d][vo/gpu/opengl] [  1] #version 440
[   9.551][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   9.551][d][vo/gpu/opengl] [  3] #define tex1D texture
[   9.551][d][vo/gpu/opengl] [  4] #define tex3D texture
[   9.551][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   9.551][d][vo/gpu/opengl] [  6] in vec2 vertex_position;
[   9.551][d][vo/gpu/opengl] [  7] in vec2 vertex_texcoord;
[   9.551][d][vo/gpu/opengl] [  8] out vec2 texcoord;
[   9.551][d][vo/gpu/opengl] [  9] in vec4 vertex_ass_color;
[   9.551][d][vo/gpu/opengl] [ 10] out vec4 ass_color;
[   9.551][d][vo/gpu/opengl] [ 11] void main() {
[   9.551][d][vo/gpu/opengl] [ 12] gl_Position = vec4(vertex_position, 1.0, 1.0);
[   9.551][d][vo/gpu/opengl] [ 13] texcoord = vertex_texcoord;
[   9.551][d][vo/gpu/opengl] [ 14] ass_color = vertex_ass_color;
[   9.551][d][vo/gpu/opengl] [ 15] }
[   9.551][d][vo/gpu/opengl] fragment shader source:
[   9.551][d][vo/gpu/opengl] [  1] #version 440
[   9.551][d][vo/gpu/opengl] [  2] #extension GL_ARB_shader_image_load_store : enable
[   9.551][d][vo/gpu/opengl] [  3] #define tex1D texture
[   9.551][d][vo/gpu/opengl] [  4] #define tex3D texture
[   9.551][d][vo/gpu/opengl] [  5] #define LUT_POS(x, lut_size) mix(0.5 / (lut_size), 1.0 - 0.5 / (lut_size), (x))
[   9.551][d][vo/gpu/opengl] [  6] out vec4 out_color;
[   9.551][d][vo/gpu/opengl] [  7] in vec2 texcoord;
[   9.551][d][vo/gpu/opengl] [  8] in vec4 ass_color;
[   9.551][d][vo/gpu/opengl] [  9] layout(std140, binding=0) uniform UBO {
[   9.551][d][vo/gpu/opengl] [ 10] layout(offset=0) vec3 src_luma;
[   9.551][d][vo/gpu/opengl] [ 11] layout(offset=16) vec3 dst_luma;
[   9.551][d][vo/gpu/opengl] [ 12] };
[   9.551][d][vo/gpu/opengl] [ 13] uniform sampler2D osdtex;
[   9.551][d][vo/gpu/opengl] [ 14] void main() {
[   9.551][d][vo/gpu/opengl] [ 15] vec4 color = vec4(0.0, 0.0, 0.0, 1.0);
[   9.551][d][vo/gpu/opengl] [ 16] color = vec4(ass_color.rgb, ass_color.a * texture(osdtex, texcoord).r);
[   9.551][d][vo/gpu/opengl] [ 17] // color mapping
[   9.551][d][vo/gpu/opengl] [ 18] color.rgb *= vec3(1.000000);
[   9.551][d][vo/gpu/opengl] [ 19] color.rgb *= vec3(1.000000);
[   9.551][d][vo/gpu/opengl] [ 20] out_color = color;
[   9.551][d][vo/gpu/opengl] [ 21] }
[   9.551][d][vo/gpu/opengl] shader link log (status=1): 
[   9.558][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.590][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.621][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.652][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.684][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.715][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.746][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.777][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.810][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.841][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.872][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.903][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.935][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.967][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[   9.999][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.030][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.063][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.099][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.133][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.163][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.195][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.229][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.260][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.292][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.323][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.356][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.387][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.428][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.459][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.491][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.530][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.559][d][cplayer] Run command: script-binding, flags=73, args=[name="osc/__keybinding5"]
[  10.560][d][cplayer] Run command: seek, flags=64, args=[target="35.849057", flags="absolute-percent", legacy="exact"]
[  10.560][v][timeline] queuing seek to 172.083000
[  10.561][v][cplayer] hr-seek, skipping to 172.083000
[  10.562][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.563][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.594][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.595][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.625][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.626][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.656][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.657][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.678][v][timeline] execute seek (to 172.083000 flags 32)
[  10.678][v][timeline] switch to segment 0
[  10.678][v][mkv] queuing seek to 172.083000
[  10.678][v][mkv] execute seek (to 172.083000 flags 32)
[  10.678][v][ffmpeg] stream level seek from 8192260 to 7208848
[  10.687][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.688][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.695][d][ffmpeg] tcp: Starting connection attempt to 2405:200:1630:b1b::d port 443
[  10.701][d][ffmpeg] tcp: Successfully connected to 2405:200:1630:b1b::d port 443
[  10.717][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.719][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.737][d][cplayer] Run command: script-binding, flags=73, args=[name="osc/__keybinding5"]
[  10.747][v][mkv] seek done
[  10.748][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.796][v][timeline] adjust seek target from 172.083000 to 170.667000
[  10.796][v][timeline] switch to segment 0
[  10.796][v][mkv] queuing seek to 170.667000
[  10.796][v][mkv] execute seek (to 170.667000 flags 32)
[  10.796][v][ffmpeg] stream level seek from 3289719 to 3002170
[  10.811][d][ffmpeg] tcp: Starting connection attempt to 2405:200:1630:b1b::d port 443
[  10.817][d][ffmpeg] tcp: Successfully connected to 2405:200:1630:b1b::d port 443
[  10.862][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.893][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  10.928][v][mkv] seek done
[  10.928][v][timeline] seek done
[  10.928][d][timeline] stream 1: resize index to 128
[  10.929][v][vd] Decoder format: 1280x720 [0:1] vaapi[nv12] bt.709/auto/auto/limited/auto CL=unknown
[  10.929][v][vd] Using container aspect ratio.
[  11.129][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.379][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.547][v][cplayer] first video frame after restart shown
[  11.629][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.712][v][cplayer] audio ready
[  11.712][d][cplayer] starting video playback
[  11.712][v][cplayer] starting audio playback
[  11.712][v][cplayer] playback restart complete @ 172.100000, audio=playing, video=playing
[  11.712][v][ao/pulse] starting AO
[  11.735][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.766][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.799][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.830][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.863][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.894][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.927][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.959][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  11.992][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.024][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.058][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.090][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.122][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.152][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.184][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.215][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.246][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.277][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.308][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.339][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.372][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.405][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.437][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.469][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.500][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.538][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.576][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.619][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.650][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.681][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.712][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.747][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.781][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.813][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.844][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.872][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.875][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.904][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.906][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.935][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.938][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.968][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  12.970][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.000][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.002][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.032][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.033][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.063][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.064][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.094][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[  13.094][v][cplayer] Set property: shared-script-properties -> 1
[  13.094][d][cplayer] Run command: disable-section, flags=64, args=[name="input"]
[  13.094][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.096][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.130][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.165][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.203][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.234][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.264][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.305][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.340][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.373][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.403][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.434][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  13.479][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[  13.479][v][cplayer] Set property: shared-script-properties -> 1
[  13.480][d][cplayer] Run command: enable-section, flags=64, args=[name="input", flags=""]
[  13.480][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.512][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.544][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.576][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.607][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.639][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.670][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.702][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.734][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.740][d][timeline] stream 0: resize index to 128
[  13.765][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.796][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.827][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.858][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.891][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.923][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.955][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  13.990][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.025][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.059][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.092][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.123][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.154][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.186][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.218][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.250][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.288][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.320][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.353][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.385][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.418][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.451][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.483][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.515][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.547][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.578][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.621][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.653][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.686][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.719][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.755][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.786][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.817][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.881][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.951][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  14.982][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.013][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.055][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.091][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.131][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.162][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.194][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.226][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.261][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.294][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.327][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.359][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.391][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.432][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.452][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.484][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.525][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.567][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.602][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.634][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.665][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.697][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.737][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.774][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.809][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.841][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.873][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.905][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.936][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  15.968][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.001][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.033][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.069][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.101][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.132][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.164][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.196][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.229][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.261][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.294][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.326][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.359][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.393][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.425][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.459][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.495][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.527][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.558][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.592][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.633][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.664][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.696][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.726][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.761][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.801][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.832][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.867][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.888][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.898][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.922][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.929][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.954][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.960][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.985][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  16.991][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  17.016][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  17.021][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  17.049][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  17.052][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  17.081][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  17.083][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  17.113][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[  17.113][v][cplayer] Set property: shared-script-properties -> 1
[  17.114][d][cplayer] Run command: disable-section, flags=64, args=[name="input"]
[  17.114][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.115][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.146][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.176][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.207][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.237][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.273][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.311][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.342][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.373][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.404][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.434][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.465][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.496][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.526][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.562][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.592][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.623][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.653][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.684][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.715][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.746][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.786][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.828][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.864][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.895][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.925][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.957][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  17.961][d][cplayer] Run command: seek, flags=73, args=[target="5.000000", flags="relative", legacy="unused"]
[  17.961][v][timeline] queuing seek to 183.300000
[  17.961][v][timeline] cached range 0: 170.667000 <-> 181.300000 (bof=0, eof=0)
[  17.981][v][timeline] execute seek (to 183.300000 flags 4)
[  17.981][v][timeline] switch to segment 0
[  17.981][v][mkv] queuing seek to 183.300000
[  17.981][v][mkv] execute seek (to 183.300000 flags 4)
[  17.981][v][ffmpeg] stream level seek from 8028048 to 8181288
[  17.988][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  18.133][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  18.134][d][global] config path: 'fonts' -/-> '/home/shobhit/.config/mpv/fonts'
[  18.134][d][global] config path: 'fonts' -/-> '/home/shobhit/.mpv/fonts'
[  18.134][d][global] config path: 'fonts' -/-> '/etc/mpv/fonts'
[  18.134][d][osd/libass] ASS library version: 0x1502000 (runtime 0x1502000)
[  18.134][v][osd/libass] libass API version: 0x1502000
[  18.134][v][osd/libass] libass source: tarball: 0.15.2
[  18.134][v][osd/libass] Shaper: FriBidi 1.0.8 (SIMPLE) HarfBuzz-ng 2.7.4 (COMPLEX)
[  18.134][d][global] config path: 'subfont.ttf' -/-> '/home/shobhit/.config/mpv/subfont.ttf'
[  18.134][d][global] config path: 'subfont.ttf' -/-> '/home/shobhit/.mpv/subfont.ttf'
[  18.134][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[  18.134][d][global] config path: 'fonts.conf' -/-> '/home/shobhit/.config/mpv/fonts.conf'
[  18.134][d][global] config path: 'fonts.conf' -/-> '/home/shobhit/.mpv/fonts.conf'
[  18.134][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[  18.134][v][osd/libass] Setting up fonts...
[  18.151][v][osd/libass] Using font provider fontconfig
[  18.151][v][osd/libass] Done.
[  18.152][v][osd/libass] fontselect: (sans-serif, 400, 0) -> /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf, 0, DejaVuSans
[  18.153][v][vo/gpu] Reallocating OSD texture to 2048x128.
[  19.439][v][mkv] seek done
[  19.567][v][timeline] adjust seek target from 183.300000 to 186.667000
[  19.567][v][timeline] switch to segment 0
[  19.567][v][mkv] queuing seek to 186.667000
[  19.567][v][mkv] execute seek (to 186.667000 flags 32)
[  19.567][v][mkv] seek done
[  19.567][v][timeline] seek done
[  19.567][d][timeline] stream 1: resize index to 128
[  19.568][v][vd] Decoder format: 1280x720 [0:1] vaapi[nv12] bt.709/auto/auto/limited/auto CL=unknown
[  19.569][v][vd] Using container aspect ratio.
[  19.575][v][cplayer] first video frame after restart shown
[  19.607][v][cplayer] audio ready
[  19.607][d][cplayer] starting video playback
[  19.607][v][cplayer] starting audio playback
[  19.607][v][cplayer] playback restart complete @ 186.667000, audio=playing, video=playing
[  19.607][v][ao/pulse] starting AO
[  19.619][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  19.649][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  19.658][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[  19.658][v][cplayer] Set property: shared-script-properties -> 1
[  19.680][d][cplayer] Run command: enable-section, flags=64, args=[name="input", flags=""]
[  19.680][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.713][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.744][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.775][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.807][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.838][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.870][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.901][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.933][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.965][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  19.998][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.030][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.061][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.093][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.124][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.155][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.186][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.218][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.251][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.282][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.314][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.345][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.377][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.409][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.441][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.475][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.517][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.551][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.583][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.615][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.647][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.686][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.721][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.753][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.784][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.815][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.858][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.889][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.929][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  20.970][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.002][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.034][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.046][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.065][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.077][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.096][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.110][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.129][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.141][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.160][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.172][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.191][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.203][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.223][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.235][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.256][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  21.267][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[  21.267][v][cplayer] Set property: shared-script-properties -> 1
[  21.268][d][cplayer] Run command: disable-section, flags=64, args=[name="input"]
[  21.268][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.288][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.319][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.350][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.380][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.410][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.441][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.472][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.504][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.535][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.565][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.596][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.627][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.657][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.694][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.724][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.755][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.797][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.832][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.866][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.897][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.927][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  21.968][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  22.007][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  22.039][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  22.070][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  22.100][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  22.141][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  22.142][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[  22.142][v][cplayer] Set property: shared-script-properties -> 1
[  22.172][d][cplayer] Run command: enable-section, flags=64, args=[name="input", flags=""]
[  22.172][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.204][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.235][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.266][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.296][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.320][d][timeline] stream 0: resize index to 128
[  22.328][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.359][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.391][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.426][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.458][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.491][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.523][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.556][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.588][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.622][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.654][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.687][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.724][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.757][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.789][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.821][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.859][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.891][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.930][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.962][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.978][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  22.994][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.010][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.025][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.043][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.057][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.077][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.090][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.109][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.121][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.140][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.152][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.170][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.183][d][cplayer] Run command: enable-section, flags=64, args=[name="window-controls", flags=""]
[  23.201][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="append", value="osc-margins=0.000000,0.000000,0.000000,0.000000"]
[  23.201][v][cplayer] Set property: shared-script-properties -> 1
[  23.202][d][cplayer] Run command: disable-section, flags=64, args=[name="input"]
[  23.202][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  23.214][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  23.245][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  23.276][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  23.306][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  23.336][d][cplayer] Run command: quit, flags=73, args=[code="0"]
[  23.337][d][global] config path: '/home/shobhit/.config/mpv/watch_later' -> '/home/shobhit/.config/mpv/watch_later'
[  23.337][i][cplayer] Saving state.
[  23.338][v][cplayer] EOF code: 5  
[  23.340][d][ad] Uninit decoder.
[  23.340][d][vd] Uninit decoder.
[  23.341][d][cplayer] Terminating demuxers...
[  23.341][d][cplayer] Run command: disable-section, flags=64, args=[name="window-controls"]
[  23.361][d][ffmpeg] AVIOContext: Statistics: 1867824 bytes read, 2 seeks
[  23.364][d][ffmpeg] AVIOContext: Statistics: 540672 bytes read, 2 seeks
[  23.368][d][cplayer] Done terminating demuxers.
[  23.368][v][cplayer] finished playback, success (reason 3)
[  23.368][i][cplayer] 
[  23.368][i][cplayer] Exiting... (Quit)
[  23.369][d][console] Exiting...
[  23.369][d][cplayer] Run command: change-list, flags=64, args=[name="shared-script-properties", operation="remove", value="osc-margins"]
[  23.369][v][cplayer] Set property: shared-script-properties -> 1
[  23.369][d][stats] Exiting...
[  23.370][d][ytdl_hook] Exiting...
[  23.370][d][osc] Exiting...
[  23.384][d][vo/gpu] flushing shader cache
[  23.393][v][vo/gpu/wayland] Deregistering output AUO 0x2992 (0x4)
